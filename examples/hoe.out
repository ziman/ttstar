-- vim: ft=agda

### Desugared ###

T : *

A : T

B : T

Op : (x : -R-  T) -> (y : -R-  T) -> T

id : (_ :: T) -> T
id = \t :: T. t

const_A : (_ :: T) -> T
const_A = \_ :: T. A

f : (g :: (_ :: T) -> T) -> (z :: T) -> (h :: (_ :: T) -> T) -> (w :: T) -> T
f = \g :: (_ :: T) -> T. \z :: T. \h :: (_ :: T) -> T. \w :: T. (Op  (g  z)  (h  w))

main  -R-  T
main = (f  id  B  const_A  B)

### Metaified ###

T :?1: *

A :?2: T

B :?3: T

Op :?4: (x :?5::!R: T) -> (y :?6::!R: T) -> T

id :?7: (_ :?9::?8: T) -> T
id = \t :?11::?10: T. t

const_A :?12: (_ :?14::?13: T) -> T
const_A = \_ :?16::?15: T. A

f :?17: (g :?21::?18: (_ :?20::?19: T) -> T) -> (z :?23::?22: T) -> (h :?27::?24: (_ :?26::?25: T) -> T) -> (w :?29::?28: T) -> T
f = \g :?33::?30: (_ :?32::?31: T) -> T. \z :?35::?34: T. \h :?39::?36: (_ :?38::?37: T) -> T. \w :?41::?40: T. (Op -?44-  -?45- (g -?46-  -?47- z) -?42-  -?43- (h -?48-  -?49- w))

main :!R: T
main = (f -?56-  -?57- id -?54-  -?55- B -?52-  -?53- const_A -?50-  -?51- B)

### Inferred definitions ###

A :?2: T
B :?3: T
Op :?4: (x :?5::!R: T) -> (y :?6::!R: T) -> T
T :?1: *
const_A :?12: (_ :?14::?13: T) -> T
  [] -> [?2,!R]
  [?13] -> [?15]
  [?14] -> [?16]
  [?15] -> [?13]
  [?16] -> [?14]

f :?17: (g :?21::?18: (_ :?20::?19: T) -> T) -> (z :?23::?22: T) -> (h :?27::?24: (_ :?26::?25: T) -> T) -> (w :?29::?28: T) -> T
  [] -> [?4,?5,?6,?18,?24,?30,?36,?42,?43,?44,?45,!R]
  [?19] -> [?31]
  [?20] -> [?32]
  [?21] -> [?33]
  [?22] -> [?34]
  [?23] -> [?35]
  [?25] -> [?37]
  [?26] -> [?38]
  [?27] -> [?39]
  [?28] -> [?40]
  [?29] -> [?41]
  [?31] -> [?19,?34,?47]
  [?32] -> [?20,?46]
  [?33] -> [?21]
  [?34] -> [?22]
  [?35] -> [?23]
  [?37] -> [?25,?40,?49]
  [?38] -> [?26,?48]
  [?39] -> [?27]
  [?40] -> [?28]
  [?41] -> [?29]
  [?47] -> [?31,?32]
  [?49] -> [?37,?38]

id :?7: (_ :?9::?8: T) -> T
  [] -> [?8,?10,!R]
  [?9] -> [?11]
  [?11] -> [?9]

main :!R: T
  [] -> [?2_3,?3,?4_1,?5_1,?6_1,?7,?8_2,?9,?9_2,?10_2,?11_2,?12,?17,?18_1,?19_1,?20,?20_1,?21,?22_1,?23,?24_1,?27,?30_1,?31_1,?32_1,?34_1,?36_1,?42_1,?43_1,?44_1,?45_1,?46_1,?47_1,?52,?53,?54,?55,?56,?57,!R]
  [?13_3] -> [?14,?15_3,?25_1]
  [?14_3] -> [?16_3,?26_1]
  [?15_3] -> [?13_3]
  [?16_3] -> [?14_3]
  [?21_1] -> [?33_1]
  [?23_1] -> [?35_1]
  [?25_1] -> [?13_3,?26,?37_1]
  [?26_1] -> [?14_3,?38_1]
  [?27_1] -> [?39_1]
  [?28_1] -> [?29,?40_1,?51]
  [?29] -> [?50]
  [?29_1] -> [?41_1]
  [?33_1] -> [?21_1]
  [?35_1] -> [?23_1]
  [?37_1] -> [?25_1,?40_1,?49_1]
  [?38_1] -> [?26_1,?48_1]
  [?39_1] -> [?27_1]
  [?40_1] -> [?28_1]
  [?41_1] -> [?29_1]
  [?49_1] -> [?37_1,?38_1]
  [?51] -> [?28_1,?29]


### Constraints ###

[] -> [?2,?2_3,?3,?4,?4_1,?5,?5_1,?6,?6_1,?7,?8,?8_2,?9,?9_2,?10,?10_2,?11_2,?12,?17,?18,?18_1,?19_1,?20,?20_1,?21,?22_1,?23,?24,?24_1,?27,?30,?30_1,?31_1,?32_1,?34_1,?36,?36_1,?42,?42_1,?43,?43_1,?44,?44_1,?45,?45_1,?46_1,?47_1,?52,?53,?54,?55,?56,?57,!R]
[?9] -> [?11]
[?11] -> [?9]
[?13] -> [?15]
[?13_3] -> [?14,?15_3,?25_1]
[?14] -> [?16]
[?14_3] -> [?16_3,?26_1]
[?15] -> [?13]
[?15_3] -> [?13_3]
[?16] -> [?14]
[?16_3] -> [?14_3]
[?19] -> [?31]
[?20] -> [?32]
[?21] -> [?33]
[?21_1] -> [?33_1]
[?22] -> [?34]
[?23] -> [?35]
[?23_1] -> [?35_1]
[?25] -> [?37]
[?25_1] -> [?13_3,?26,?37_1]
[?26] -> [?38]
[?26_1] -> [?14_3,?38_1]
[?27] -> [?39]
[?27_1] -> [?39_1]
[?28] -> [?40]
[?28_1] -> [?29,?40_1,?51]
[?29] -> [?41,?50]
[?29_1] -> [?41_1]
[?31] -> [?19,?34,?47]
[?32] -> [?20,?46]
[?33] -> [?21]
[?33_1] -> [?21_1]
[?34] -> [?22]
[?35] -> [?23]
[?35_1] -> [?23_1]
[?37] -> [?25,?40,?49]
[?37_1] -> [?25_1,?40_1,?49_1]
[?38] -> [?26,?48]
[?38_1] -> [?26_1,?48_1]
[?39] -> [?27]
[?39_1] -> [?27_1]
[?40] -> [?28]
[?40_1] -> [?28_1]
[?41] -> [?29]
[?41_1] -> [?29_1]
[?47] -> [?31,?32]
[?49] -> [?37,?38]
[?49_1] -> [?37_1,?38_1]
[?51] -> [?28_1,?29]

### Solution ###

[?2,?2_3,?3,?4,?4_1,?5,?5_1,?6,?6_1,?7,?8,?8_2,?9,?9_2,?10,?10_2,?11,?11_2,?12,?17,?18,?18_1,?19_1,?20,?20_1,?21,?22_1,?23,?24,?24_1,?27,?30,?30_1,?31_1,?32,?32_1,?33,?34_1,?35,?36,?36_1,?39,?42,?42_1,?43,?43_1,?44,?44_1,?45,?45_1,?46,?46_1,?47_1,?52,?53,?54,?55,?56,?57,!R]

### Annotated ###

T :E: *

A :R: T

B :R: T

Op :R: (x :R::R: T) -> (y :R::R: T) -> T

id :R: (_ :R::R: T) -> T
id = \t :R::R: T. t

const_A :R: (_ :E::E: T) -> T
const_A = \_ :E::E: T. A

f :R: (g :R::R: (_ :R::E: T) -> T) -> (z :R::E: T) -> (h :R::R: (_ :E::E: T) -> T) -> (w :E::E: T) -> T
f = \g :R::R: (_ :R::E: T) -> T. \z :R::E: T. \h :R::R: (_ :E::E: T) -> T. \w :E::E: T. (Op -R-  -R- (g -R-  -E- z) -R-  -R- (h -E-  -E- w))

main :R: T
main = (f -R-  -R- id -R-  -R- B -R-  -R- const_A -E-  -E- B)

### Pruned ###

id = \t. t

const_A = A

f = \g. \z. \h. (Op  (g  ____)  h)

main = (f  id  B  const_A)

### Normal forms ###

unerased:
  (Op  B  A)
erased:
  (Op  ____  A)
