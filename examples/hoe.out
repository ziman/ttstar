-- vim: ft=agda

### Desugared ###

postulate T : *

postulate A : T

postulate B : T

postulate Op : (x  -R-  T) -> (y  -R-  T) -> T

id : (_ : T) -> T 
  pat (x : T).
    id x = x

const_A : (_ : T) -> T 
  pat (x : T).
    const_A x = A

f : (_ : (_ : T) -> T) -> (_ : T) -> (_ : (_ : T) -> T) -> (_ : T) -> T 
  pat (g : (_ : T) -> T) (z : T) (h : (_ : T) -> T) (w : T).
    f g z h w = Op (g z) (h w)

main  -R-  T 
  main = f id B const_A B

### Metaified ###

postulate T :?1: *

postulate A :?2: T

postulate B :?3: T

postulate Op :?4: (x :!R: T) -> (y :!R: T) -> T

id :?5: (_ :?6: T) -> T 
  pat (x :?7: T).
    id -?8- x = x

const_A :?9: (_ :?10: T) -> T 
  pat (x :?11: T).
    const_A -?12- x = A

f :?13: (_ :?14: (_ :?15: T) -> T) -> (_ :?16: T) -> (_ :?17: (_ :?18: T) -> T) -> (_ :?19: T) -> T 
  pat (g :?20: (_ :?21: T) -> T) (z :?22: T) (h :?23: (_ :?24: T) -> T) (w :?25: T).
    f -?29- g -?28- z -?27- h -?26- w = Op -?31- (g -?32- z) -?30- (h -?33- w)

main :!R: T 
  main = f -?37- id -?36- B -?35- const_A -?34- B

### Inferred definitions ###

postulate A :?2: T

postulate B :?3: T

postulate Op :?4: (x :!R: T) -> (y :!R: T) -> T

postulate T :?1: *

const_A :?9: (_ :?10: T) -> T 
  pat (x :?11: T).
    const_A -?12- x = A
  [] -> [?2,!R]
  [?10] -> [?12]
  [?11] -> [?10]
  [?12] -> [?10]

f :?13: (_ :?14: (_ :?15: T) -> T) -> (_ :?16: T) -> (_ :?17: (_ :?18: T) -> T) -> (_ :?19: T) -> T 
  pat (g :?20: (_ :?21: T) -> T) (z :?22: T) (h :?23: (_ :?24: T) -> T) (w :?25: T).
    f -?29- g -?28- z -?27- h -?26- w = Op -?31- (g -?32- z) -?30- (h -?33- w)
  [] -> [?4,?14,?17,?20,?23,?27,?29,?30,?31,!R]
  [?15] -> [?21]
  [?16] -> [?28]
  [?18] -> [?24]
  [?19] -> [?26]
  [?21] -> [?15,?22,?32]
  [?22] -> [?16]
  [?24] -> [?18,?25,?33]
  [?25] -> [?19]
  [?26] -> [?19]
  [?28] -> [?16]
  [?32] -> [?21]
  [?33] -> [?24]

id :?5: (_ :?6: T) -> T 
  pat (x :?7: T).
    id -?8- x = x
  [] -> [?6,?7,?8,!R]

main :!R: T 
  main = f -?37- id -?36- B -?35- const_A -?34- B
  [] -> [?13,!R]
  [?6] -> [?15]
  [?10] -> [?18]
  [?14] -> [?5,?37]
  [?15] -> [?6]
  [?16] -> [?3,?36]
  [?17] -> [?9,?35]
  [?18] -> [?10]
  [?19] -> [?3,?34]
  [?34] -> [?19]
  [?35] -> [?17]
  [?36] -> [?16]
  [?37] -> [?14]


### Constraints ###

[] -> [?2,?4,?6,?7,?8,?13,?14,?17,?20,?23,?27,?29,?30,?31,!R]
[?6] -> [?15]
[?10] -> [?12,?18]
[?11] -> [?10]
[?12] -> [?10]
[?14] -> [?5,?37]
[?15] -> [?6,?21]
[?16] -> [?3,?28,?36]
[?17] -> [?9,?35]
[?18] -> [?10,?24]
[?19] -> [?3,?26,?34]
[?21] -> [?15,?22,?32]
[?22] -> [?16]
[?24] -> [?18,?25,?33]
[?25] -> [?19]
[?26] -> [?19]
[?28] -> [?16]
[?32] -> [?21]
[?33] -> [?24]
[?34] -> [?19]
[?35] -> [?17]
[?36] -> [?16]
[?37] -> [?14]

### Solution ###

[?2,?3,?4,?5,?6,?7,?8,?9,?13,?14,?15,?16,?17,?20,?21,?22,?23,?27,?28,?29,?30,?31,?32,?35,?36,?37,!R]

### Annotated ###

postulate T :E: *

postulate A :R: T

postulate B :R: T

postulate Op :R: (x :R: T) -> (y :R: T) -> T

id :R: (_ :R: T) -> T 
  pat (x :R: T).
    id -R- x = x

const_A :R: (_ :E: T) -> T 
  pat (x :E: T).
    const_A -E- x = A

f :R: (_ :R: (_ :R: T) -> T) -> (_ :R: T) -> (_ :R: (_ :E: T) -> T) -> (_ :E: T) -> T 
  pat (g :R: (_ :R: T) -> T) (z :R: T) (h :R: (_ :E: T) -> T) (w :E: T).
    f -R- g -R- z -R- h -E- w = Op -R- (g -R- z) -R- (h -E- w)

main :R: T 
  main = f -R- id -R- B -R- const_A -E- B

### Specialised ###

postulate T :!E: *

postulate A :!R: T

postulate B :!R: T

postulate Op :!R: (x :!R: T) -> (y :!R: T) -> T

id :!R: (_ :!R: T) -> T 
  pat (x :!R: T).
    id -!R- x = x

const_A :!R: (_ :!E: T) -> T 
  pat (x :!E: T).
    const_A -!E- x = A

f :!R: (_ :!R: (_ :!R: T) -> T) -> (_ :!R: T) -> (_ :!R: (_ :!E: T) -> T) -> (_ :!E: T) -> T 
  pat (g :!R: (_ :!R: T) -> T) (z :!R: T) (h :!R: (_ :!E: T) -> T) (w :!E: T).
    f -!R- g -!R- z -!R- h -!E- w = Op -!R- (g -!R- z) -!R- (h -!E- w)

main :!R: T 
  main = f -!R- id -!R- B -!R- const_A -!E- B

### Final annotation ###

postulate T :E: *

postulate A :R: T

postulate B :R: T

postulate Op :R: (x :R: T) -> (y :R: T) -> T

id :R: (_ :R: T) -> T 
  pat (x :R: T).
    id -R- x = x

const_A :R: (_ :E: T) -> T 
  pat (x :E: T).
    const_A -E- x = A

f :R: (_ :R: (_ :R: T) -> T) -> (_ :R: T) -> (_ :R: (_ :E: T) -> T) -> (_ :E: T) -> T 
  pat (g :R: (_ :R: T) -> T) (z :R: T) (h :R: (_ :E: T) -> T) (w :E: T).
    f -R- g -R- z -R- h -E- w = Op -R- (g -R- z) -R- (h -E- w)

main :R: T 
  main = f -R- id -R- B -R- const_A -E- B

### Verification ###

Verification successful.

### Pruned ###

postulate A

postulate B

postulate Op

id 
  pat (x).
    id x = x

const_A 
  const_A = A

f 
  pat (g) (z) (h).
    f g z h = Op (g z) h

main 
  main = f id B const_A

### Normal forms ###

unerased:
  Op B A
erased:
  Op B A
