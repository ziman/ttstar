-- vim: ft=agda

### Desugared ###

postulate T : Type

postulate A : T

postulate B : T

postulate Op : (x :R: T) -> (y :R: T) -> T

id : (x : T) -> T = (\x : T. x)

const_A : (x : T) -> T = (\x : T. A)

f : (g : (_ : T) -> T) -> (z : T) -> (h : (_ : T) -> T) -> (w : T) -> T = (\g : (_ : T) -> T. (\z : T. (\h : (_ : T) -> T. (\w : T. Op (g z) (h w)))))

main :R: T = f id B const_A B

### Metaified ###

postulate T :1: Type

postulate A :2: T

postulate B :3: T

postulate Op :4: (x :R: T) -> (y :R: T) -> T

id :5: (x :6: T) -> T = (\x :7: T. x)

const_A :8: (x :9: T) -> T = (\x :10: T. A)

f :11: (g :12: (_ :13: T) -> T) -> (z :14: T) -> (h :15: (_ :16: T) -> T) -> (w :17: T) -> T = (\g :18: (_ :19: T) -> T. (\z :20: T. (\h :21: (_ :22: T) -> T. (\w :23: T. Op -25- (g -26- z) -24- (h -27- w)))))

main :R: T = f -31- id -30- B -29- const_A -28- B

### Inferred definitions ###

postulate A :2: T {- constraints apply -}
  [1,2] -> [1]
  [2] -> [2]

postulate B :3: T {- constraints apply -}
  [1,3] -> [1]
  [3] -> [3]

postulate Op :4: (x :R: T) -> (y :R: T) -> T {- constraints apply -}
  [1,4] -> [1]
  [4] -> [4]

postulate T :1: Type {- constraints apply -}
  [1] -> [1]

postulate Type :R: Type

const_A :8: (x :9: T) -> T = (\x :10: T. A) {- constraints apply -}
  [1,2,8] -> [1]
  [1,8] -> [1]
  [2,8] -> [2]
  [8] -> [8]
  [8,9] -> [10]
  [8,10] -> [9]

f :11: (g :12: (_ :13: T) -> T) -> (z :14: T) -> (h :15: (_ :16: T) -> T) -> (w :17: T) -> T = (\g :18: (_ :19: T) -> T. (\z :20: T. (\h :21: (_ :22: T) -> T. (\w :23: T. Op -25- (g -26- z) -24- (h -27- w))))) {- constraints apply -}
  [1,4,11] -> [1]
  [1,11] -> [1]
  [1,11,18] -> [1]
  [1,11,19,20] -> [1]
  [1,11,21] -> [1]
  [1,11,22,23] -> [1]
  [4,11] -> [4]
  [11] -> [11,24,25]
  [11,12] -> [18]
  [11,13] -> [19]
  [11,14] -> [20]
  [11,15] -> [21]
  [11,16] -> [22]
  [11,17] -> [23]
  [11,18] -> [12,18]
  [11,19] -> [13,26]
  [11,19,20] -> [20]
  [11,20] -> [14]
  [11,21] -> [15,21]
  [11,22] -> [16,27]
  [11,22,23] -> [23]
  [11,23] -> [17]
  [11,26] -> [19]
  [11,27] -> [22]

id :5: (x :6: T) -> T = (\x :7: T. x) {- constraints apply -}
  [1,5] -> [1]
  [1,5,7] -> [1]
  [5] -> [5]
  [5,6] -> [7]
  [5,7] -> [6,7]

main :R: T = f -31- id -30- B -29- const_A -28- B {- constraints apply -}
  [1] -> [1]
  [1,2,8,15] -> [1]
  [1,3,14] -> [1]
  [1,3,17] -> [1]
  [1,4,11] -> [1]
  [1,5,7,12] -> [1]
  [1,5,12] -> [1]
  [1,8,15] -> [1]
  [1,11] -> [1]
  [1,11,18] -> [1]
  [1,11,19,20] -> [1]
  [1,11,21] -> [1]
  [1,11,22,23] -> [1]
  [2,8,15] -> [2]
  [3,14] -> [3]
  [3,17] -> [3]
  [4,11] -> [4]
  [5,6,12] -> [7]
  [5,7,12] -> [6,7]
  [5,12] -> [5]
  [6] -> [13]
  [8,9,15] -> [10]
  [8,10,15] -> [9]
  [8,15] -> [8]
  [9] -> [16]
  [11] -> [11,24,25]
  [11,12] -> [18]
  [11,13] -> [19]
  [11,14] -> [20]
  [11,15] -> [21]
  [11,16] -> [22]
  [11,17] -> [23]
  [11,18] -> [12,18]
  [11,19] -> [13,26]
  [11,19,20] -> [20]
  [11,20] -> [14]
  [11,21] -> [15,21]
  [11,22] -> [16,27]
  [11,22,23] -> [23]
  [11,23] -> [17]
  [11,26] -> [19]
  [11,27] -> [22]
  [12] -> [31]
  [13] -> [6]
  [14] -> [30]
  [15] -> [29]
  [16] -> [9]
  [17] -> [28]
  [28] -> [17]
  [29] -> [15]
  [30] -> [14]
  [31] -> [12]


### Constraints ###

[1] -> [1]
[1,2,8,15] -> [1]
[1,3,14] -> [1]
[1,3,17] -> [1]
[1,4,11] -> [1]
[1,5,7,12] -> [1]
[1,5,12] -> [1]
[1,8,15] -> [1]
[1,11] -> [1]
[1,11,18] -> [1]
[1,11,19,20] -> [1]
[1,11,21] -> [1]
[1,11,22,23] -> [1]
[2,8,15] -> [2]
[3,14] -> [3]
[3,17] -> [3]
[4,11] -> [4]
[5,6,12] -> [7]
[5,7,12] -> [6,7]
[5,12] -> [5]
[6] -> [13]
[8,9,15] -> [10]
[8,10,15] -> [9]
[8,15] -> [8]
[9] -> [16]
[11] -> [11,24,25]
[11,12] -> [18]
[11,13] -> [19]
[11,14] -> [20]
[11,15] -> [21]
[11,16] -> [22]
[11,17] -> [23]
[11,18] -> [12,18]
[11,19] -> [13,26]
[11,19,20] -> [20]
[11,20] -> [14]
[11,21] -> [15,21]
[11,22] -> [16,27]
[11,22,23] -> [23]
[11,23] -> [17]
[11,26] -> [19]
[11,27] -> [22]
[12] -> [31]
[13] -> [6]
[14] -> [30]
[15] -> [29]
[16] -> [9]
[17] -> [28]
[28] -> [17]
[29] -> [15]
[30] -> [14]
[31] -> [12]

### Solution ###

[R]

### Annotated ###

postulate T :E: Type

postulate A :E: T

postulate B :E: T

postulate Op :E: (x :R: T) -> (y :R: T) -> T

id :E: (x :E: T) -> T = (\x :E: T. x)

const_A :E: (x :E: T) -> T = (\x :E: T. A)

f :E: (g :E: (_ :E: T) -> T) -> (z :E: T) -> (h :E: (_ :E: T) -> T) -> (w :E: T) -> T = (\g :E: (_ :E: T) -> T. (\z :E: T. (\h :E: (_ :E: T) -> T. (\w :E: T. Op -E- (g -E- z) -E- (h -E- w)))))

main :R: T = f -E- id -E- B -E- const_A -E- B

### Specialised ###

postulate T :E: Type

postulate A :E: T

postulate B :E: T

postulate Op :E: (x :R: T) -> (y :R: T) -> T

id :E: (x :E: T) -> T = (\x :E: T. x)

const_A :E: (x :E: T) -> T = (\x :E: T. A)

f :E: (g :E: (_ :E: T) -> T) -> (z :E: T) -> (h :E: (_ :E: T) -> T) -> (w :E: T) -> T = (\g :E: (_ :E: T) -> T. (\z :E: T. (\h :E: (_ :E: T) -> T. (\w :E: T. Op -E- (g -E- z) -E- (h -E- w)))))

main :R: T = f -E- id -E- B -E- const_A -E- B

### Final annotation ###

postulate T :E: Type

postulate A :E: T

postulate B :E: T

postulate Op :E: (x :R: T) -> (y :R: T) -> T

id :E: (x :E: T) -> T = (\x :E: T. x)

const_A :E: (x :E: T) -> T = (\x :E: T. A)

f :E: (g :E: (_ :E: T) -> T) -> (z :E: T) -> (h :E: (_ :E: T) -> T) -> (w :E: T) -> T = (\g :E: (_ :E: T) -> T. (\z :E: T. (\h :E: (_ :E: T) -> T. (\w :E: T. Op -E- (g -E- z) -E- (h -E- w)))))

main :R: T = f -E- id -E- B -E- const_A -E- B

### Verification ###

Verification successful.

### Pruned ###

main = f

### Normal forms ###

unerased:
  Op B A
erased:
