-- vim: ft=agda

postulate Void : *.

postulate Maybe : * -> *.
postulate Just : (a : *) -> (x : a) -> Maybe a.
postulate Nothing : (a : *) -> Maybe a.

postulate Bool : *.
postulate True : Bool.
postulate False : Bool.

retTy (x : Maybe Bool) : *
    = case (x) of
        Just    (a : *) (t : a) -> Bool,
        Nothing (a : *)         -> *.

f (x : Maybe Bool) : retTy x
    = case (x) of
        Just    (a : *) (b : a)  -> b,
        Nothing (a : *)          -> Bool.

main :R: Bool
    = f (Just Bool False).
