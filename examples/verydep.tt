-- vim: ft=ttstar

postulate Void : Type

data Maybe : Type -> Type where
    Just : (a : Type) -> (x : a) -> Maybe a
    Nothing : (a : Type) -> Maybe a

data Bool : Type where
    True : Bool
    False : Bool

retTy : (x : Maybe Bool) -> Type
  (t : Bool)
    retTy (Just [Bool] t) = Bool
  retTy (Nothing [Bool]) = Type

f : (x : Maybe Bool) -> retTy x
  (b : Bool)
    f (Just [Bool] b) = b
  f (Nothing [Bool]) = Bool

main : Bool
    = f (Just Bool False)
