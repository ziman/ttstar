(require-extension matchable)
(define Type '(Type))
(print
  (letrec* (
    (B `(B))
    (T `(T))
    (F `(F))
    (K `(K))
    (P (lambda (_x0)
      `(P ,_x0)))
    (Q (lambda (_x1)
      `(Q ,_x1)))
    (f (lambda (_e0)
      (match (list _e0)
        [(('c x))
          c])))
    (main (f (P T)))
  )
    main))
