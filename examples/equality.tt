-- vim: ft=idris

data Bool : Type where
  T : Bool,
  F : Bool.

data Id : (a : Type) -> (x : a) -> (y : a) -> Type where
  Refl : (a : Type) -> (x : a) -> Id a x x.

not : Bool -> Bool.
not T = F,
not F = T.

-- a proof that pointwise, not.not = id
notnot : (x : Bool) -> Id Bool x (not (not x)).
notnot T = Refl Bool T,
notnot F = Refl Bool F.

main : Id Bool F (not (not F)) = notnot F.
