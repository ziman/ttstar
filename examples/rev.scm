(print
  (letrec* (
    (subst (lambda (w)
      w))
    (T (list 'T))
    (F (list 'F))
    (Nil (list 'Nil))
    (Cons (lambda (x)
      (lambda (xs)
        (list 'Cons x xs))))
    (RNil (list 'RNil))
    (RSnoc (lambda (x)
      (lambda (rxs)
        (list 'RSnoc x rxs))))
    (rev_ (lambda (rxs)
      (lambda (ys)
        (case (car ys)
          ((Nil) (subst rxs))
          ((Cons) (let* (
            (_args-y (cdr ys))
            (y (car _args-y))
          )
            (let* (
              (_args-ys_ (cdr _args-y))
              (ys_ (car _args-ys_))
            )
              (subst ((rev_ ((RSnoc y) rxs)) ys_)))))))))
    (rev (lambda (xs)
      ((rev_ RNil) xs)))
    (reverse_ (lambda (rxs)
      (case (car rxs)
        ((RNil) Nil)
        ((RSnoc) (let* (
          (_args-x (cdr rxs))
          (x (car _args-x))
        )
          (let* (
            (_args-rxs_ (cdr _args-x))
            (rxs_ (car _args-rxs_))
          )
            ((Cons x) (reverse_ rxs_))))))))
    (reverse_TT (lambda (xs)
      (reverse_ (rev xs))))
    (main (reverse_TT ((Cons T) ((Cons F) ((Cons T) ((Cons F) Nil))))))
  )
    main))
(newline)
