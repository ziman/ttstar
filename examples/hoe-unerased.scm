(require-extension matchable)
(define Type '(Type))
(print
  (letrec* (
    (T `(T))
    (A `(A))
    (B `(B))
    (Op (lambda (x)
      (lambda (y)
        `(Op ,x ,y))))
    (id (lambda (x)
      x))
    (const_A (lambda (x)
      A))
    (f (lambda (g)
      (lambda (z)
        (lambda (h)
          (lambda (w)
            ((Op (g z)) (h w)))))))
    (main ((((f id) B) const_A) B))
  )
    main))
