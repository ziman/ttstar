-- vim: ft=ttstar
  let
    postulate Z : N
    postulate S : (x) -> N
    postulate T : B
    postulate F : B
    postulate Cons : (_x0) -> (_x1) -> List
    postulate Nil : List
    not 
       T = F
       F = T
    foreign input
    genList 
       _ Z = Nil
       b (S n) = Cons b (genList (not b) n)
    postulate Nothing : Maybe
    postulate Just : Maybe
    semiDecEqB 
       T T = Just
       F F = Just
       T F = Nothing
       F T = Nothing
    semiDecEq 
       Nil (Cons _ _) = Nothing
       (Cons _ _) Nil = Nothing
       Nil Nil = Just
       (Cons x xs) (Cons y ys) = 
        let semiDecEq' 
           Nothing _ = Nothing
           _ Nothing = Nothing
           Just Just = Just
        in semiDecEq' (semiDecEqB x y) (semiDecEq xs ys)
  in semiDecEq (genList T input) (genList T input)
