-- vim: ft=ttstar
  let
    constructor Z : N
    constructor S : (x) -> N
    constructor T : B
    constructor F : B
    constructor Cons : (_x0) -> (_x1) -> List
    constructor Nil : List
    not 
       T = F
       F = T
    foreign input
    genList 
       _ Z = Nil
       b (S n) = Cons b (genList (not b) n)
    constructor Nothing : Maybe
    constructor Just : Maybe
    semiDecEqB 
       T T = Just
       F F = Just
       T F = Nothing
       F T = Nothing
    semiDecEq 
       Nil (Cons _ _) = Nothing
       (Cons _ _) Nil = Nothing
       Nil Nil = Just
       (Cons x xs) (Cons y ys) = 
        let semiDecEq' 
           Nothing _ = Nothing
           _ Nothing = Nothing
           Just Just = Just
        in semiDecEq' (semiDecEqB x y) (semiDecEq xs ys)
    sampleList = genList T input
    main = semiDecEq sampleList sampleList
  in main
