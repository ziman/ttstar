(import (chicken process-context))
(require-extension matchable)
(define Type '(Type))
(define (number->peano z s i) (if (= i 0) (list z) (list s (number->peano z s (- i 1)))))
(define (rts-arg-peano z s i) (number->peano z s (string->number (list-ref (command-line-arguments) i))))
(define (rts-arg-read i) (read (open-input-string (list-ref (command-line-arguments) i))))
(print
  (letrec* (
    (Bool `(Bool))
    (T `(T))
    (F `(F))
    (Unit `(Unit))
    (MkUnit `(MkUnit))
    (not_TT (lambda (_e0)
      (match (list _e0)
        ((('T))
          F)
        ((('F))
          T))))
    (retTy (lambda (_e0)
      (match (list _e0)
        ((('T))
          Bool)
        ((('F))
          Unit))))
    (other (not_TT (letrec* ((_cf0 (lambda (_e0)
      (lambda (_e1)
        (match (list _e0 _e1)
          ((('T) ('F))
            T)
          ((('T) ('T))
            F)
          ((('F) x)
            x))))))
      ((_cf0 (not_TT F)) T))))
    (main (not_TT (letrec* ((f (lambda (_e0)
      (lambda (_e1)
        (match (list _e0 _e1)
          ((('F) ('MkUnit))
            MkUnit)
          ((('T) ('T))
            F)
          ((('T) ('F))
            other))))))
      ((f (not_TT F)) T))))
  )
    main))
