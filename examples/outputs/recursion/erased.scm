(import (chicken process-context))
(require-extension matchable)
(define Type '(Type))
(define (number->peano z s i) (if (= i 0) (list z) (list s (number->peano z s (- i 1)))))
(define (rts-arg-peano z s i) (number->peano z s (string->number (list-ref (command-line-arguments) i))))
(define (rts-arg-read i) (read (open-input-string (list-ref (command-line-arguments) i))))
(print
  (letrec* (
    (Z `(Z))
    (S (lambda (n)
      `(S ,n)))
    (VNil `(VNil))
    (VCons (lambda (xs)
      `(VCons ,xs)))
    (vlen (lambda (_e0)
      (match (list _e0)
        ((('VNil))
          Z)
        ((('VCons xs))
          (S (vlen xs))))))
    (testVec (VCons (VCons VNil)))
    (main (vlen testVec))
  )
    main))
