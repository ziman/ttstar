-- vim: ft=idris
  let
    postulate MkPair : (_x5) -> (_x6) -> Pair
    snd 
      [_] ([_] _ y) = y
    postulate MkSt : (run) -> State
    runState 
      [_] ([_] run) = run
    stBind 
      [_] ([_] f) g = 
        let
          stBind3 
            [_] s ([_] f) = f s
          stBind2 
            [_] g ([_] s x) = stBind3 s (g x)
        in MkSt (\s. stBind2 g (f s))
    foreign intS
    foreign intZ
    foreign intToNat
  in 
    let postulate TheWorld : RealWorld
    in snd (runState (stBind 
      let foreign nativePrint
      in MkSt (\w. MkPair w (nativePrint (intS (intS (intS (intS intZ)))))) (\_0. 
      let foreign nativePrint
      in MkSt (\w. MkPair w (nativePrint (intToNat (intS (intS (intS intZ)))))))) TheWorld)
