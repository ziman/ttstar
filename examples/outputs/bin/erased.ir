-- vim: ft=ttstar
let Z = constructor 0
  in let S = constructor 1
    in let True = constructor 0
      in let False = constructor 0
        in let I = constructor 0
          in let O = constructor 0
            in let N = constructor 0
              in let C = constructor 2
                in let TB = constructor 2
                  in let adb = \_pv0. \_pv1. \_pv2.
                    case _pv0 of
                      I => case _pv1 of
                        I => case _pv2 of
                          I => ((TB I) I)
                          O => ((TB I) O)
                        O => case _pv2 of
                          I => ((TB I) O)
                          O => ((TB O) I)
                      O => case _pv1 of
                        I => case _pv2 of
                          I => ((TB I) O)
                          O => ((TB O) I)
                        O => case _pv2 of
                          I => ((TB O) I)
                          O => ((TB O) O)
                    in let add' = \_pv0. \_pv1. \_pv2.
                      case _pv1 of
                        C _pv3 _pv4 => case _pv2 of
                          C _pv5 _pv6 => let f = \_pv7.
                            case _pv7 of
                              _ _pv8 _pv9 => ((C _pv9) (((add' _pv8) _pv4) _pv6))
                            in (f (((adb _pv0) _pv3) _pv5))
                        N => ((C _pv0) N)
                      in let add = \bx. \by. (((add' O) bx) by)
                        in let inputSize = foreign "(rts-arg-peano 'Z 'S 0)"
                          in let mkBin = \_pv0. \_pv1.
                            case _pv1 of
                              Z => N
                              _ => case _pv0 of
                                False => case _pv1 of
                                  S _pv2 => ((C O) ((mkBin True) _pv2))
                                True => case _pv1 of
                                  S _pv2 => ((C I) ((mkBin False) _pv2))
                            in let main = ((add ((mkBin True) inputSize)) ((mkBin False) inputSize))
                              in main
