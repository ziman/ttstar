-- vim: ft=ttstar

  let
    constructor Z : Nat
    constructor S : (x) -> Nat
    constructor True : Bool
    constructor False : Bool
    constructor I : Bit
    constructor O : Bit
    constructor N : Bin
    constructor C : (lsb) -> (rest) -> Bin
    constructor TB : (hi) -> (lo) -> TwoBits
    adb 
      adb O O O = TB O O
      adb I O O = TB O I
      adb O I O = TB O I
      adb O O I = TB O I
      adb I I O = TB I O
      adb I O I = TB I O
      adb O I I = TB I O
      adb I I I = TB I I
    add' 
      add' cb N N = C cb N
      add' cb (C xb xn) (C yb yn) = 
        let f 
          f ([_] hi lo) = C lo (add' hi xn yn)
        in f (adb cb xb yb)
    foreign inputSize
    mkBin 
      mkBin b Z = N
      mkBin True (S n) = C I (mkBin False n)
      mkBin False (S n) = C O (mkBin True n)
  in add' O (mkBin True inputSize) (mkBin False inputSize)
