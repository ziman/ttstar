-- vim: ft=ttstar

### Desugared ###

  let
    postulate Bool : Type
    postulate T : Bool
    postulate F : Bool
    postulate Unit : Type
    postulate MkUnit : Unit
    not : (_x0 : Bool) -> Unit 
       T = MkUnit
       F = MkUnit
    main : Unit = not T
  in main

### Evarified ###

  let
    postulate Bool :1: Type
    postulate T :2: Bool
    postulate F :3: Bool
    postulate Unit :4: Type
    postulate MkUnit :5: Unit
    not :6: (_x0 :7: Bool) -> Unit 
       -8- T = MkUnit
       -9- F = MkUnit
    main :10: Unit = not -11- T
  in main

### Constraints ###

[] -> [2,3,5,6,7,8,9,11,R]
[R] -> [10]

### Solution ###

[2,3,5,6,7,8,9,10,11,R]

### Annotated ###

  let
    postulate Bool :E: Type
    postulate T :R: Bool
    postulate F :R: Bool
    postulate Unit :E: Type
    postulate MkUnit :R: Unit
    not :R: (_x0 :R: Bool) -> Unit 
       -R- T = MkUnit
       -R- F = MkUnit
    main :R: Unit = not -R- T
  in main

### Specialised ###

  let
    postulate Bool :E: Type
    postulate T :R: Bool
    postulate F :R: Bool
    postulate Unit :E: Type
    postulate MkUnit :R: Unit
    not :R: (_x0 :R: Bool) -> Unit 
       -R- T = MkUnit
       -R- F = MkUnit
    main :R: Unit = not -R- T
  in main

### Final annotation ###

  let
    postulate Bool :E: Type
    postulate T :R: Bool
    postulate F :R: Bool
    postulate Unit :E: Type
    postulate MkUnit :R: Unit
    not :R: (_x0 :R: Bool) -> Unit 
       -R- T = MkUnit
       -R- F = MkUnit
    main :R: Unit = not -R- T
  in main

### Verification ###

Verification successful.

### Pruned ###

  let
    postulate T : Bool
    postulate F : Bool
    postulate MkUnit : Unit
    not 
       T = MkUnit
       F = MkUnit
    main = not T
  in main

### Normal forms ###

unerased:
  
  let
    postulate Unit : Type
    postulate MkUnit : Unit
  in MkUnit

erased:
  
  let postulate MkUnit : Unit
  in MkUnit

