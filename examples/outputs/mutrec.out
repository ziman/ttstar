-- vim: ft=idris

### Desugared ###

  let
    postulate Bool : Type
    postulate T : Bool
    postulate F : Bool
    g : (_x0 : Bool) -> Bool 
      [g] T = 
        let h : (_x1 : Bool) -> Bool 
          [h] F = g F
          [h] T = T
        in h F
      [g] F = T
    main : Bool = g T
  in main

### Evarified ###

  let
    postulate Bool :1: Type
    postulate T :2: Bool
    postulate F :3: Bool
    g :4: (_x0 :5: Bool) -> Bool 
      [g] -6- T = 
        let h :7: (_x1 :8: Bool) -> Bool 
          [h] -9- F = g -10- F
          [h] -11- T = T
        in h -12- F
      [g] -13- F = T
    main :14: Bool = g -15- T
  in main

### Constraints ###

[] -> [2,3,4,5,6,7,8,9,10,11,12,13,15,R]
[R] -> [14]

### Solution ###

[2,3,4,5,6,7,8,9,10,11,12,13,14,15,R]

### Annotated ###

  let
    postulate Bool :E: Type
    postulate T :R: Bool
    postulate F :R: Bool
    g :R: (_x0 :R: Bool) -> Bool 
      [g] -R- T = 
        let h :R: (_x1 :R: Bool) -> Bool 
          [h] -R- F = g -R- F
          [h] -R- T = T
        in h -R- F
      [g] -R- F = T
    main :R: Bool = g -R- T
  in main

### Specialised ###

  let
    postulate Bool :E: Type
    postulate T :R: Bool
    postulate F :R: Bool
    g :R: (_x0 :R: Bool) -> Bool 
      [g] -R- T = 
        let h :R: (_x1 :R: Bool) -> Bool 
          [h] -R- F = g -R- F
          [h] -R- T = T
        in h -R- F
      [g] -R- F = T
    main :R: Bool = g -R- T
  in main

### Final annotation ###

  let
    postulate Bool :E: Type
    postulate T :R: Bool
    postulate F :R: Bool
    g :R: (_x0 :R: Bool) -> Bool 
      [g] -R- T = 
        let h :R: (_x1 :R: Bool) -> Bool 
          [h] -R- F = g -R- F
          [h] -R- T = T
        in h -R- F
      [g] -R- F = T
    main :R: Bool = g -R- T
  in main

### Verification ###

Verification successful.

### Pruned ###

  let
    postulate T : Bool
    postulate F : Bool
    g 
      [_] T = 
        let h 
          [_] F = g F
          [_] T = T
        in h F
      [_] F = T
    main = g T
  in main

### Normal forms ###

unerased:
  
  let
    postulate Bool : Type
    postulate T : Bool
  in T

erased:
  
  let postulate T : Bool
  in T

