-- vim: ft=ttstar

  let
    constructor TyEq : (_x0) -> (_x1) -> Type
    constructor Refl : (a) -> TyEq a a
    coerce 
      coerce a [_] ([_] [_]) = (\x. x)
    sym 
      sym a [_] ([_] [_]) = Refl a
    loopy 
      loopy a b pf = 
        let w = (\x. coerce a (y) -> b pf x x)
        in w (coerce (_x9) -> b a (sym a (_x10) -> b pf) w)
    main = Type
  in main
