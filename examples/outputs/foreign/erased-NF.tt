-- vim: ft=ttstar

  let
    constructor Z : N
    constructor S : (x) -> N
    constructor T : B
    constructor F : B
    constructor Cons : (_x0) -> (_x1) -> List
    constructor Nil : List
    not 
      not T = F
      not F = T
    foreign input
    genList 
      genList b Z = Nil
      genList b (S n) = Cons b (genList (not b) n)
    constructor Nothing : Maybe
    constructor Just : Maybe
    semiDecEqB 
      semiDecEqB T T = Just
      semiDecEqB F F = Just
      semiDecEqB T F = Nothing
      semiDecEqB F T = Nothing
    semiDecEq 
      semiDecEq Nil (Cons b ys) = Nothing
      semiDecEq (Cons b xs) Nil = Nothing
      semiDecEq Nil Nil = Just
      semiDecEq (Cons x xs) (Cons y ys) = 
        let semiDecEq' 
          semiDecEq' Nothing pfT = Nothing
          semiDecEq' pfH Nothing = Nothing
          semiDecEq' Just Just = Just
        in semiDecEq' (semiDecEqB x y) (semiDecEq xs ys)
  in semiDecEq (genList T input) (genList T input)
