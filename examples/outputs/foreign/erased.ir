-- vim: ft=ttstar
let Z = constructor 0
  in let S = constructor 1
    in let T = constructor 0
      in let F = constructor 0
        in let Cons = constructor 2
          in let Nil = constructor 0
            in let not = \_pv0.
              case _pv0 of
                F => T
                T => F
              in let input = foreign "(rts-arg-peano 'Z 'S 0)"
                in let genList = \_pv0. \_pv1.
                  case _pv1 of
                    S _pv2 => ((Cons _pv0) ((genList (not _pv0)) _pv2))
                    Z => Nil
                  in let Nothing = constructor 0
                    in let Just = constructor 0
                      in let semiDecEqB = \_pv0. \_pv1.
                        case _pv0 of
                          F => case _pv1 of
                            F => Just
                            T => Nothing
                          T => case _pv1 of
                            F => Nothing
                            T => Just
                        in let semiDecEq = \_pv0. \_pv1.
                          case _pv0 of
                            Cons _pv2 _pv3 => case _pv1 of
                              Cons _pv4 _pv5 => let semiDecEq' = \_pv6. \_pv7.
                                case _pv6 of
                                  Nothing => Nothing
                                  _ => case _pv7 of
                                    Nothing => Nothing
                                    _ => case _pv6 of
                                      Just => case _pv7 of
                                        Just => Just
                                in ((semiDecEq' ((semiDecEqB _pv2) _pv4)) ((semiDecEq _pv3) _pv5))
                              Nil => Nothing
                            Nil => case _pv1 of
                              Cons _pv2 _pv3 => Nothing
                              Nil => Just
                          in let sampleList = ((genList T) input)
                            in let main = ((semiDecEq sampleList) sampleList)
                              in main
