-- vim: ft=ttstar

  let
    constructor Z : Nat
    constructor S : (x) -> Nat
    plus 
      plus Z m = m
      plus (S n) m = S (plus n m)
    const = (\x. (\y. x))
    main = 
      let
        apply 
          apply f Z = f Z
          apply f (S x) = f (S x)
        postulate Q : Nat
        three = 3
      in plus (apply (\x. x) 2) (apply (const Q) three)
  in main
