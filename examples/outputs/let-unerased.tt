-- vim: ft=ttstar
  let
    postulate Nat : Type
    postulate Z : Nat
    postulate S : (x) -> Nat
    plus 
       Z m = m
       (S n) m = S (plus n m)
    id = (\x. x)
    const = (\x. (\y. x))
    main = 
      let apply 
         f Z = f Z
         f (S x) = f (S x)
      in 
        let
          postulate Q : Nat
          three = 3
        in plus (apply id 2) (apply (const Q) three)
  in main
