-- vim: ft=ttstar
  let
    postulate Bool : Type
    postulate True : Bool
    postulate False : Bool
    postulate Nat : Type
    postulate Z : Nat
    postulate S : (_x0) -> Nat
    plus 
      [_] Z n = n
      [_] (S m) n = S (plus m n)
    postulate Tag : Type
    postulate Even : Tag
    postulate Odd : Tag
    funTy 
      [_] Even = (_x4) -> Bool
      [_] Odd = (_x5) -> (_x6) -> Bool
    fun 
      [_] Even = (\n. 
        let f 
          [_] Z = True
          [_] (S m) = fun Odd m (plus m m)
        in f n)
      [_] Odd = (\n. (\q. 
        let f 
          [_] Z = False
          [_] (S m) = fun Even m
        in f n))
    even = fun Even
    odd = fun Odd
    main = even 8
  in main
