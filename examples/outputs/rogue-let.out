-- vim: ft=ttstar

### Desugared ###

  let
    postulate Bool : Type
    postulate T : Bool
    postulate F : Bool
    not : (_x0 : Bool) -> Bool 
      [not] T = F
      [not] F = T
    main : (_x1 : Bool) -> Bool = not
  in main

### Evarified ###

  let
    postulate Bool :1: Type
    postulate T :2: Bool
    postulate F :3: Bool
    not :4: (_x0 :5: Bool) -> Bool 
      [not] -6- T = F
      [not] -7- F = T
    main :8: (_x1 :9: Bool) -> Bool = not
  in main

### Constraints ###

[] -> [2,3,4,5,6,7,9,R]
[R] -> [8]

### Solution ###

[2,3,4,5,6,7,8,9,R]

### Annotated ###

  let
    postulate Bool :E: Type
    postulate T :R: Bool
    postulate F :R: Bool
    not :R: (_x0 :R: Bool) -> Bool 
      [not] -R- T = F
      [not] -R- F = T
    main :R: (_x1 :R: Bool) -> Bool = not
  in main

### Specialised ###

  let
    postulate Bool :E: Type
    postulate T :R: Bool
    postulate F :R: Bool
    not :R: (_x0 :R: Bool) -> Bool 
      [not] -R- T = F
      [not] -R- F = T
    main :R: (_x1 :R: Bool) -> Bool = not
  in main

### Final annotation ###

  let
    postulate Bool :E: Type
    postulate T :R: Bool
    postulate F :R: Bool
    not :R: (_x0 :R: Bool) -> Bool 
      [not] -R- T = F
      [not] -R- F = T
    main :R: (_x1 :R: Bool) -> Bool = not
  in main

### Verification ###

Verification successful.

### Pruned ###

  let
    postulate T : Bool
    postulate F : Bool
    not 
      [_] T = F
      [_] F = T
    main = not
  in main

### Normal forms ###

unerased:
  
  let
    postulate Bool : Type
    postulate T : Bool
    postulate F : Bool
    not : (_x0 : Bool) -> Bool 
      [not] T = F
      [not] F = T
  in not

erased:
  
  let
    postulate T : Bool
    postulate F : Bool
    not 
      [_] T = F
      [_] F = T
  in not

