-- vim: ft=ttstar
  let
    constructor Z : Nat
    constructor S : (x) -> Nat
    constructor True : Bool
    constructor False : Bool
    constructor N : Bin
    constructor C : (rest) -> Bin
    add' 
      [_] N N = C N
      [_] (C xn) (C yn) = 
        let f = C (add' xn yn)
        in f
    foreign inputSize
    mkBin 
      [_] _ Z = N
      [_] True (S n) = C (mkBin False n)
      [_] False (S n) = C (mkBin True n)
  in add' (mkBin True inputSize) (mkBin False inputSize)
