-- vim: ft=ttstar
  let
    constructor Z : Nat
    constructor S : (x) -> Nat
    constructor True : Bool
    constructor False : Bool
    constructor N : Bin
    constructor C : (rest) -> Bin
    add' 
       {_} N N = C N
       ({_} w) (C xn) (C yn) = 
        let f 
          = C (add' w xn yn)
        in f
    foreign inputSize
    mkBin 
       _ Z = N
       True (S n) = C (mkBin False n)
       False (S n) = C (mkBin True n)
  in add' inputSize (mkBin True inputSize) (mkBin False inputSize)
