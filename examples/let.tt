-- vim: ft=idris

postulate Nat : *.
postulate Z : Nat.
postulate S : (n :R: Nat) -> Nat.

plus : Nat -> Nat -> Nat.
  pat (n : Nat).
    plus Z n = n,
  pat (m : Nat) (n : Nat).
    plus (S m) n = S (plus m n).

id : Nat -> Nat.
  id = \x : Nat. x.

const (x : Nat) (y : Nat) : Nat = x.

main :R: Nat
    = let apply (f : Nat -> Nat) (x : Nat) : Nat = f x.
   in let postulate Q : Nat.
   in let three : Nat = 3.
   in plus (apply id 2) (apply (const Q) three).
