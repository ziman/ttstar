-- vim: ft=idris

### Desugared ###

  let
    postulate N : Type
    postulate Z : N
    postulate S : (x :R: N) -> N
    postulate Vec : (_x0 : N) -> (_x1 : Type) -> Type
    postulate Nil : (a : Type) -> Vec Z a
    postulate Cons : (a : Type) -> (n : N) -> (x : a) -> (xs : Vec n a) -> Vec (S n) a
    vlen : (n : N) -> (xs : Vec n N) -> N = \(n : N) (xs : Vec n N).
      case xs of
        Nil (a : Type) =>
          case a of [N] =>
            case n of [Z] =>
              n
        Cons (a : Type) (m : N) (y : N) (ys : Vec m N) =>
          case a of [N] =>
            case n of [S m] =>
              S (vlen m ys)
    main : N = vlen 1 (Cons N Z 3 (Nil N))
  in main

### Metaified ###

  let
    postulate N :1: Type
    postulate Z :2: N
    postulate S :3: (x :R: N) -> N
    postulate Vec :4: (_x0 :5: N) -> (_x1 :6: Type) -> Type
    postulate Nil :7: (a :8: Type) -> Vec -10- Z -9- a
    postulate Cons :11: (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
    vlen :21: (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N = \(n :26: N) (xs :27: Vec -29- n -28- N).
      case -30- xs of
        Nil/31 (a :32: Type) =>
          case -33- a of [N] =>
            case -34- n of [Z] =>
              n
        Cons/35 (a :36: Type) (m :37: N) (y :38: N) (ys :39: Vec -41- m -40- N) =>
          case -42- a of [N] =>
            case -43- n of [S -44- m] =>
              S -45- (vlen -47- m -46- ys)
    main :48: N = vlen -50- 1 -49- (Cons -55- N -54- Z -53- 3 -52- (Nil -59- N))
  in main

### Constraints ###

ttstar: Traceback:
1. In context:
  Type : Type

("LET",
  let
    postulate N :1: Type
    postulate Z :2: N
    postulate S :3: (x :R: N) -> N
    postulate Vec :4: (_x0 :5: N) -> (_x1 :6: Type) -> Type
    postulate Nil :7: (a :8: Type) -> Vec -10- Z -9- a
    postulate Cons :11: (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
    vlen :21: (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N = \(n :26: N) (xs :27: Vec -29- n -28- N).
      case -30- xs of
        Nil/31 (a :32: Type) =>
          case -33- a of [N] =>
            case -34- n of [Z] =>
              n
        Cons/35 (a :36: Type) (m :37: N) (y :38: N) (ys :39: Vec -41- m -40- N) =>
          case -42- a of [N] =>
            case -43- n of [S -44- m] =>
              S -45- (vlen -47- m -46- ys)
    main :48: N = vlen -50- 1 -49- (Cons -55- N -54- Z -53- 3 -52- (Nil -59- N))
  in main)

2. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("DEF-PATTERNS",vlen)

3. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("CASE-FUN",vlen)

4. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("CASE",vlen -26- n -27- xs,case -30- xs of
  Nil/31 (a :32: Type) =>
    case -33- a of [N] =>
      case -34- n of [Z] =>
        n
  Cons/35 (a :36: Type) (m :37: N) (y :38: N) (ys :39: Vec -41- m -40- N) =>
    case -42- a of [N] =>
      case -43- n of [S -44- m] =>
        S -45- (vlen -47- m -46- ys))

5. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("ALT-CTOR",Nil -32- a)

6. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("CASE",vlen -26- n -27- (Nil -32- a),case -33- a of [N] =>
  case -34- n of [Z] =>
    n)

7. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("ALT-FORCED",N)

8. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("CASE",vlen -26- n -27- (Nil -32- [N]),case -34- n of [Z] =>
  n)

9. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("ALT-FORCED",Z)

10. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("PLAIN-TERM",vlen -26- [Z] -27- (Nil -32- [N]),n)

11. In context:
  Cons : (a :12: Type) -> (n :13: N) -> (x :14: a) -> (xs :15: Vec -17- n -16- a) -> Vec -19- (S -20- n) -18- a
  N : Type
  Nil : (a :8: Type) -> Vec -10- Z -9- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :5: N) -> (_x1 :6: Type) -> Type
  Z : N
  vlen : (n :22: N) -> (xs :23: Vec -25- n -24- N) -> N

("VAR",n)

Error: UnknownName n

CallStack (from HasCallStack):
  error, called at Main.hs:130:38 in main:Main
