-- vim: ft=agda

### Desugared ###

Bool : *

True : Bool

False : Bool

Maybe : (_ : *) -> *

Just : (a : *) -> (_ : a) -> *

Nothing : (a : *) -> *

Nat : *

Z : Nat

S : (n  -R-  Nat) -> Nat

Plus : (x  -R-  Nat) -> (y  -R-  Nat) -> Nat

id : (_ : Nat) -> Nat
id = \y : Nat. y

const_3 : (_ : Nat) -> Nat
const_3 = \_ : Nat. 3

two : Nat
two = 2

f : (g : (_ : Nat) -> Nat) -> (z : Nat) -> (h : (_ : Nat) -> Nat) -> (w : Nat) -> Nat
f = \g : (_ : Nat) -> Nat. \z : Nat. \h : (_ : Nat) -> Nat. \w : Nat. (Plus (g z) (h w))

apply : (f : (_ : Nat) -> Nat) -> (_ : Nat) -> Nat
apply = \f : (_ : Nat) -> Nat. \x : Nat. (f x)

test_1 : Nat
test_1 = (Plus (apply id 2) (apply const_3 two))

test_2 : Nat
test_2 = (f id 2 const_3 1)

main  -R-  Nat
main = (Plus test_1 test_2)

### Metaified ###

Bool :?1: *

True :?2: Bool

False :?3: Bool

Maybe :?4: (_ :?5: *) -> *

Just :?6: (a :?7: *) -> (_ :?8: a) -> *

Nothing :?9: (a :?10: *) -> *

Nat :?11: *

Z :?12: Nat

S :?13: (n :!R: Nat) -> Nat

Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat

id :?15: (_ :?16: Nat) -> Nat
id = \y :?17: Nat. y

const_3 :?18: (_ :?19: Nat) -> Nat
const_3 = \_ :?20: Nat. 3

two :?27: Nat
two = 2

f :?32: (g :?33: (_ :?34: Nat) -> Nat) -> (z :?35: Nat) -> (h :?36: (_ :?37: Nat) -> Nat) -> (w :?38: Nat) -> Nat
f = \g :?39: (_ :?40: Nat) -> Nat. \z :?41: Nat. \h :?42: (_ :?43: Nat) -> Nat. \w :?44: Nat. (Plus -?48- (g -?50- z) -?46- (h -?52- w))

apply :?53: (f :?54: (_ :?55: Nat) -> Nat) -> (_ :?56: Nat) -> Nat
apply = \f :?57: (_ :?58: Nat) -> Nat. \x :?59: Nat. (f -?61- x)

test_1 :?62: Nat
test_1 = (Plus -?66- (apply -?70- id -?68- 2) -?64- (apply -?78- const_3 -?76- two))

test_2 :?79: Nat
test_2 = (f -?87- id -?85- 2 -?83- const_3 -?81- 1)

main :!R: Nat
main = (Plus -?97- test_1 -?95- test_2)

### Inferred definitions ###

Bool :?1: *
False :?3: Bool
Just :?6: (a :?7: *) -> (_ :?8: a) -> *
Maybe :?4: (_ :?5: *) -> *
Nat :?11: *
Nothing :?9: (a :?10: *) -> *
Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat
S :?13: (n :!R: Nat) -> Nat
True :?2: Bool
Z :?12: Nat
apply :?53: (f :?54: (_ :?55: Nat) -> Nat) -> (_ :?56: Nat) -> Nat
  [] -> [?54,?57,!R]
  [?55] -> [?58]
  [?56] -> [?59]
  [?58] -> [?55,?59,?60,?61]
  [?59] -> [?56]

const_3 :?18: (_ :?19: Nat) -> Nat
  [] -> [?12,?13,?21,?22,?23,?24,?25,?26,!R]
  [?19] -> [?20]
  [?20] -> [?19]

f :?32: (g :?33: (_ :?34: Nat) -> Nat) -> (z :?35: Nat) -> (h :?36: (_ :?37: Nat) -> Nat) -> (w :?38: Nat) -> Nat
  [] -> [?14,?33,?36,?39,?42,?45,?46,?47,?48,!R]
  [?34] -> [?40]
  [?35] -> [?41]
  [?37] -> [?43]
  [?38] -> [?44]
  [?40] -> [?34,?41,?49,?50]
  [?41] -> [?35]
  [?43] -> [?37,?44,?51,?52]
  [?44] -> [?38]

id :?15: (_ :?16: Nat) -> Nat
  [] -> [?16,?17,!R]

main :!R: Nat
  [] -> [?12_9,?12_10,?13_9,?13_10,?14,?14_9,?14_10,?15_9,?15_10,?16_9,?16_10,?17_9,?17_10,?18_9,?18_10,?19_9,?20_9,?21_9,?21_10,?22_9,?22_10,?23_9,?23_10,?24_9,?24_10,?25_9,?25_10,?26_9,?26_10,?27_9,?28_9,?29_9,?30_9,?31_9,?32_10,?33_10,?34_10,?35_10,?36_10,?39_10,?40_10,?41_10,?42_10,?45_10,?46_10,?47_10,?48_10,?49_10,?50_10,?53_9,?54_9,?55_9,?56_9,?57_9,?58_9,?59_9,?60_9,?61_9,?62,?63_9,?64_9,?65_9,?66_9,?67_9,?68_9,?69_9,?70_9,?71_9,?72_9,?73_9,?74_9,?75_9,?76_9,?77_9,?78_9,?79,?82_10,?83_10,?84_10,?85_10,?86_10,?87_10,?88_10,?89_10,?90_10,?91_10,?94,?95,?96,?97,!R]
  [?19_10] -> [?19_10,?20_10,?37_10]
  [?20_10] -> [?19_10]
  [?37_10] -> [?19_10,?37_10,?43_10]
  [?38_10] -> [?38_10,?44_10,?80_10,?81_10,?92_10,?93_10]
  [?43_10] -> [?37_10,?44_10,?51_10,?52_10]
  [?44_10] -> [?38_10]

test_1 :?62: Nat
  [] -> [?12,?12_4,?13,?13_4,?14,?15,?16,?16_2,?17_2,?18,?21_4,?22_4,?23_4,?24_4,?25_4,?26_4,?53,?54,?54_1,?54_3,?55,?55_1,?56,?56_1,?57_1,?57_3,?58_1,?59_1,?60_1,?61_1,?63,?64,?65,?66,?67,?68,?69,?70,?71,?72,?73,?74,?75,?77,?78,!R]
  [?19_4] -> [?19,?20_4,?55_3]
  [?20_4] -> [?19_4]
  [?55_3] -> [?19_4,?58_3]
  [?56_3] -> [?12_5,?13_5,?27,?28_5,?29_5,?30_5,?31_5,?59_3,?76]
  [?58_3] -> [?55_3,?59_3,?60_3,?61_3]
  [?59_3] -> [?56_3]

test_2 :?79: Nat
  [] -> [?12,?12_8,?13,?13_8,?14_6,?15,?16,?16_7,?17_7,?18,?21_8,?22_8,?23_8,?24_8,?25_8,?26_8,?32,?33,?33_6,?34,?34_6,?35,?35_6,?36,?36_6,?39_6,?40_6,?41_6,?42_6,?45_6,?46_6,?47_6,?48_6,?49_6,?50_6,?82,?83,?84,?85,?86,?87,?88,?89,?90,?91,!R]
  [?19_8] -> [?19,?20_8,?37_6]
  [?20_8] -> [?19_8]
  [?37_6] -> [?19_8,?37,?43_6]
  [?38] -> [?80]
  [?38_6] -> [?38,?44_6,?81,?92,?93]
  [?43_6] -> [?37_6,?44_6,?51_6,?52_6]
  [?44_6] -> [?38_6]

two :?27: Nat
  [] -> [?12,?13,?28,?29,?30,?31,!R]


### Constraints ###

[] -> [?12,?12_4,?12_8,?12_9,?12_10,?13,?13_4,?13_8,?13_9,?13_10,?14,?14_6,?14_9,?14_10,?15,?15_9,?15_10,?16,?16_2,?16_7,?16_9,?16_10,?17,?17_2,?17_7,?17_9,?17_10,?18,?18_9,?18_10,?19_9,?20_9,?21,?21_4,?21_8,?21_9,?21_10,?22,?22_4,?22_8,?22_9,?22_10,?23,?23_4,?23_8,?23_9,?23_10,?24,?24_4,?24_8,?24_9,?24_10,?25,?25_4,?25_8,?25_9,?25_10,?26,?26_4,?26_8,?26_9,?26_10,?27_9,?28,?28_9,?29,?29_9,?30,?30_9,?31,?31_9,?32,?32_10,?33,?33_6,?33_10,?34,?34_6,?34_10,?35,?35_6,?35_10,?36,?36_6,?36_10,?39,?39_6,?39_10,?40_6,?40_10,?41_6,?41_10,?42,?42_6,?42_10,?45,?45_6,?45_10,?46,?46_6,?46_10,?47,?47_6,?47_10,?48,?48_6,?48_10,?49_6,?49_10,?50_6,?50_10,?53,?53_9,?54,?54_1,?54_3,?54_9,?55,?55_1,?55_9,?56,?56_1,?56_9,?57,?57_1,?57_3,?57_9,?58_1,?58_9,?59_1,?59_9,?60_1,?60_9,?61_1,?61_9,?62,?63,?63_9,?64,?64_9,?65,?65_9,?66,?66_9,?67,?67_9,?68,?68_9,?69,?69_9,?70,?70_9,?71,?71_9,?72,?72_9,?73,?73_9,?74,?74_9,?75,?75_9,?76_9,?77,?77_9,?78,?78_9,?79,?82,?82_10,?83,?83_10,?84,?84_10,?85,?85_10,?86,?86_10,?87,?87_10,?88,?88_10,?89,?89_10,?90,?90_10,?91,?91_10,?94,?95,?96,?97,!R]
[?19] -> [?20]
[?19_4] -> [?19,?20_4,?55_3]
[?19_8] -> [?19,?20_8,?37_6]
[?19_10] -> [?19_10,?20_10,?37_10]
[?20] -> [?19]
[?20_4] -> [?19_4]
[?20_8] -> [?19_8]
[?20_10] -> [?19_10]
[?34] -> [?40]
[?35] -> [?41]
[?37] -> [?43]
[?37_6] -> [?19_8,?37,?43_6]
[?37_10] -> [?19_10,?37_10,?43_10]
[?38] -> [?44,?80]
[?38_6] -> [?38,?44_6,?81,?92,?93]
[?38_10] -> [?38_10,?44_10,?80_10,?81_10,?92_10,?93_10]
[?40] -> [?34,?41,?49,?50]
[?41] -> [?35]
[?43] -> [?37,?44,?51,?52]
[?43_6] -> [?37_6,?44_6,?51_6,?52_6]
[?43_10] -> [?37_10,?44_10,?51_10,?52_10]
[?44] -> [?38]
[?44_6] -> [?38_6]
[?44_10] -> [?38_10]
[?55] -> [?58]
[?55_3] -> [?19_4,?58_3]
[?56] -> [?59]
[?56_3] -> [?12_5,?13_5,?27,?28_5,?29_5,?30_5,?31_5,?59_3,?76]
[?58] -> [?55,?59,?60,?61]
[?58_3] -> [?55_3,?59_3,?60_3,?61_3]
[?59] -> [?56]
[?59_3] -> [?56_3]

### Solution ###

[?12,?12_4,?12_8,?12_9,?12_10,?13,?13_4,?13_8,?13_9,?13_10,?14,?14_6,?14_9,?14_10,?15,?15_9,?15_10,?16,?16_2,?16_7,?16_9,?16_10,?17,?17_2,?17_7,?17_9,?17_10,?18,?18_9,?18_10,?19_9,?20_9,?21,?21_4,?21_8,?21_9,?21_10,?22,?22_4,?22_8,?22_9,?22_10,?23,?23_4,?23_8,?23_9,?23_10,?24,?24_4,?24_8,?24_9,?24_10,?25,?25_4,?25_8,?25_9,?25_10,?26,?26_4,?26_8,?26_9,?26_10,?27_9,?28,?28_9,?29,?29_9,?30,?30_9,?31,?31_9,?32,?32_10,?33,?33_6,?33_10,?34,?34_6,?34_10,?35,?35_6,?35_10,?36,?36_6,?36_10,?39,?39_6,?39_10,?40,?40_6,?40_10,?41,?41_6,?41_10,?42,?42_6,?42_10,?45,?45_6,?45_10,?46,?46_6,?46_10,?47,?47_6,?47_10,?48,?48_6,?48_10,?49,?49_6,?49_10,?50,?50_6,?50_10,?53,?53_9,?54,?54_1,?54_3,?54_9,?55,?55_1,?55_9,?56,?56_1,?56_9,?57,?57_1,?57_3,?57_9,?58,?58_1,?58_9,?59,?59_1,?59_9,?60,?60_1,?60_9,?61,?61_1,?61_9,?62,?63,?63_9,?64,?64_9,?65,?65_9,?66,?66_9,?67,?67_9,?68,?68_9,?69,?69_9,?70,?70_9,?71,?71_9,?72,?72_9,?73,?73_9,?74,?74_9,?75,?75_9,?76_9,?77,?77_9,?78,?78_9,?79,?82,?82_10,?83,?83_10,?84,?84_10,?85,?85_10,?86,?86_10,?87,?87_10,?88,?88_10,?89,?89_10,?90,?90_10,?91,?91_10,?94,?95,?96,?97,!R]

### Annotated ###

Bool :E: *

True :E: Bool

False :E: Bool

Maybe :E: (_ :E: *) -> *

Just :E: (a :E: *) -> (_ :E: a) -> *

Nothing :E: (a :E: *) -> *

Nat :E: *

Z :R: Nat

S :R: (n :R: Nat) -> Nat

Plus :R: (x :R: Nat) -> (y :R: Nat) -> Nat

id :R: (_ :R: Nat) -> Nat
id = \y :R: Nat. y

const_3 :R: (_ :E: Nat) -> Nat
const_3 = \_ :E: Nat. 3

two :E: Nat
two = 2

f :R: (g :R: (_ :R: Nat) -> Nat) -> (z :R: Nat) -> (h :R: (_ :E: Nat) -> Nat) -> (w :E: Nat) -> Nat
f = \g :R: (_ :R: Nat) -> Nat. \z :R: Nat. \h :R: (_ :E: Nat) -> Nat. \w :E: Nat. (Plus -R- (g -R- z) -R- (h -E- w))

apply :R: (f :R: (_ :R: Nat) -> Nat) -> (_ :R: Nat) -> Nat
apply = \f :R: (_ :R: Nat) -> Nat. \x :R: Nat. (f -R- x)

test_1 :R: Nat
test_1 = (Plus -R- (apply -R- id -R- 2) -R- (apply -R- const_3 -E- two))

test_2 :R: Nat
test_2 = (f -R- id -R- 2 -R- const_3 -E- 1)

main :R: Nat
main = (Plus -R- test_1 -R- test_2)

### Pruned ###

id = \y. y

const_3 = 3

f = \g. \z. \h. (Plus (g z) h)

apply = \f. \x. (f x)

test_1 = (Plus (apply id 2) (apply const_3 ____))

test_2 = (f id 2 const_3)

main = (Plus test_1 test_2)

