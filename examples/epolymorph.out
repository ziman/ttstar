-- vim: ft=agda

### Desugared ###

Bool : *

True : Bool

False : Bool

Maybe : (_ : *) -> *

Just : (a : *) -> (_ : a) -> *

Nothing : (a : *) -> *

Nat : *

Z : Nat

S : (n  -R-  Nat) -> Nat

Plus : (x  -R-  Nat) -> (y  -R-  Nat) -> Nat

id : (_ : Nat) -> Nat
id = \y : Nat. y

const_3 : (_ : Nat) -> Nat
const_3 = \_ : Nat. 3

two : Nat
two = 2

f : (g : (_ : Nat) -> Nat) -> (z : Nat) -> (h : (_ : Nat) -> Nat) -> (w : Nat) -> Nat
f = \g : (_ : Nat) -> Nat. \z : Nat. \h : (_ : Nat) -> Nat. \w : Nat. (Plus (g z) (h w))

apply : (f : (_ : Nat) -> Nat) -> (_ : Nat) -> Nat
apply = \f : (_ : Nat) -> Nat. \x : Nat. (f x)

test_1 : Nat
test_1 = (Plus (apply id 2) (apply const_3 two))

test_2 : Nat
test_2 = (f id 2 const_3 1)

main  -R-  Nat
main = (Plus test_1 test_2)

### Metaified ###

Bool :?1: *

True :?2: Bool

False :?3: Bool

Maybe :?4: (_ :?5: *) -> *

Just :?6: (a :?7: *) -> (_ :?8: a) -> *

Nothing :?9: (a :?10: *) -> *

Nat :?11: *

Z :?12: Nat

S :?13: (n :!R: Nat) -> Nat

Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat

id :?15: (_ :?16: Nat) -> Nat
id = \y :?17: Nat. y

const_3 :?18: (_ :?19: Nat) -> Nat
const_3 = \_ :?20: Nat. 3

two :?24: Nat
two = 2

f :?27: (g :?28: (_ :?29: Nat) -> Nat) -> (z :?30: Nat) -> (h :?31: (_ :?32: Nat) -> Nat) -> (w :?33: Nat) -> Nat
f = \g :?34: (_ :?35: Nat) -> Nat. \z :?36: Nat. \h :?37: (_ :?38: Nat) -> Nat. \w :?39: Nat. (Plus -?41- (g -?42- z) -?40- (h -?43- w))

apply :?44: (f :?45: (_ :?46: Nat) -> Nat) -> (_ :?47: Nat) -> Nat
apply = \f :?48: (_ :?49: Nat) -> Nat. \x :?50: Nat. (f -?51- x)

test_1 :?52: Nat
test_1 = (Plus -?54- (apply -?56- id -?55- 2) -?53- (apply -?60- const_3 -?59- two))

test_2 :?61: Nat
test_2 = (f -?65- id -?64- 2 -?63- const_3 -?62- 1)

main :!R: Nat
main = (Plus -?70- test_1 -?69- test_2)

### Inferred definitions ###

Bool :?1: *
False :?3: Bool
Just :?6: (a :?7: *) -> (_ :?8: a) -> *
Maybe :?4: (_ :?5: *) -> *
Nat :?11: *
Nothing :?9: (a :?10: *) -> *
Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat
S :?13: (n :!R: Nat) -> Nat
True :?2: Bool
Z :?12: Nat
apply :?44: (f :?45: (_ :?46: Nat) -> Nat) -> (_ :?47: Nat) -> Nat
  [] -> [?45,?48,!R]+[]
  [?46] -> [?49]+[]
  [?47] -> [?50]+[]
  [?49] -> [?46,?50,?51]+[]
  [?50] -> [?47]+[]

const_3 :?18: (_ :?19: Nat) -> Nat
  [] -> [?12,?13,?21,?22,?23,!R]+[]
  [?19] -> [?20]+[]
  [?20] -> [?19]+[]

f :?27: (g :?28: (_ :?29: Nat) -> Nat) -> (z :?30: Nat) -> (h :?31: (_ :?32: Nat) -> Nat) -> (w :?33: Nat) -> Nat
  [] -> [?14,?28,?31,?34,?37,?40,?41,!R]+[]
  [?29] -> [?35]+[]
  [?30] -> [?36]+[]
  [?32] -> [?38]+[]
  [?33] -> [?39]+[]
  [?35] -> [?29,?36,?42]+[]
  [?36] -> [?30]+[]
  [?38] -> [?32,?39,?43]+[]
  [?39] -> [?33]+[]

id :?15: (_ :?16: Nat) -> Nat
  [] -> [?16,?17,!R]+[]

main :!R: Nat
  [] -> [?12_9,?12_10,?13_9,?13_10,?14,?14_9,?14_10,?15_9,?15_10,?16_9,?16_10,?17_9,?17_10,?18_9,?18_10,?21_9,?21_10,?22_9,?22_10,?23_9,?23_10,?27_10,?28_10,?29_10,?30_10,?31_10,?34_10,?35_10,?36_10,?37_10,?40_10,?41_10,?42_10,?44_9,?45_9,?46_9,?47_9,?48_9,?49_9,?50_9,?51_9,?52,?53_9,?54_9,?55_9,?56_9,?57_9,?58_9,?60_9,?61,?63_10,?64_10,?65_10,?66_10,?67_10,?69,?70,!R]+[?12_9,?13_9,?16_9,?16_10,?19_9,?20_9,?24_9,?25_9,?26_9,?28_10,?29_10,?30_10,?31_10,?45_9,?46_9,?47_9,?49_9,?50_9,?51_9,?59_9,!R]
  [?19_10] -> [?19_10,?20_10,?32_10]+[?19_10]
  [?20_10] -> [?19_10]+[]
  [?32_10] -> [?19_10,?32_10,?38_10]+[?32_10]
  [?33_10] -> [?12_10,?13_10,?33_10,?39_10,?62_10,?68_10]+[?33_10]
  [?38_10] -> [?32_10,?39_10,?43_10]+[]
  [?39_10] -> [?33_10]+[]

test_1 :?52: Nat
  [] -> [?12,?12_4,?13,?13_4,?14,?15,?16,?16_2,?17_2,?18,?21_4,?22_4,?23_4,?44,?45,?45_1,?45_3,?46,?46_1,?47,?47_1,?48_1,?48_3,?49_1,?50_1,?51_1,?53,?54,?55,?56,?57,?58,?60,!R]+[?12_5,?13_5,?16_2,?19,?19_4,?20_4,?24,?25_5,?26_5,?45_1,?45_3,?46,?46_1,?46_3,?47,?47_1,?47_3,?49_3,?50_3,?51_3,?59,!R]

test_2 :?61: Nat
  [] -> [?12,?12_8,?13,?13_8,?14_6,?15,?16,?16_7,?17_7,?18,?21_8,?22_8,?23_8,?27,?28,?28_6,?29,?29_6,?30,?30_6,?31,?31_6,?34_6,?35_6,?36_6,?37_6,?40_6,?41_6,?42_6,?63,?64,?65,?66,?67,!R]+[?16_7,?28_6,?29_6,?30_6,?31_6]
  [?19] -> []+[?19_8]
  [?19_8] -> [?19,?20_8,?32_6]+[]
  [?20_8] -> [?19_8]+[]
  [?32] -> []+[?32_6]
  [?32_6] -> [?19_8,?32,?38_6]+[]
  [?33] -> []+[?33_6]
  [?33_6] -> [?12,?13,?33,?39_6,?62,?68]+[]
  [?38_6] -> [?32_6,?39_6,?43_6]+[]
  [?39_6] -> [?33_6]+[]

two :?24: Nat
  [] -> [?12,?13,?25,?26,!R]+[]


### Constraints ###

[] -> [?12,?12_4,?12_8,?12_9,?12_10,?13,?13_4,?13_8,?13_9,?13_10,?14,?14_6,?14_9,?14_10,?15,?15_9,?15_10,?16,?16_2,?16_7,?16_9,?16_10,?17,?17_2,?17_7,?17_9,?17_10,?18,?18_9,?18_10,?21,?21_4,?21_8,?21_9,?21_10,?22,?22_4,?22_8,?22_9,?22_10,?23,?23_4,?23_8,?23_9,?23_10,?25,?26,?27,?27_10,?28,?28_6,?28_10,?29,?29_6,?29_10,?30,?30_6,?30_10,?31,?31_6,?31_10,?34,?34_6,?34_10,?35_6,?35_10,?36_6,?36_10,?37,?37_6,?37_10,?40,?40_6,?40_10,?41,?41_6,?41_10,?42_6,?42_10,?44,?44_9,?45,?45_1,?45_3,?45_9,?46,?46_1,?46_9,?47,?47_1,?47_9,?48,?48_1,?48_3,?48_9,?49_1,?49_9,?50_1,?50_9,?51_1,?51_9,?52,?53,?53_9,?54,?54_9,?55,?55_9,?56,?56_9,?57,?57_9,?58,?58_9,?60,?60_9,?61,?63,?63_10,?64,?64_10,?65,?65_10,?66,?66_10,?67,?67_10,?69,?70,!R]+[?12_5,?12_9,?13_5,?13_9,?16_2,?16_7,?16_9,?16_10,?19,?19_4,?19_9,?20_4,?20_9,?24,?24_9,?25_5,?25_9,?26_5,?26_9,?28_6,?28_10,?29_6,?29_10,?30_6,?30_10,?31_6,?31_10,?45_1,?45_3,?45_9,?46,?46_1,?46_3,?46_9,?47,?47_1,?47_3,?47_9,?49_3,?49_9,?50_3,?50_9,?51_3,?51_9,?59,?59_9,!R]
[?19] -> [?20]+[?19_8]
[?19_8] -> [?19,?20_8,?32_6]+[]
[?19_10] -> [?19_10,?20_10,?32_10]+[?19_10]
[?20] -> [?19]+[]
[?20_8] -> [?19_8]+[]
[?20_10] -> [?19_10]+[]
[?29] -> [?35]+[]
[?30] -> [?36]+[]
[?32] -> [?38]+[?32_6]
[?32_6] -> [?19_8,?32,?38_6]+[]
[?32_10] -> [?19_10,?32_10,?38_10]+[?32_10]
[?33] -> [?39]+[?33_6]
[?33_6] -> [?12,?13,?33,?39_6,?62,?68]+[]
[?33_10] -> [?12_10,?13_10,?33_10,?39_10,?62_10,?68_10]+[?33_10]
[?35] -> [?29,?36,?42]+[]
[?36] -> [?30]+[]
[?38] -> [?32,?39,?43]+[]
[?38_6] -> [?32_6,?39_6,?43_6]+[]
[?38_10] -> [?32_10,?39_10,?43_10]+[]
[?39] -> [?33]+[]
[?39_6] -> [?33_6]+[]
[?39_10] -> [?33_10]+[]
[?46] -> [?49]+[]
[?47] -> [?50]+[]
[?49] -> [?46,?50,?51]+[]
[?50] -> [?47]+[]

### Solution ###

N = [?12,?12_5,?12_9,?13,?13_5,?13_9,?16_2,?16_7,?16_9,?16_10,?19,?19_4,?19_8,?19_9,?20,?20_4,?20_8,?20_9,?24,?24_9,?25_5,?25_9,?26_5,?26_9,?28_6,?28_10,?29_6,?29_10,?30_6,?30_10,?31_6,?31_10,?32,?32_6,?33,?33_6,?38,?38_6,?39,?39_6,?43,?43_6,?45_1,?45_3,?45_9,?46,?46_1,?46_3,?46_9,?47,?47_1,?47_3,?47_9,?49_3,?49_9,?50_3,?50_9,?51_3,?51_9,?59,?59_9,?62,?68,!R]

R = [?12,?12_4,?12_8,?12_9,?12_10,?13,?13_4,?13_8,?13_9,?13_10,?14,?14_6,?14_9,?14_10,?15,?15_9,?15_10,?16,?16_2,?16_7,?16_9,?16_10,?17,?17_2,?17_7,?17_9,?17_10,?18,?18_9,?18_10,?21,?21_4,?21_8,?21_9,?21_10,?22,?22_4,?22_8,?22_9,?22_10,?23,?23_4,?23_8,?23_9,?23_10,?25,?26,?27,?27_10,?28,?28_6,?28_10,?29,?29_6,?29_10,?30,?30_6,?30_10,?31,?31_6,?31_10,?34,?34_6,?34_10,?35,?35_6,?35_10,?36,?36_6,?36_10,?37,?37_6,?37_10,?40,?40_6,?40_10,?41,?41_6,?41_10,?42,?42_6,?42_10,?44,?44_9,?45,?45_1,?45_3,?45_9,?46,?46_1,?46_9,?47,?47_1,?47_9,?48,?48_1,?48_3,?48_9,?49,?49_1,?49_9,?50,?50_1,?50_9,?51,?51_1,?51_9,?52,?53,?53_9,?54,?54_9,?55,?55_9,?56,?56_9,?57,?57_9,?58,?58_9,?60,?60_9,?61,?63,?63_10,?64,?64_10,?65,?65_10,?66,?66_10,?67,?67_10,?69,?70,!R]

### Annotated ###

Bool :E: *

True :E: Bool

False :E: Bool

Maybe :E: (_ :E: *) -> *

Just :E: (a :E: *) -> (_ :E: a) -> *

Nothing :E: (a :E: *) -> *

Nat :E: *

Z :R: Nat

S :R: (n :R: Nat) -> Nat

Plus :R: (x :R: Nat) -> (y :R: Nat) -> Nat

id :R: (_ :R: Nat) -> Nat
id = \y :R: Nat. y

const_3 :R: (_ :N: Nat) -> Nat
const_3 = \_ :N: Nat. 3

two :N: Nat
two = 2

f :R: (g :R: (_ :R: Nat) -> Nat) -> (z :R: Nat) -> (h :R: (_ :N: Nat) -> Nat) -> (w :N: Nat) -> Nat
f = \g :R: (_ :R: Nat) -> Nat. \z :R: Nat. \h :R: (_ :N: Nat) -> Nat. \w :N: Nat. (Plus -R- (g -R- z) -R- (h -N- w))

apply :R: (f :R: (_ :R: Nat) -> Nat) -> (_ :R: Nat) -> Nat
apply = \f :R: (_ :R: Nat) -> Nat. \x :R: Nat. (f -R- x)

test_1 :R: Nat
test_1 = (Plus -R- (apply -R- id -R- 2) -R- (apply -R- const_3 -N- two))

test_2 :R: Nat
test_2 = (f -R- id -R- 2 -R- const_3 -N- 1)

main :R: Nat
main = (Plus -R- test_1 -R- test_2)

### Pruned ###

id = \y. y

const_3 = \_. 3

f = \g. \z. \h. \w. (Plus (g z) (h ____))

apply = \f. \x. (f x)

test_1 = (Plus (apply id 2) (apply const_3 ____))

test_2 = (f id 2 const_3 ____)

main = (Plus test_1 test_2)

