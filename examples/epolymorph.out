-- vim: ft=agda

### Desugared ###

Bool : *

True : Bool

False : Bool

Maybe : (_ :: *) -> *

Just : (a :: *) -> (_ :: a) -> *

Nothing : (a :: *) -> *

Nat : *

Z : Nat

S : (n : -R-  Nat) -> Nat

Plus : (x : -R-  Nat) -> (y : -R-  Nat) -> Nat

id : (_ :: Nat) -> Nat
id = \y :: Nat. y

const_3 : (_ :: Nat) -> Nat
const_3 = \_ :: Nat. 3

two : Nat
two = 2

f : (g :: (_ :: Nat) -> Nat) -> (z :: Nat) -> (h :: (_ :: Nat) -> Nat) -> (w :: Nat) -> Nat
f = \g :: (_ :: Nat) -> Nat. \z :: Nat. \h :: (_ :: Nat) -> Nat. \w :: Nat. (Plus  (g  z)  (h  w))

apply : (f :: (_ :: Nat) -> Nat) -> (_ :: Nat) -> Nat
apply = \f :: (_ :: Nat) -> Nat. \x :: Nat. (f  x)

test_1 : Nat
test_1 = (Plus  (apply  id  2)  (apply  const_3  two))

test_2 : Nat
test_2 = (f  id  2  const_3  1)

main  -R-  Nat
main = (Plus  test_1  test_2)

### Metaified ###

Bool :?1: *

True :?2: Bool

False :?3: Bool

Maybe :?4: (_ :?6::?5: *) -> *

Just :?7: (a :?9::?8: *) -> (_ :?11::?10: a) -> *

Nothing :?12: (a :?14::?13: *) -> *

Nat :?15: *

Z :?16: Nat

S :?17: (n :?18::!R: Nat) -> Nat

Plus :?19: (x :?20::!R: Nat) -> (y :?21::!R: Nat) -> Nat

id :?22: (_ :?24::?23: Nat) -> Nat
id = \y :?26::?25: Nat. y

const_3 :?27: (_ :?29::?28: Nat) -> Nat
const_3 = \_ :?31::?30: Nat. 3

two :?38: Nat
two = 2

f :?43: (g :?47::?44: (_ :?46::?45: Nat) -> Nat) -> (z :?49::?48: Nat) -> (h :?53::?50: (_ :?52::?51: Nat) -> Nat) -> (w :?55::?54: Nat) -> Nat
f = \g :?59::?56: (_ :?58::?57: Nat) -> Nat. \z :?61::?60: Nat. \h :?65::?62: (_ :?64::?63: Nat) -> Nat. \w :?67::?66: Nat. (Plus -?70-  -?71- (g -?72-  -?73- z) -?68-  -?69- (h -?74-  -?75- w))

apply :?76: (f :?80::?77: (_ :?79::?78: Nat) -> Nat) -> (_ :?82::?81: Nat) -> Nat
apply = \f :?86::?83: (_ :?85::?84: Nat) -> Nat. \x :?88::?87: Nat. (f -?89-  -?90- x)

test_1 :?91: Nat
test_1 = (Plus -?94-  -?95- (apply -?98-  -?99- id -?96-  -?97- 2) -?92-  -?93- (apply -?106-  -?107- const_3 -?104-  -?105- two))

test_2 :?108: Nat
test_2 = (f -?115-  -?116- id -?113-  -?114- 2 -?111-  -?112- const_3 -?109-  -?110- 1)

main :!R: Nat
main = (Plus -?125-  -?126- test_1 -?123-  -?124- test_2)

### Inferred definitions ###

Bool :?1: *
False :?3: Bool
Just :?7: (a :?9::?8: *) -> (_ :?11::?10: a) -> *
Maybe :?4: (_ :?6::?5: *) -> *
Nat :?15: *
Nothing :?12: (a :?14::?13: *) -> *
Plus :?19: (x :?20::!R: Nat) -> (y :?21::!R: Nat) -> Nat
S :?17: (n :?18::!R: Nat) -> Nat
True :?2: Bool
Z :?16: Nat
apply :?76: (f :?80::?77: (_ :?79::?78: Nat) -> Nat) -> (_ :?82::?81: Nat) -> Nat
  [] -> [?77,?83,!R]
  [?78] -> [?84]
  [?79] -> [?85]
  [?80] -> [?86]
  [?81] -> [?87]
  [?82] -> [?88]
  [?84] -> [?78,?87,?90]
  [?85] -> [?79,?89]
  [?86] -> [?80]
  [?87] -> [?81]
  [?88] -> [?82]
  [?90] -> [?84,?85]

const_3 :?27: (_ :?29::?28: Nat) -> Nat
  [] -> [?16,?17,?18,?32,?33,?34,?35,?36,?37,!R]
  [?28] -> [?30]
  [?29] -> [?31]
  [?30] -> [?28]
  [?31] -> [?29]

f :?43: (g :?47::?44: (_ :?46::?45: Nat) -> Nat) -> (z :?49::?48: Nat) -> (h :?53::?50: (_ :?52::?51: Nat) -> Nat) -> (w :?55::?54: Nat) -> Nat
  [] -> [?19,?20,?21,?44,?50,?56,?62,?68,?69,?70,?71,!R]
  [?45] -> [?57]
  [?46] -> [?58]
  [?47] -> [?59]
  [?48] -> [?60]
  [?49] -> [?61]
  [?51] -> [?63]
  [?52] -> [?64]
  [?53] -> [?65]
  [?54] -> [?66]
  [?55] -> [?67]
  [?57] -> [?45,?60,?73]
  [?58] -> [?46,?72]
  [?59] -> [?47]
  [?60] -> [?48]
  [?61] -> [?49]
  [?63] -> [?51,?66,?75]
  [?64] -> [?52,?74]
  [?65] -> [?53]
  [?66] -> [?54]
  [?67] -> [?55]
  [?73] -> [?57,?58]
  [?75] -> [?63,?64]

id :?22: (_ :?24::?23: Nat) -> Nat
  [] -> [?23,?25,!R]
  [?24] -> [?26]
  [?26] -> [?24]

main :!R: Nat
  [] -> [?16_9,?16_10,?17_9,?17_10,?18_9,?18_10,?19,?19_9,?19_10,?20,?20_9,?20_10,?21,?21_9,?21_10,?22_9,?22_10,?23_9,?23_10,?24_9,?24_10,?25_9,?25_10,?26_9,?26_10,?27_9,?27_10,?28_9,?29_9,?30_9,?31_9,?32_9,?32_10,?33_9,?33_10,?34_9,?34_10,?35_9,?35_10,?36_9,?36_10,?37_9,?37_10,?38_9,?39_9,?40_9,?41_9,?42_9,?43_10,?44_10,?45_10,?46_10,?47_10,?48_10,?49_10,?50_10,?53_10,?56_10,?57_10,?58_10,?59_10,?60_10,?61_10,?62_10,?65_10,?68_10,?69_10,?70_10,?71_10,?72_10,?73_10,?76_9,?77_9,?78_9,?79_9,?80_9,?81_9,?82_9,?83_9,?84_9,?85_9,?86_9,?87_9,?88_9,?89_9,?90_9,?91,?92_9,?93_9,?94_9,?95_9,?96_9,?97_9,?98_9,?99_9,?100_9,?101_9,?102_9,?103_9,?104_9,?105_9,?106_9,?107_9,?108,?111_10,?112_10,?113_10,?114_10,?115_10,?116_10,?117_10,?118_10,?119_10,?120_10,?123,?124,?125,?126,!R]
  [?28_10] -> [?29_10,?30_10,?51_10]
  [?29_10] -> [?31_10,?52_10]
  [?30_10] -> [?28_10]
  [?31_10] -> [?29_10]
  [?51_10] -> [?28_10,?52_10,?63_10]
  [?52_10] -> [?29_10,?64_10]
  [?54_10] -> [?55_10,?66_10,?110_10,?121_10,?122_10]
  [?55_10] -> [?67_10,?109_10]
  [?63_10] -> [?51_10,?66_10,?75_10]
  [?64_10] -> [?52_10,?74_10]
  [?66_10] -> [?54_10]
  [?67_10] -> [?55_10]
  [?75_10] -> [?63_10,?64_10]
  [?110_10] -> [?54_10,?55_10]

test_1 :?91: Nat
  [] -> [?16,?16_4,?17,?17_4,?18,?18_4,?19,?20,?21,?22,?23_2,?24,?24_2,?25_2,?26_2,?27,?32_4,?33_4,?34_4,?35_4,?36_4,?37_4,?76,?77_1,?77_3,?78_1,?79,?79_1,?80,?81_1,?82,?83_1,?83_3,?84_1,?85_1,?87_1,?89_1,?90_1,?92,?93,?94,?95,?96,?97,?98,?99,?100,?101,?102,?103,?104,?106,?107,!R]
  [?28_4] -> [?29,?30_4,?78_3]
  [?29_4] -> [?31_4,?79_3]
  [?30_4] -> [?28_4]
  [?31_4] -> [?29_4]
  [?78_3] -> [?28_4,?84_3]
  [?79_3] -> [?29_4,?85_3]
  [?80_1] -> [?86_1]
  [?80_3] -> [?86_3]
  [?81_3] -> [?16_5,?17_5,?18_5,?38,?39_5,?40_5,?41_5,?42_5,?87_3,?105]
  [?82_1] -> [?88_1]
  [?82_3] -> [?88_3]
  [?84_3] -> [?78_3,?87_3,?90_3]
  [?85_3] -> [?79_3,?89_3]
  [?86_1] -> [?80_1]
  [?86_3] -> [?80_3]
  [?87_3] -> [?81_3]
  [?88_1] -> [?82_1]
  [?88_3] -> [?82_3]
  [?90_3] -> [?84_3,?85_3]
  [?105] -> [?81_3]

test_2 :?108: Nat
  [] -> [?16,?16_8,?17,?17_8,?18,?18_8,?19_6,?20_6,?21_6,?22,?23_7,?24,?24_7,?25_7,?26_7,?27,?32_8,?33_8,?34_8,?35_8,?36_8,?37_8,?43,?44_6,?45_6,?46,?46_6,?47,?48_6,?49,?50_6,?53,?56_6,?57_6,?58_6,?60_6,?62_6,?68_6,?69_6,?70_6,?71_6,?72_6,?73_6,?111,?112,?113,?114,?115,?116,?117,?118,?119,?120,!R]
  [?28_8] -> [?29,?30_8,?51_6]
  [?29_8] -> [?31_8,?52_6]
  [?30_8] -> [?28_8]
  [?31_8] -> [?29_8]
  [?47_6] -> [?59_6]
  [?49_6] -> [?61_6]
  [?51_6] -> [?28_8,?52,?63_6]
  [?52_6] -> [?29_8,?64_6]
  [?53_6] -> [?65_6]
  [?54_6] -> [?55,?66_6,?110,?121,?122]
  [?55] -> [?109]
  [?55_6] -> [?67_6]
  [?59_6] -> [?47_6]
  [?61_6] -> [?49_6]
  [?63_6] -> [?51_6,?66_6,?75_6]
  [?64_6] -> [?52_6,?74_6]
  [?65_6] -> [?53_6]
  [?66_6] -> [?54_6]
  [?67_6] -> [?55_6]
  [?75_6] -> [?63_6,?64_6]
  [?110] -> [?54_6,?55]

two :?38: Nat
  [] -> [?16,?17,?18,?39,?40,?41,?42,!R]


### Constraints ###

[] -> [?16,?16_4,?16_8,?16_9,?16_10,?17,?17_4,?17_8,?17_9,?17_10,?18,?18_4,?18_8,?18_9,?18_10,?19,?19_6,?19_9,?19_10,?20,?20_6,?20_9,?20_10,?21,?21_6,?21_9,?21_10,?22,?22_9,?22_10,?23,?23_2,?23_7,?23_9,?23_10,?24,?24_2,?24_7,?24_9,?24_10,?25,?25_2,?25_7,?25_9,?25_10,?26_2,?26_7,?26_9,?26_10,?27,?27_9,?27_10,?28_9,?29_9,?30_9,?31_9,?32,?32_4,?32_8,?32_9,?32_10,?33,?33_4,?33_8,?33_9,?33_10,?34,?34_4,?34_8,?34_9,?34_10,?35,?35_4,?35_8,?35_9,?35_10,?36,?36_4,?36_8,?36_9,?36_10,?37,?37_4,?37_8,?37_9,?37_10,?38_9,?39,?39_9,?40,?40_9,?41,?41_9,?42,?42_9,?43,?43_10,?44,?44_6,?44_10,?45_6,?45_10,?46,?46_6,?46_10,?47,?47_10,?48_6,?48_10,?49,?49_10,?50,?50_6,?50_10,?53,?53_10,?56,?56_6,?56_10,?57_6,?57_10,?58_6,?58_10,?59_10,?60_6,?60_10,?61_10,?62,?62_6,?62_10,?65_10,?68,?68_6,?68_10,?69,?69_6,?69_10,?70,?70_6,?70_10,?71,?71_6,?71_10,?72_6,?72_10,?73_6,?73_10,?76,?76_9,?77,?77_1,?77_3,?77_9,?78_1,?78_9,?79,?79_1,?79_9,?80,?80_9,?81_1,?81_9,?82,?82_9,?83,?83_1,?83_3,?83_9,?84_1,?84_9,?85_1,?85_9,?86_9,?87_1,?87_9,?88_9,?89_1,?89_9,?90_1,?90_9,?91,?92,?92_9,?93,?93_9,?94,?94_9,?95,?95_9,?96,?96_9,?97,?97_9,?98,?98_9,?99,?99_9,?100,?100_9,?101,?101_9,?102,?102_9,?103,?103_9,?104,?104_9,?105_9,?106,?106_9,?107,?107_9,?108,?111,?111_10,?112,?112_10,?113,?113_10,?114,?114_10,?115,?115_10,?116,?116_10,?117,?117_10,?118,?118_10,?119,?119_10,?120,?120_10,?123,?124,?125,?126,!R]
[?24] -> [?26]
[?26] -> [?24]
[?28] -> [?30]
[?28_4] -> [?29,?30_4,?78_3]
[?28_8] -> [?29,?30_8,?51_6]
[?28_10] -> [?29_10,?30_10,?51_10]
[?29] -> [?31]
[?29_4] -> [?31_4,?79_3]
[?29_8] -> [?31_8,?52_6]
[?29_10] -> [?31_10,?52_10]
[?30] -> [?28]
[?30_4] -> [?28_4]
[?30_8] -> [?28_8]
[?30_10] -> [?28_10]
[?31] -> [?29]
[?31_4] -> [?29_4]
[?31_8] -> [?29_8]
[?31_10] -> [?29_10]
[?45] -> [?57]
[?46] -> [?58]
[?47] -> [?59]
[?47_6] -> [?59_6]
[?48] -> [?60]
[?49] -> [?61]
[?49_6] -> [?61_6]
[?51] -> [?63]
[?51_6] -> [?28_8,?52,?63_6]
[?51_10] -> [?28_10,?52_10,?63_10]
[?52] -> [?64]
[?52_6] -> [?29_8,?64_6]
[?52_10] -> [?29_10,?64_10]
[?53] -> [?65]
[?53_6] -> [?65_6]
[?54] -> [?66]
[?54_6] -> [?55,?66_6,?110,?121,?122]
[?54_10] -> [?55_10,?66_10,?110_10,?121_10,?122_10]
[?55] -> [?67,?109]
[?55_6] -> [?67_6]
[?55_10] -> [?67_10,?109_10]
[?57] -> [?45,?60,?73]
[?58] -> [?46,?72]
[?59] -> [?47]
[?59_6] -> [?47_6]
[?60] -> [?48]
[?61] -> [?49]
[?61_6] -> [?49_6]
[?63] -> [?51,?66,?75]
[?63_6] -> [?51_6,?66_6,?75_6]
[?63_10] -> [?51_10,?66_10,?75_10]
[?64] -> [?52,?74]
[?64_6] -> [?52_6,?74_6]
[?64_10] -> [?52_10,?74_10]
[?65] -> [?53]
[?65_6] -> [?53_6]
[?66] -> [?54]
[?66_6] -> [?54_6]
[?66_10] -> [?54_10]
[?67] -> [?55]
[?67_6] -> [?55_6]
[?67_10] -> [?55_10]
[?73] -> [?57,?58]
[?75] -> [?63,?64]
[?75_6] -> [?63_6,?64_6]
[?75_10] -> [?63_10,?64_10]
[?78] -> [?84]
[?78_3] -> [?28_4,?84_3]
[?79] -> [?85]
[?79_3] -> [?29_4,?85_3]
[?80] -> [?86]
[?80_1] -> [?86_1]
[?80_3] -> [?86_3]
[?81] -> [?87]
[?81_3] -> [?16_5,?17_5,?18_5,?38,?39_5,?40_5,?41_5,?42_5,?87_3,?105]
[?82] -> [?88]
[?82_1] -> [?88_1]
[?82_3] -> [?88_3]
[?84] -> [?78,?87,?90]
[?84_3] -> [?78_3,?87_3,?90_3]
[?85] -> [?79,?89]
[?85_3] -> [?79_3,?89_3]
[?86] -> [?80]
[?86_1] -> [?80_1]
[?86_3] -> [?80_3]
[?87] -> [?81]
[?87_3] -> [?81_3]
[?88] -> [?82]
[?88_1] -> [?82_1]
[?88_3] -> [?82_3]
[?90] -> [?84,?85]
[?90_3] -> [?84_3,?85_3]
[?105] -> [?81_3]
[?110] -> [?54_6,?55]
[?110_10] -> [?54_10,?55_10]

### Solution ###

[?16,?16_4,?16_8,?16_9,?16_10,?17,?17_4,?17_8,?17_9,?17_10,?18,?18_4,?18_8,?18_9,?18_10,?19,?19_6,?19_9,?19_10,?20,?20_6,?20_9,?20_10,?21,?21_6,?21_9,?21_10,?22,?22_9,?22_10,?23,?23_2,?23_7,?23_9,?23_10,?24,?24_2,?24_7,?24_9,?24_10,?25,?25_2,?25_7,?25_9,?25_10,?26,?26_2,?26_7,?26_9,?26_10,?27,?27_9,?27_10,?28_9,?29_9,?30_9,?31_9,?32,?32_4,?32_8,?32_9,?32_10,?33,?33_4,?33_8,?33_9,?33_10,?34,?34_4,?34_8,?34_9,?34_10,?35,?35_4,?35_8,?35_9,?35_10,?36,?36_4,?36_8,?36_9,?36_10,?37,?37_4,?37_8,?37_9,?37_10,?38_9,?39,?39_9,?40,?40_9,?41,?41_9,?42,?42_9,?43,?43_10,?44,?44_6,?44_10,?45_6,?45_10,?46,?46_6,?46_10,?47,?47_10,?48_6,?48_10,?49,?49_10,?50,?50_6,?50_10,?53,?53_10,?56,?56_6,?56_10,?57_6,?57_10,?58,?58_6,?58_10,?59,?59_10,?60_6,?60_10,?61,?61_10,?62,?62_6,?62_10,?65,?65_10,?68,?68_6,?68_10,?69,?69_6,?69_10,?70,?70_6,?70_10,?71,?71_6,?71_10,?72,?72_6,?72_10,?73_6,?73_10,?76,?76_9,?77,?77_1,?77_3,?77_9,?78_1,?78_9,?79,?79_1,?79_9,?80,?80_9,?81_1,?81_9,?82,?82_9,?83,?83_1,?83_3,?83_9,?84_1,?84_9,?85,?85_1,?85_9,?86,?86_9,?87_1,?87_9,?88,?88_9,?89,?89_1,?89_9,?90_1,?90_9,?91,?92,?92_9,?93,?93_9,?94,?94_9,?95,?95_9,?96,?96_9,?97,?97_9,?98,?98_9,?99,?99_9,?100,?100_9,?101,?101_9,?102,?102_9,?103,?103_9,?104,?104_9,?105_9,?106,?106_9,?107,?107_9,?108,?111,?111_10,?112,?112_10,?113,?113_10,?114,?114_10,?115,?115_10,?116,?116_10,?117,?117_10,?118,?118_10,?119,?119_10,?120,?120_10,?123,?124,?125,?126,!R]

### Annotated ###

Bool :E: *

True :E: Bool

False :E: Bool

Maybe :E: (_ :E::E: *) -> *

Just :E: (a :E::E: *) -> (_ :E::E: a) -> *

Nothing :E: (a :E::E: *) -> *

Nat :E: *

Z :R: Nat

S :R: (n :R::R: Nat) -> Nat

Plus :R: (x :R::R: Nat) -> (y :R::R: Nat) -> Nat

id :R: (_ :R::R: Nat) -> Nat
id = \y :R::R: Nat. y

const_3 :R: (_ :E::E: Nat) -> Nat
const_3 = \_ :E::E: Nat. 3

two :E: Nat
two = 2

f :R: (g :R::R: (_ :R::E: Nat) -> Nat) -> (z :R::E: Nat) -> (h :R::R: (_ :E::E: Nat) -> Nat) -> (w :E::E: Nat) -> Nat
f = \g :R::R: (_ :R::E: Nat) -> Nat. \z :R::E: Nat. \h :R::R: (_ :E::E: Nat) -> Nat. \w :E::E: Nat. (Plus -R-  -R- (g -R-  -E- z) -R-  -R- (h -E-  -E- w))

apply :R: (f :R::R: (_ :R::E: Nat) -> Nat) -> (_ :R::E: Nat) -> Nat
apply = \f :R::R: (_ :R::E: Nat) -> Nat. \x :R::E: Nat. (f -R-  -E- x)

test_1 :R: Nat
test_1 = (Plus -R-  -R- (apply -R-  -R- id -R-  -R- 2) -R-  -R- (apply -R-  -R- const_3 -R-  -E- two))

test_2 :R: Nat
test_2 = (f -R-  -R- id -R-  -R- 2 -R-  -R- const_3 -E-  -E- 1)

main :R: Nat
main = (Plus -R-  -R- test_1 -R-  -R- test_2)

### Pruned ###

id = \y. y

const_3 = 3

f = \g. \z. \h. (Plus  (g  ____)  h)

apply = \f. \x. (f  ____)

test_1 = (Plus  (apply  id  2)  (apply  const_3  ____))

test_2 = (f  id  2  const_3)

main = (Plus  test_1  test_2)

### Normal forms ###

unerased:
  (Plus  (Plus  2  3)  (Plus  2  3))
erased:
  (Plus  (Plus  ____  (S  2  ____))  (Plus  ____  3))
