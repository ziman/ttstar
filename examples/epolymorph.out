-- vim: ft=agda

### Desugared ###

Bool : *
Bool = (axiom)

True : Bool
True = (axiom)

False : Bool
False = (axiom)

Maybe : (_ : *) -> *
Maybe = (axiom)

Just : (a : *) -> (_ : a) -> *
Just = (axiom)

Nothing : (a : *) -> *
Nothing = (axiom)

Nat : *
Nat = (axiom)

Z : Nat
Z = (axiom)

S : (n  -R-  Nat) -> Nat
S = (axiom)

Plus : (x  -R-  Nat) -> (y  -R-  Nat) -> Nat
Plus = (axiom)

id : (_ : Nat) -> Nat
id = \y : Nat. y

const_3 : (_ : Nat) -> Nat
const_3 = \_ : Nat. 3

two : Nat
two = 2

f : (g : (_ : Nat) -> Nat) -> (z : Nat) -> (h : (_ : Nat) -> Nat) -> (w : Nat) -> Nat
f = \g : (_ : Nat) -> Nat. \z : Nat. \h : (_ : Nat) -> Nat. \w : Nat. (Plus (g z) (h w))

apply : (f : (_ : Nat) -> Nat) -> (_ : Nat) -> Nat
apply = \f : (_ : Nat) -> Nat. \x : Nat. (f x)

test_1 : Nat
test_1 = (Plus (apply id 2) (apply const_3 two))

test_2 : Nat
test_2 = (f id 2 const_3 1)

main  -R-  Nat
main = (Plus test_1 test_2)

### Metaified ###

Bool :?1: *
Bool = (axiom)

True :?2: Bool
True = (axiom)

False :?3: Bool
False = (axiom)

Maybe :?4: (_ :?5: *) -> *
Maybe = (axiom)

Just :?6: (a :?7: *) -> (_ :?8: a) -> *
Just = (axiom)

Nothing :?9: (a :?10: *) -> *
Nothing = (axiom)

Nat :?11: *
Nat = (axiom)

Z :?12: Nat
Z = (axiom)

S :?13: (n :!R: Nat) -> Nat
S = (axiom)

Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat
Plus = (axiom)

id :?15: (_ :?16: Nat) -> Nat
id = \y :?17: Nat. y

const_3 :?18: (_ :?19: Nat) -> Nat
const_3 = \_ :?20: Nat. 3

two :?24: Nat
two = 2

f :?27: (g :?28: (_ :?29: Nat) -> Nat) -> (z :?30: Nat) -> (h :?31: (_ :?32: Nat) -> Nat) -> (w :?33: Nat) -> Nat
f = \g :?34: (_ :?35: Nat) -> Nat. \z :?36: Nat. \h :?37: (_ :?38: Nat) -> Nat. \w :?39: Nat. (Plus -?41- (g -?42- z) -?40- (h -?43- w))

apply :?44: (f :?45: (_ :?46: Nat) -> Nat) -> (_ :?47: Nat) -> Nat
apply = \f :?48: (_ :?49: Nat) -> Nat. \x :?50: Nat. (f -?51- x)

test_1 :?52: Nat
test_1 = (Plus -?54- (apply -?56- id -?55- 2) -?53- (apply -?60- const_3 -?59- two))

test_2 :?61: Nat
test_2 = (f -?65- id -?64- 2 -?63- const_3 -?62- 1)

main :!R: Nat
main = (Plus -?70- test_1 -?69- test_2)

### Inferred definitions ###

Bool :?1: *

False :?3: Bool

Just :?6: (a :?7: *) -> (_ :?8: a) -> *

Maybe :?4: (_ :?5: *) -> *

Nat :?11: *

Nothing :?9: (a :?10: *) -> *

Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat

S :?13: (n :!R: Nat) -> Nat

True :?2: Bool

Z :?12: Nat

apply :?44: (f :?45: (_ :?46: Nat) -> Nat) -> (_ :?47: Nat) -> Nat
  [?44] -> [?48]
  [?45] -> [?48]
  [?46] -> [?49]
  [?47] -> [?50]
  [?48] -> [?45]
  [?49] -> [?46,?50,?51]
  [?50] -> [?47]

const_3 :?18: (_ :?19: Nat) -> Nat
  [] -> [?12,?13,?21,?22,?23,!R]
  [?19] -> [?20]
  [?20] -> [?19]

f :?27: (g :?28: (_ :?29: Nat) -> Nat) -> (z :?30: Nat) -> (h :?31: (_ :?32: Nat) -> Nat) -> (w :?33: Nat) -> Nat
  [] -> [?28,?31,?34,?37,?40,?41,!R]
  [?27] -> [?14]
  [?29] -> [?35]
  [?30] -> [?36]
  [?32] -> [?38]
  [?33] -> [?39]
  [?35] -> [?29,?36,?42]
  [?36] -> [?30]
  [?38] -> [?32,?39,?43]
  [?39] -> [?33]

id :?15: (_ :?16: Nat) -> Nat
  [?15] -> [?17]
  [?16] -> [?17]
  [?17] -> [?16]

main :!R: Nat
  [] -> [?12,?13,?14,?15,?16,?17,?18,?19,?20,?21,?22,?23,?24,?25,?26,?27,?28,?29,?30,?31,?32,?33,?34,?35,?36,?37,?38,?39,?40,?41,?42,?43,?44,?45,?46,?47,?48,?49,?50,?51,?52,?53,?54,?55,?56,?57,?58,?59,?60,?61,?62,?63,?64,?65,?66,?67,?68,?69,?70,!R]

test_1 :?52: Nat
  [] -> [?12,?13,?15,?16,?17,?18,?19,?20,?21,?22,?23,?24,?25,?26,?44,?45,?46,?47,?48,?49,?50,?51,?53,?54,?55,?56,?57,?58,?59,?60,!R]
  [?52] -> [?14]

test_2 :?61: Nat
  [] -> [?12,?13,?15,?16,?17,?18,?21,?22,?23,?28,?29,?30,?31,?34,?35,?36,?37,?40,?41,?42,?63,?64,?65,?66,?67,!R]
  [?19] -> [?20,?32]
  [?20] -> [?19]
  [?27] -> [?14]
  [?32] -> [?19,?38]
  [?33] -> [?39,?62,?68]
  [?38] -> [?32,?39,?43]
  [?39] -> [?33]
  [?61] -> [?27]

two :?24: Nat
  [] -> [?12,?13,?25,?26,!R]


### Constraints ###

[] -> [?12,?13,?14,?15,?16,?17,?18,?19,?20,?21,?22,?23,?24,?25,?26,?27,?28,?29,?30,?31,?32,?33,?34,?35,?36,?37,?38,?39,?40,?41,?42,?43,?44,?45,?46,?47,?48,?49,?50,?51,?52,?53,?54,?55,?56,?57,?58,?59,?60,?61,?62,?63,?64,?65,?66,?67,?68,?69,?70,!R]
[?15] -> [?17]
[?16] -> [?17]
[?17] -> [?16]
[?19] -> [?20,?32]
[?20] -> [?19]
[?27] -> [?14]
[?29] -> [?35]
[?30] -> [?36]
[?32] -> [?19,?38]
[?33] -> [?39,?62,?68]
[?35] -> [?29,?36,?42]
[?36] -> [?30]
[?38] -> [?32,?39,?43]
[?39] -> [?33]
[?44] -> [?48]
[?45] -> [?48]
[?46] -> [?49]
[?47] -> [?50]
[?48] -> [?45]
[?49] -> [?46,?50,?51]
[?50] -> [?47]
[?52] -> [?14]
[?61] -> [?27]

### Solution ###

[?12,?13,?14,?15,?16,?17,?18,?19,?20,?21,?22,?23,?24,?25,?26,?27,?28,?29,?30,?31,?32,?33,?34,?35,?36,?37,?38,?39,?40,?41,?42,?43,?44,?45,?46,?47,?48,?49,?50,?51,?52,?53,?54,?55,?56,?57,?58,?59,?60,?61,?62,?63,?64,?65,?66,?67,?68,?69,?70,!R]

### Annotated ###

Bool :I: *
Bool = (axiom)

True :I: Bool
True = (axiom)

False :I: Bool
False = (axiom)

Maybe :I: (_ :I: *) -> *
Maybe = (axiom)

Just :I: (a :I: *) -> (_ :I: a) -> *
Just = (axiom)

Nothing :I: (a :I: *) -> *
Nothing = (axiom)

Nat :I: *
Nat = (axiom)

Z :R: Nat
Z = (axiom)

S :R: (n :R: Nat) -> Nat
S = (axiom)

Plus :R: (x :R: Nat) -> (y :R: Nat) -> Nat
Plus = (axiom)

id :R: (_ :R: Nat) -> Nat
id = \y :R: Nat. y

const_3 :R: (_ :R: Nat) -> Nat
const_3 = \_ :R: Nat. 3

two :R: Nat
two = 2

f :R: (g :R: (_ :R: Nat) -> Nat) -> (z :R: Nat) -> (h :R: (_ :R: Nat) -> Nat) -> (w :R: Nat) -> Nat
f = \g :R: (_ :R: Nat) -> Nat. \z :R: Nat. \h :R: (_ :R: Nat) -> Nat. \w :R: Nat. (Plus -R- (g -R- z) -R- (h -R- w))

apply :R: (f :R: (_ :R: Nat) -> Nat) -> (_ :R: Nat) -> Nat
apply = \f :R: (_ :R: Nat) -> Nat. \x :R: Nat. (f -R- x)

test_1 :R: Nat
test_1 = (Plus -R- (apply -R- id -R- 2) -R- (apply -R- const_3 -R- two))

test_2 :R: Nat
test_2 = (f -R- id -R- 2 -R- const_3 -R- 1)

main :R: Nat
main = (Plus -R- test_1 -R- test_2)

### Pruned ###

Z = (axiom)

S = (axiom)

Plus = (axiom)

id = \y. y

const_3 = \_. 3

two = 2

f = \g. \z. \h. \w. (Plus (g z) (h w))

apply = \f. \x. (f x)

test_1 = (Plus (apply id 2) (apply const_3 two))

test_2 = (f id 2 const_3 1)

main = (Plus test_1 test_2)

