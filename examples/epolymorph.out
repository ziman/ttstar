-- vim: ft=agda

### Desugared ###

Bool : *
Bool = (axiom)

True : Bool
True = (axiom)

False : Bool
False = (axiom)

Maybe : (_ : *) -> *
Maybe = (axiom)

Just : (a : *) -> (_ : a) -> *
Just = (axiom)

Nothing : (a : *) -> *
Nothing = (axiom)

Nat : *
Nat = (axiom)

Z : Nat
Z = (axiom)

S : (n  -R-  Nat) -> Nat
S = (axiom)

Plus : (x  -R-  Nat) -> (y  -R-  Nat) -> Nat
Plus = (axiom)

id : (_ : Nat) -> Nat
id = \y : Nat. y

const_3 : (_ : Nat) -> Nat
const_3 = \_ : Nat. 3

two : Nat
two = 2

f : (g : (_ : Nat) -> Nat) -> (z : Nat) -> (h : (_ : Nat) -> Nat) -> (w : Nat) -> Nat
f = \g : (_ : Nat) -> Nat. \z : Nat. \h : (_ : Nat) -> Nat. \w : Nat. (Plus (g z) (h w))

apply : (f : (_ : Nat) -> Nat) -> (_ : Nat) -> Nat
apply = \f : (_ : Nat) -> Nat. \x : Nat. (f x)

test_1 : Nat
test_1 = (Plus (apply id 2) (apply const_3 two))

test_2 : Nat
test_2 = (f id 2 const_3 1)

main  -R-  Nat
main = (Plus test_1 test_2)

### Metaified ###

Bool :?1: *
Bool = (axiom)

True :?2: Bool
True = (axiom)

False :?3: Bool
False = (axiom)

Maybe :?4: (_ :?5: *) -> *
Maybe = (axiom)

Just :?6: (a :?7: *) -> (_ :?8: a) -> *
Just = (axiom)

Nothing :?9: (a :?10: *) -> *
Nothing = (axiom)

Nat :?11: *
Nat = (axiom)

Z :?12: Nat
Z = (axiom)

S :?13: (n :!R: Nat) -> Nat
S = (axiom)

Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat
Plus = (axiom)

id :?15: (_ :?16: Nat) -> Nat
id = \y :?17: Nat. y

const_3 :?18: (_ :?19: Nat) -> Nat
const_3 = \_ :?20: Nat. 3

two :?24: Nat
two = 2

f :?27: (g :?28: (_ :?29: Nat) -> Nat) -> (z :?30: Nat) -> (h :?31: (_ :?32: Nat) -> Nat) -> (w :?33: Nat) -> Nat
f = \g :?34: (_ :?35: Nat) -> Nat. \z :?36: Nat. \h :?37: (_ :?38: Nat) -> Nat. \w :?39: Nat. (Plus -?41- (g -?42- z) -?40- (h -?43- w))

apply :?44: (f :?45: (_ :?46: Nat) -> Nat) -> (_ :?47: Nat) -> Nat
apply = \f :?48: (_ :?49: Nat) -> Nat. \x :?50: Nat. (f -?51- x)

test_1 :?52: Nat
test_1 = (Plus -?54- (apply -?56- id -?55- 2) -?53- (apply -?60- const_3 -?59- two))

test_2 :?61: Nat
test_2 = (f -?65- id -?64- 2 -?63- const_3 -?62- 1)

main :!R: Nat
main = (Plus -?70- test_1 -?69- test_2)

### Inferred definitions ###

Bool :?1: *

False :?3: Bool

Just :?6: (a :?7: *) -> (_ :?8: a) -> *

Maybe :?4: (_ :?5: *) -> *

Nat :?11: *

Nothing :?9: (a :?10: *) -> *

Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat

S :?13: (n :!R: Nat) -> Nat

True :?2: Bool

Z :?12: Nat

apply :?44: (f :?45: (_ :?46: Nat) -> Nat) -> (_ :?47: Nat) -> Nat
  [?44] -> [?48]
  [?45] -> [?48]
  [?46] -> [?49]
  [?47] -> [?50]
  [?48] -> [?45]
  [?49] -> [?46]
  [?50] -> [?47]
  [?51] -> [?49]

const_3 :?18: (_ :?19: Nat) -> Nat
  [?18] -> [?13]
  [?19] -> [?20]
  [?20] -> [?19]

f :?27: (g :?28: (_ :?29: Nat) -> Nat) -> (z :?30: Nat) -> (h :?31: (_ :?32: Nat) -> Nat) -> (w :?33: Nat) -> Nat
  [?27] -> [?14]
  [?28] -> [?34]
  [?29] -> [?35]
  [?30] -> [?36]
  [?31] -> [?37]
  [?32] -> [?38]
  [?33] -> [?39]
  [?34] -> [?28]
  [?35] -> [?29]
  [?36] -> [?30]
  [?37] -> [?31]
  [?38] -> [?32]
  [?39] -> [?33]
  [?40,?43] -> [?38]
  [?41,?42] -> [?35]

id :?15: (_ :?16: Nat) -> Nat
  [?15] -> [?17]
  [?16] -> [?17]
  [?17] -> [?16]

main :!R: Nat
  [?15,?54,?56,?70] -> [?17]
  [?15,?65,?69] -> [?17]
  [?16,?54,?56,?70] -> [?17]
  [?16,?54,?70] -> [?46]
  [?16,?65,?69] -> [?17]
  [?16,?69] -> [?29]
  [?17,?54,?56,?70] -> [?16]
  [?17,?65,?69] -> [?16]
  [?18,?53,?60,?70] -> [?13]
  [?18,?63,?69] -> [?13]
  [?19,?53,?60,?70] -> [?20]
  [?19,?53,?70] -> [?46]
  [?19,?63,?69] -> [?20]
  [?19,?69] -> [?32]
  [?20,?53,?60,?70] -> [?19]
  [?20,?63,?69] -> [?19]
  [?24,?53,?59,?70] -> [?13]
  [?28,?69] -> [?34]
  [?29,?69] -> [?16,?35]
  [?30,?69] -> [?36]
  [?31,?69] -> [?37]
  [?32,?69] -> [?19,?38]
  [?33,?69] -> [?39]
  [?34,?69] -> [?28]
  [?35,?69] -> [?29]
  [?36,?69] -> [?30]
  [?37,?69] -> [?31]
  [?38,?69] -> [?32]
  [?39,?69] -> [?33]
  [?40,?43,?69] -> [?38]
  [?41,?42,?69] -> [?35]
  [?44,?53,?70] -> [?48]
  [?44,?54,?70] -> [?48]
  [?45,?53,?70] -> [?48]
  [?45,?54,?70] -> [?48]
  [?46,?53,?70] -> [?19,?49]
  [?46,?54,?70] -> [?16,?49]
  [?47,?53,?70] -> [?50]
  [?47,?54,?70] -> [?50]
  [?48,?53,?70] -> [?45]
  [?48,?54,?70] -> [?45]
  [?49,?53,?70] -> [?46]
  [?49,?54,?70] -> [?46]
  [?50,?53,?70] -> [?47]
  [?50,?54,?70] -> [?47]
  [?51,?53,?70] -> [?49]
  [?51,?54,?70] -> [?49]
  [?53,?59,?70] -> [?47]
  [?53,?60,?70] -> [?45]
  [?54,?55,?70] -> [?47]
  [?54,?56,?70] -> [?45]
  [?61,?69] -> [?27]
  [?62,?69] -> [?33]
  [?63,?69] -> [?31]
  [?64,?69] -> [?30]
  [?65,?69] -> [?28]

test_1 :?52: Nat
  [?15,?54,?56] -> [?17]
  [?16,?54] -> [?46]
  [?16,?54,?56] -> [?17]
  [?17,?54,?56] -> [?16]
  [?18,?53,?60] -> [?13]
  [?19,?53] -> [?46]
  [?19,?53,?60] -> [?20]
  [?20,?53,?60] -> [?19]
  [?24,?53,?59] -> [?13]
  [?44,?53] -> [?48]
  [?44,?54] -> [?48]
  [?45,?53] -> [?48]
  [?45,?54] -> [?48]
  [?46,?53] -> [?19,?49]
  [?46,?54] -> [?16,?49]
  [?47,?53] -> [?50]
  [?47,?54] -> [?50]
  [?48,?53] -> [?45]
  [?48,?54] -> [?45]
  [?49,?53] -> [?46]
  [?49,?54] -> [?46]
  [?50,?53] -> [?47]
  [?50,?54] -> [?47]
  [?51,?53] -> [?49]
  [?51,?54] -> [?49]
  [?52] -> [?14]
  [?53,?59] -> [?47]
  [?53,?60] -> [?45]
  [?54,?55] -> [?47]
  [?54,?56] -> [?45]

test_2 :?61: Nat
  [?15,?65] -> [?17]
  [?16] -> [?29]
  [?16,?65] -> [?17]
  [?17,?65] -> [?16]
  [?18,?63] -> [?13]
  [?19] -> [?32]
  [?19,?63] -> [?20]
  [?20,?63] -> [?19]
  [?27] -> [?14]
  [?28] -> [?34]
  [?29] -> [?16,?35]
  [?30] -> [?36]
  [?31] -> [?37]
  [?32] -> [?19,?38]
  [?33] -> [?39]
  [?34] -> [?28]
  [?35] -> [?29]
  [?36] -> [?30]
  [?37] -> [?31]
  [?38] -> [?32]
  [?39] -> [?33]
  [?40,?43] -> [?38]
  [?41,?42] -> [?35]
  [?61] -> [?27]
  [?62] -> [?33]
  [?63] -> [?31]
  [?64] -> [?30]
  [?65] -> [?28]

two :?24: Nat
  [?24] -> [?13]


### Constraints ###

[?15] -> [?17]
[?15,?54,?56] -> [?17]
[?15,?54,?56,?70] -> [?17]
[?15,?65] -> [?17]
[?15,?65,?69] -> [?17]
[?16] -> [?17,?29]
[?16,?54] -> [?46]
[?16,?54,?56] -> [?17]
[?16,?54,?56,?70] -> [?17]
[?16,?54,?70] -> [?46]
[?16,?65] -> [?17]
[?16,?65,?69] -> [?17]
[?16,?69] -> [?29]
[?17] -> [?16]
[?17,?54,?56] -> [?16]
[?17,?54,?56,?70] -> [?16]
[?17,?65] -> [?16]
[?17,?65,?69] -> [?16]
[?18] -> [?13]
[?18,?53,?60] -> [?13]
[?18,?53,?60,?70] -> [?13]
[?18,?63] -> [?13]
[?18,?63,?69] -> [?13]
[?19] -> [?20,?32]
[?19,?53] -> [?46]
[?19,?53,?60] -> [?20]
[?19,?53,?60,?70] -> [?20]
[?19,?53,?70] -> [?46]
[?19,?63] -> [?20]
[?19,?63,?69] -> [?20]
[?19,?69] -> [?32]
[?20] -> [?19]
[?20,?53,?60] -> [?19]
[?20,?53,?60,?70] -> [?19]
[?20,?63] -> [?19]
[?20,?63,?69] -> [?19]
[?24] -> [?13]
[?24,?53,?59] -> [?13]
[?24,?53,?59,?70] -> [?13]
[?27] -> [?14]
[?28] -> [?34]
[?28,?69] -> [?34]
[?29] -> [?16,?35]
[?29,?69] -> [?16,?35]
[?30] -> [?36]
[?30,?69] -> [?36]
[?31] -> [?37]
[?31,?69] -> [?37]
[?32] -> [?19,?38]
[?32,?69] -> [?19,?38]
[?33] -> [?39]
[?33,?69] -> [?39]
[?34] -> [?28]
[?34,?69] -> [?28]
[?35] -> [?29]
[?35,?69] -> [?29]
[?36] -> [?30]
[?36,?69] -> [?30]
[?37] -> [?31]
[?37,?69] -> [?31]
[?38] -> [?32]
[?38,?69] -> [?32]
[?39] -> [?33]
[?39,?69] -> [?33]
[?40,?43] -> [?38]
[?40,?43,?69] -> [?38]
[?41,?42] -> [?35]
[?41,?42,?69] -> [?35]
[?44] -> [?48]
[?44,?53] -> [?48]
[?44,?53,?70] -> [?48]
[?44,?54] -> [?48]
[?44,?54,?70] -> [?48]
[?45] -> [?48]
[?45,?53] -> [?48]
[?45,?53,?70] -> [?48]
[?45,?54] -> [?48]
[?45,?54,?70] -> [?48]
[?46] -> [?49]
[?46,?53] -> [?19,?49]
[?46,?53,?70] -> [?19,?49]
[?46,?54] -> [?16,?49]
[?46,?54,?70] -> [?16,?49]
[?47] -> [?50]
[?47,?53] -> [?50]
[?47,?53,?70] -> [?50]
[?47,?54] -> [?50]
[?47,?54,?70] -> [?50]
[?48] -> [?45]
[?48,?53] -> [?45]
[?48,?53,?70] -> [?45]
[?48,?54] -> [?45]
[?48,?54,?70] -> [?45]
[?49] -> [?46]
[?49,?53] -> [?46]
[?49,?53,?70] -> [?46]
[?49,?54] -> [?46]
[?49,?54,?70] -> [?46]
[?50] -> [?47]
[?50,?53] -> [?47]
[?50,?53,?70] -> [?47]
[?50,?54] -> [?47]
[?50,?54,?70] -> [?47]
[?51] -> [?49]
[?51,?53] -> [?49]
[?51,?53,?70] -> [?49]
[?51,?54] -> [?49]
[?51,?54,?70] -> [?49]
[?52] -> [?14]
[?53,?59] -> [?47]
[?53,?59,?70] -> [?47]
[?53,?60] -> [?45]
[?53,?60,?70] -> [?45]
[?54,?55] -> [?47]
[?54,?55,?70] -> [?47]
[?54,?56] -> [?45]
[?54,?56,?70] -> [?45]
[?61] -> [?27]
[?61,?69] -> [?27]
[?62] -> [?33]
[?62,?69] -> [?33]
[?63] -> [?31]
[?63,?69] -> [?31]
[?64] -> [?30]
[?64,?69] -> [?30]
[?65] -> [?28]
[?65,?69] -> [?28]

### Solution ###

[!R]

### Annotated ###

Bool :I: *
Bool = (axiom)

True :I: Bool
True = (axiom)

False :I: Bool
False = (axiom)

Maybe :I: (_ :I: *) -> *
Maybe = (axiom)

Just :I: (a :I: *) -> (_ :I: a) -> *
Just = (axiom)

Nothing :I: (a :I: *) -> *
Nothing = (axiom)

Nat :I: *
Nat = (axiom)

Z :I: Nat
Z = (axiom)

S :I: (n :R: Nat) -> Nat
S = (axiom)

Plus :I: (x :R: Nat) -> (y :R: Nat) -> Nat
Plus = (axiom)

id :I: (_ :I: Nat) -> Nat
id = \y :I: Nat. y

const_3 :I: (_ :I: Nat) -> Nat
const_3 = \_ :I: Nat. 3

two :I: Nat
two = 2

f :I: (g :I: (_ :I: Nat) -> Nat) -> (z :I: Nat) -> (h :I: (_ :I: Nat) -> Nat) -> (w :I: Nat) -> Nat
f = \g :I: (_ :I: Nat) -> Nat. \z :I: Nat. \h :I: (_ :I: Nat) -> Nat. \w :I: Nat. (Plus -I- (g -I- z) -I- (h -I- w))

apply :I: (f :I: (_ :I: Nat) -> Nat) -> (_ :I: Nat) -> Nat
apply = \f :I: (_ :I: Nat) -> Nat. \x :I: Nat. (f -I- x)

test_1 :I: Nat
test_1 = (Plus -I- (apply -I- id -I- 2) -I- (apply -I- const_3 -I- two))

test_2 :I: Nat
test_2 = (f -I- id -I- 2 -I- const_3 -I- 1)

main :R: Nat
main = (Plus -I- test_1 -I- test_2)

### Pruned ###

main = Plus

