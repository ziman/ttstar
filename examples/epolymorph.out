-- vim: ft=agda

### Desugared ###

Bool : *

True : Bool

False : Bool

Maybe : (_ : *) -> *

Just : (a : *) -> (_ : a) -> *

Nothing : (a : *) -> *

Nat : *

Z : Nat

S : (n  -R-  Nat) -> Nat

Plus : (x  -R-  Nat) -> (y  -R-  Nat) -> Nat

id : (_ : Nat) -> Nat
id = \y : Nat. y

const_3 : (_ : Nat) -> Nat
const_3 = \_ : Nat. 3

two : Nat
two = 2

f : (g : (_ : Nat) -> Nat) -> (z : Nat) -> (h : (_ : Nat) -> Nat) -> (w : Nat) -> Nat
f = \g : (_ : Nat) -> Nat. \z : Nat. \h : (_ : Nat) -> Nat. \w : Nat. (Plus (g z) (h w))

apply : (f : (_ : Nat) -> Nat) -> (_ : Nat) -> Nat
apply = \f : (_ : Nat) -> Nat. \x : Nat. (f x)

test_1 : Nat
test_1 = (Plus (apply id 2) (apply const_3 two))

test_2 : Nat
test_2 = (f id 2 const_3 1)

main  -R-  Nat
main = (Plus test_1 test_2)

### Metaified ###

Bool :?1: *

True :?2: Bool

False :?3: Bool

Maybe :?4: (_ :?5: *) -> *

Just :?6: (a :?7: *) -> (_ :?8: a) -> *

Nothing :?9: (a :?10: *) -> *

Nat :?11: *

Z :?12: Nat

S :?13: (n :!R: Nat) -> Nat

Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat

id :?15: (_ :?16: Nat) -> Nat
id = \y :?17: Nat. y

const_3 :?18: (_ :?19: Nat) -> Nat
const_3 = \_ :?20: Nat. 3

two :?24: Nat
two = 2

f :?27: (g :?28: (_ :?29: Nat) -> Nat) -> (z :?30: Nat) -> (h :?31: (_ :?32: Nat) -> Nat) -> (w :?33: Nat) -> Nat
f = \g :?34: (_ :?35: Nat) -> Nat. \z :?36: Nat. \h :?37: (_ :?38: Nat) -> Nat. \w :?39: Nat. (Plus -?41- (g -?42- z) -?40- (h -?43- w))

apply :?44: (f :?45: (_ :?46: Nat) -> Nat) -> (_ :?47: Nat) -> Nat
apply = \f :?48: (_ :?49: Nat) -> Nat. \x :?50: Nat. (f -?51- x)

test_1 :?52: Nat
test_1 = (Plus -?54- (apply -?56- id -?55- 2) -?53- (apply -?60- const_3 -?59- two))

test_2 :?61: Nat
test_2 = (f -?65- id -?64- 2 -?63- const_3 -?62- 1)

main :!R: Nat
main = (Plus -?70- test_1 -?69- test_2)

### Inferred definitions ###

Bool :?1: *
False :?3: Bool
Just :?6: (a :?7: *) -> (_ :?8: a) -> *
Maybe :?4: (_ :?5: *) -> *
Nat :?11: *
Nothing :?9: (a :?10: *) -> *
Plus :?14: (x :!R: Nat) -> (y :!R: Nat) -> Nat
S :?13: (n :!R: Nat) -> Nat
True :?2: Bool
Z :?12: Nat
apply :?44: (f :?45: (_ :?46: Nat) -> Nat) -> (_ :?47: Nat) -> Nat
  [] -> [(?45,R),(?48,R),(!N,N),(!R,R)]
  [?46] -> [(?49,R)]
  [?47] -> [(?50,R)]
  [?49] -> [(?46,R),(?50,R),(?51,R)]
  [?50] -> [(?47,R)]

const_3 :?18: (_ :?19: Nat) -> Nat
  [] -> [(?12,R),(?13,R),(?21,R),(?22,R),(?23,R),(!N,N),(!R,R)]
  [?19] -> [(?20,R)]
  [?20] -> [(?19,R)]

f :?27: (g :?28: (_ :?29: Nat) -> Nat) -> (z :?30: Nat) -> (h :?31: (_ :?32: Nat) -> Nat) -> (w :?33: Nat) -> Nat
  [] -> [(?14,R),(?28,R),(?31,R),(?34,R),(?37,R),(?40,R),(?41,R),(!N,N),(!R,R)]
  [?29] -> [(?35,R)]
  [?30] -> [(?36,R)]
  [?32] -> [(?38,R)]
  [?33] -> [(?39,R)]
  [?35] -> [(?29,R),(?36,R),(?42,R)]
  [?36] -> [(?30,R)]
  [?38] -> [(?32,R),(?39,R),(?43,R)]
  [?39] -> [(?33,R)]

id :?15: (_ :?16: Nat) -> Nat
  [] -> [(?16,R),(?17,R),(!N,N),(!R,R)]

main :!R: Nat
  [] -> [(?12_9,R),(?12_10,R),(?13_9,R),(?13_10,R),(?14,R),(?14_9,R),(?14_10,R),(?15_9,R),(?15_10,R),(?16_9,R),(?16_10,R),(?17_9,R),(?17_10,R),(?18_9,R),(?18_10,R),(?19_9,N),(?20_9,N),(?21_9,R),(?21_10,R),(?22_9,R),(?22_10,R),(?23_9,R),(?23_10,R),(?24_9,N),(?25_9,N),(?26_9,N),(?27_10,R),(?28_10,R),(?29_10,R),(?30_10,R),(?31_10,R),(?34_10,R),(?35_10,R),(?36_10,R),(?37_10,R),(?40_10,R),(?41_10,R),(?42_10,R),(?44_9,R),(?45_9,R),(?46_9,R),(?47_9,R),(?48_9,R),(?49_9,R),(?50_9,R),(?51_9,R),(?52,R),(?53_9,R),(?54_9,R),(?55_9,R),(?56_9,R),(?57_9,R),(?58_9,R),(?59_9,N),(?60_9,R),(?61,R),(?63_10,R),(?64_10,R),(?65_10,R),(?66_10,R),(?67_10,R),(?69,R),(?70,R),(!N,N),(!R,R)]
  [?19_10] -> [(?19_10,R),(?20_10,R),(?32_10,R)]
  [?20_10] -> [(?19_10,R)]
  [?32_10] -> [(?19_10,R),(?32_10,R),(?38_10,R)]
  [?33_10] -> [(?12_10,R),(?13_10,R),(?33_10,R),(?39_10,R),(?62_10,R),(?68_10,R)]
  [?38_10] -> [(?32_10,R),(?39_10,R),(?43_10,R)]
  [?39_10] -> [(?33_10,R)]

test_1 :?52: Nat
  [] -> [(?12,R),(?12_4,R),(?12_5,N),(?13,R),(?13_4,R),(?13_5,N),(?14,R),(?15,R),(?16,R),(?16_2,R),(?17_2,R),(?18,R),(?19,N),(?19_4,N),(?20_4,N),(?21_4,R),(?22_4,R),(?23_4,R),(?24,N),(?25_5,N),(?26_5,N),(?44,R),(?45,R),(?45_1,R),(?45_3,R),(?46,R),(?46_1,R),(?46_3,N),(?47,R),(?47_1,R),(?47_3,N),(?48_1,R),(?48_3,R),(?49_1,R),(?49_3,N),(?50_1,R),(?50_3,N),(?51_1,R),(?51_3,N),(?53,R),(?54,R),(?55,R),(?56,R),(?57,R),(?58,R),(?59,N),(?60,R),(!N,N),(!R,R)]

test_2 :?61: Nat
  [] -> [(?12,R),(?12_8,R),(?13,R),(?13_8,R),(?14_6,R),(?15,R),(?16,R),(?16_7,R),(?17_7,R),(?18,R),(?21_8,R),(?22_8,R),(?23_8,R),(?27,R),(?28,R),(?28_6,R),(?29,R),(?29_6,R),(?30,R),(?30_6,R),(?31,R),(?31_6,R),(?34_6,R),(?35_6,R),(?36_6,R),(?37_6,R),(?40_6,R),(?41_6,R),(?42_6,R),(?63,R),(?64,R),(?65,R),(?66,R),(?67,R),(!N,N),(!R,R)]
  [?19] -> [(?19_8,N)]
  [?19_8] -> [(?19,R),(?20_8,R),(?32_6,R)]
  [?20_8] -> [(?19_8,R)]
  [?32] -> [(?32_6,N)]
  [?32_6] -> [(?19_8,R),(?32,R),(?38_6,R)]
  [?33] -> [(?33_6,N)]
  [?33_6] -> [(?12,R),(?13,R),(?33,R),(?39_6,R),(?62,R),(?68,R)]
  [?38_6] -> [(?32_6,R),(?39_6,R),(?43_6,R)]
  [?39_6] -> [(?33_6,R)]

two :?24: Nat
  [] -> [(?12,R),(?13,R),(?25,R),(?26,R),(!N,N),(!R,R)]


### Constraints ###

[] -> [(?12,R),(?12_4,R),(?12_5,N),(?12_8,R),(?12_9,R),(?12_10,R),(?13,R),(?13_4,R),(?13_5,N),(?13_8,R),(?13_9,R),(?13_10,R),(?14,R),(?14_6,R),(?14_9,R),(?14_10,R),(?15,R),(?15_9,R),(?15_10,R),(?16,R),(?16_2,R),(?16_7,R),(?16_9,R),(?16_10,R),(?17,R),(?17_2,R),(?17_7,R),(?17_9,R),(?17_10,R),(?18,R),(?18_9,R),(?18_10,R),(?19,N),(?19_4,N),(?19_9,N),(?20_4,N),(?20_9,N),(?21,R),(?21_4,R),(?21_8,R),(?21_9,R),(?21_10,R),(?22,R),(?22_4,R),(?22_8,R),(?22_9,R),(?22_10,R),(?23,R),(?23_4,R),(?23_8,R),(?23_9,R),(?23_10,R),(?24,N),(?24_9,N),(?25,R),(?25_5,N),(?25_9,N),(?26,R),(?26_5,N),(?26_9,N),(?27,R),(?27_10,R),(?28,R),(?28_6,R),(?28_10,R),(?29,R),(?29_6,R),(?29_10,R),(?30,R),(?30_6,R),(?30_10,R),(?31,R),(?31_6,R),(?31_10,R),(?34,R),(?34_6,R),(?34_10,R),(?35_6,R),(?35_10,R),(?36_6,R),(?36_10,R),(?37,R),(?37_6,R),(?37_10,R),(?40,R),(?40_6,R),(?40_10,R),(?41,R),(?41_6,R),(?41_10,R),(?42_6,R),(?42_10,R),(?44,R),(?44_9,R),(?45,R),(?45_1,R),(?45_3,R),(?45_9,R),(?46,R),(?46_1,R),(?46_3,N),(?46_9,R),(?47,R),(?47_1,R),(?47_3,N),(?47_9,R),(?48,R),(?48_1,R),(?48_3,R),(?48_9,R),(?49_1,R),(?49_3,N),(?49_9,R),(?50_1,R),(?50_3,N),(?50_9,R),(?51_1,R),(?51_3,N),(?51_9,R),(?52,R),(?53,R),(?53_9,R),(?54,R),(?54_9,R),(?55,R),(?55_9,R),(?56,R),(?56_9,R),(?57,R),(?57_9,R),(?58,R),(?58_9,R),(?59,N),(?59_9,N),(?60,R),(?60_9,R),(?61,R),(?63,R),(?63_10,R),(?64,R),(?64_10,R),(?65,R),(?65_10,R),(?66,R),(?66_10,R),(?67,R),(?67_10,R),(?69,R),(?70,R),(!N,N),(!R,R)]
[?19] -> [(?19_8,N),(?20,R)]
[?19_8] -> [(?19,R),(?20_8,R),(?32_6,R)]
[?19_10] -> [(?19_10,R),(?20_10,R),(?32_10,R)]
[?20] -> [(?19,R)]
[?20_8] -> [(?19_8,R)]
[?20_10] -> [(?19_10,R)]
[?29] -> [(?35,R)]
[?30] -> [(?36,R)]
[?32] -> [(?32_6,N),(?38,R)]
[?32_6] -> [(?19_8,R),(?32,R),(?38_6,R)]
[?32_10] -> [(?19_10,R),(?32_10,R),(?38_10,R)]
[?33] -> [(?33_6,N),(?39,R)]
[?33_6] -> [(?12,R),(?13,R),(?33,R),(?39_6,R),(?62,R),(?68,R)]
[?33_10] -> [(?12_10,R),(?13_10,R),(?33_10,R),(?39_10,R),(?62_10,R),(?68_10,R)]
[?35] -> [(?29,R),(?36,R),(?42,R)]
[?36] -> [(?30,R)]
[?38] -> [(?32,R),(?39,R),(?43,R)]
[?38_6] -> [(?32_6,R),(?39_6,R),(?43_6,R)]
[?38_10] -> [(?32_10,R),(?39_10,R),(?43_10,R)]
[?39] -> [(?33,R)]
[?39_6] -> [(?33_6,R)]
[?39_10] -> [(?33_10,R)]
[?46] -> [(?49,R)]
[?47] -> [(?50,R)]
[?49] -> [(?46,R),(?50,R),(?51,R)]
[?50] -> [(?47,R)]

### Solution ###

[(?12,R),(?12_4,R),(?12_5,N),(?12_8,R),(?12_9,R),(?12_10,R),(?13,R),(?13_4,R),(?13_5,N),(?13_8,R),(?13_9,R),(?13_10,R),(?14,R),(?14_6,R),(?14_9,R),(?14_10,R),(?15,R),(?15_9,R),(?15_10,R),(?16,R),(?16_2,R),(?16_7,R),(?16_9,R),(?16_10,R),(?17,R),(?17_2,R),(?17_7,R),(?17_9,R),(?17_10,R),(?18,R),(?18_9,R),(?18_10,R),(?19,N),(?19_4,N),(?19_8,N),(?19_9,N),(?20,N),(?20_4,N),(?20_8,N),(?20_9,N),(?21,R),(?21_4,R),(?21_8,R),(?21_9,R),(?21_10,R),(?22,R),(?22_4,R),(?22_8,R),(?22_9,R),(?22_10,R),(?23,R),(?23_4,R),(?23_8,R),(?23_9,R),(?23_10,R),(?24,N),(?24_9,N),(?25,R),(?25_5,N),(?25_9,N),(?26,R),(?26_5,N),(?26_9,N),(?27,R),(?27_10,R),(?28,R),(?28_6,R),(?28_10,R),(?29,R),(?29_6,R),(?29_10,R),(?30,R),(?30_6,R),(?30_10,R),(?31,R),(?31_6,R),(?31_10,R),(?32,N),(?32_6,N),(?33,N),(?33_6,N),(?34,R),(?34_6,R),(?34_10,R),(?35,R),(?35_6,R),(?35_10,R),(?36,R),(?36_6,R),(?36_10,R),(?37,R),(?37_6,R),(?37_10,R),(?38,N),(?38_6,N),(?39,N),(?39_6,N),(?40,R),(?40_6,R),(?40_10,R),(?41,R),(?41_6,R),(?41_10,R),(?42,R),(?42_6,R),(?42_10,R),(?43,N),(?43_6,N),(?44,R),(?44_9,R),(?45,R),(?45_1,R),(?45_3,R),(?45_9,R),(?46,R),(?46_1,R),(?46_3,N),(?46_9,R),(?47,R),(?47_1,R),(?47_3,N),(?47_9,R),(?48,R),(?48_1,R),(?48_3,R),(?48_9,R),(?49,R),(?49_1,R),(?49_3,N),(?49_9,R),(?50,R),(?50_1,R),(?50_3,N),(?50_9,R),(?51,R),(?51_1,R),(?51_3,N),(?51_9,R),(?52,R),(?53,R),(?53_9,R),(?54,R),(?54_9,R),(?55,R),(?55_9,R),(?56,R),(?56_9,R),(?57,R),(?57_9,R),(?58,R),(?58_9,R),(?59,N),(?59_9,N),(?60,R),(?60_9,R),(?61,R),(?62,N),(?63,R),(?63_10,R),(?64,R),(?64_10,R),(?65,R),(?65_10,R),(?66,R),(?66_10,R),(?67,R),(?67_10,R),(?68,N),(?69,R),(?70,R),(!N,N),(!R,R)]

### Annotated ###

Bool :E: *

True :E: Bool

False :E: Bool

Maybe :E: (_ :E: *) -> *

Just :E: (a :E: *) -> (_ :E: a) -> *

Nothing :E: (a :E: *) -> *

Nat :E: *

Z :R: Nat

S :R: (n :R: Nat) -> Nat

Plus :R: (x :R: Nat) -> (y :R: Nat) -> Nat

id :R: (_ :R: Nat) -> Nat
id = \y :R: Nat. y

const_3 :R: (_ :N: Nat) -> Nat
const_3 = \_ :N: Nat. 3

two :N: Nat
two = 2

f :R: (g :R: (_ :R: Nat) -> Nat) -> (z :R: Nat) -> (h :R: (_ :N: Nat) -> Nat) -> (w :N: Nat) -> Nat
f = \g :R: (_ :R: Nat) -> Nat. \z :R: Nat. \h :R: (_ :N: Nat) -> Nat. \w :N: Nat. (Plus -R- (g -R- z) -R- (h -N- w))

apply :R: (f :R: (_ :R: Nat) -> Nat) -> (_ :R: Nat) -> Nat
apply = \f :R: (_ :R: Nat) -> Nat. \x :R: Nat. (f -R- x)

test_1 :R: Nat
test_1 = (Plus -R- (apply -R- id -R- 2) -R- (apply -R- const_3 -N- two))

test_2 :R: Nat
test_2 = (f -R- id -R- 2 -R- const_3 -N- 1)

main :R: Nat
main = (Plus -R- test_1 -R- test_2)

### Pruned ###

id = \y. y

const_3 = \_. 3

f = \g. \z. \h. \w. (Plus (g z) (h ____))

apply = \f. \x. (f x)

test_1 = (Plus (apply id 2) (apply const_3 ____))

test_2 = (f id 2 const_3 ____)

main = (Plus test_1 test_2)

