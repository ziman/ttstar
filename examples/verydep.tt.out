-- vim: ft=agda

### Desugared ###

Void : *
Void = (axiom)

Maybe : (_ : *) -> *
Maybe = (axiom)

Just : (a : *) -> (x : a) -> (Maybe a)
Just = (axiom)

Nothing : (a : *) -> (Maybe a)
Nothing = (axiom)

Bool : *
Bool = (axiom)

True : Bool
True = (axiom)

False : Bool
False = (axiom)

not : (x : Bool) -> Bool
not = \x : Bool. 
  case x of
    True -> False
    False -> True

retTy : (x : (Maybe Bool)) -> *
retTy = \x : (Maybe Bool). 
  case x of
    Just a t -> Bool
    Nothing a -> *

f : (x : (Maybe Bool)) -> (retTy x)
f = \x : (Maybe Bool). 
  case x of
    Just a b -> b
    Nothing a -> Bool

main  -R-  Bool
main = (f (Just Bool False))

### Metaified ###

Void :?1: *
Void = (axiom)

Maybe :?2: (_ :?3: *) -> *
Maybe = (axiom)

Just :?4: (a :?5: *) -> (x :?6: a) -> (Maybe -?7- a)
Just = (axiom)

Nothing :?8: (a :?9: *) -> (Maybe -?10- a)
Nothing = (axiom)

Bool :?11: *
Bool = (axiom)

True :?12: Bool
True = (axiom)

False :?13: Bool
False = (axiom)

not :?14: (x :?15: Bool) -> Bool
not = \x :?16: Bool. 
  case x of
    True -> False
    False -> True

retTy :?19: (x :?20: (Maybe -?21- Bool)) -> *
retTy = \x :?22: (Maybe -?23- Bool). 
  case x of
    Just a t -> Bool
    Nothing a -> *

f :?26: (x :?27: (Maybe -?28- Bool)) -> (retTy -?29- x)
f = \x :?30: (Maybe -?31- Bool). 
  case x of
    Just a b -> b
    Nothing a -> Bool

main :!R: Bool
main = (f -?34- (Just -?36- Bool -?35- False))

### Constraints ###

[?4] <- [?24]
[?4] <- [?32]
[?4] <- [?34,!R]
[?5] <- [?34,?36]
[?6] <- [?34,?35]
[?6] <- [!R]
[?7] <- [?28]
[?7] <- [?31]
[?8] <- [?25]
[?8] <- [?33]
[?10] <- [?31]
[?11] <- [?34,?36,!R]
[?11] <- [!R]
[?12] <- [?17]
[?12] <- [!R]
[?13] <- [?18]
[?13] <- [?34,?35,!R]
[?13] <- [!R]
[?15] <- [?16]
[?16] <- [?15]
[?16] <- [!R]
[?17] <- [?12]
[?18] <- [?13]
[?20] <- [?22]
[?21] <- [?23]
[?22] <- [?20]
[?22] <- [!R]
[?23] <- [?21]
[?24] <- [?4]
[?24] <- [?32]
[?25] <- [?8]
[?25] <- [?33]
[?26] <- [!R]
[?27] <- [?30]
[?27] <- [?34]
[?27] <- [!R]
[?28] <- [?7]
[?28] <- [?31]
[?30] <- [?27]
[?30] <- [!R]
[?31] <- [?7]
[?31] <- [?10]
[?31] <- [?28]
[?32] <- [?4]
[?32] <- [?24]
[?33] <- [?8]
[?33] <- [?25]
[?34] <- [?27]
[?35] <- [?6,?34]
[?36] <- [?5,?34]

### Solution ###

[?4,?6,?11,?12,?13,?15,?16,?17,?18,?20,?22,?24,?26,?27,?30,?32,?34,?35,!R]

### Annotated ###

Void :I: *
Void = (axiom)

Maybe :I: (_ :I: *) -> *
Maybe = (axiom)

Just :R: (a :I: *) -> (x :R: a) -> (Maybe -I- a)
Just = (axiom)

Nothing :I: (a :I: *) -> (Maybe -I- a)
Nothing = (axiom)

Bool :R: *
Bool = (axiom)

True :R: Bool
True = (axiom)

False :R: Bool
False = (axiom)

not :I: (x :R: Bool) -> Bool
not = \x :R: Bool. 
  case x of
    True -> False
    False -> True

retTy :I: (x :R: (Maybe -I- Bool)) -> *
retTy = \x :R: (Maybe -I- Bool). 
  case x of
    Just a t -> Bool
    Nothing a -> *

f :R: (x :R: (Maybe -I- Bool)) -> (retTy -I- x)
f = \x :R: (Maybe -I- Bool). 
  case x of
    Just a b -> b
    Nothing a -> Bool

main :R: Bool
main = (f -R- (Just -I- Bool -R- False))

### Pruned ###

Just = (axiom)

Bool = (axiom)

True = (axiom)

False = (axiom)

f = \x. 
  case x of
    Just a b -> b
    Nothing a -> Bool

main = (f (Just False))

