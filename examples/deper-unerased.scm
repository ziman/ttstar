(require-extension matchable)
(define Type '(Type))
(print
  (letrec* (
    (Bool `(Bool))
    (T `(T))
    (F `(F))
    (TwoBools `(TwoBools))
    (TB (lambda (x)
      (lambda (y)
        `(TB ,x ,y))))
    (id (lambda (x)
      x))
    (constT (lambda (_0)
      T))
    (fty (lambda (_e0)
      (match (list _e0)
        [(('T))
          '_]
        [(('F))
          '_])))
    (f (lambda (_e0)
      (match (list _e0)
        [(('T))
          id]
        [(('F))
          constT])))
    (main ((TB ((f T) F)) ((f F) F)))
  )
    main))
