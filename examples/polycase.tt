-- vim: ft=idris

postulate Mool : *.
postulate Q : Mool.
postulate W : Mool.

postulate Bool : *.
postulate T : Bool.
postulate F : Bool.

postulate Id : (a : *) -> (x : a) -> (y : a) -> *.
postulate Refl : (a : *) -> (x : a) -> Id x x.

not : Bool -> Bool.
  not T = F,
  not F = T.

notnot : (x : Bool) -> Id x (not (not x)).
  notnot T = Refl Bool T,
  notnot F = Refl Bool F.

retTy : Bool -> *.
  retTy T = Bool,
  retTy F = Mool.

mot : Mool -> Mool.
  mot Q = W,
  mot W = Q.

invert : (t : Bool) -> (retTy t) -> retTy t.
  pat (x : Bool).
    invert T x = not x,
  pat (x : Mool).
    invert F x = mot x.

main :R: Mool = invert F Q.
