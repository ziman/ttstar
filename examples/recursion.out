-- vim: ft=agda

### Desugared ###

Bool : *

True : Bool

False : Bool

Nat : *

Z : Nat

S : (n  -R- : Nat) -> Nat

Vec : (_ :: Nat) -> (_ :: *) -> *

VNil : (a :: *) -> (Vec Z a)

VCons : (a :: *) -> (n :: Nat) -> (x :: a) -> (xs :: (Vec n a)) -> (Vec (S n) a)

vlen : (a :: *) -> (n :: Nat) -> (xs :: (Vec n a)) -> Nat
vlen = \a :: *. \n :: Nat. \xs :: (Vec n a). 
  case xs of
    VNil (a : *) -> Z
    VCons (a : *) (n : Nat) (x : a) (xs : (Vec n a)) -> (S (vlen a n xs))

testVec : (Vec 2 Bool)
testVec = (VCons Bool 1 True (VCons Bool Z False (VNil Bool)))

main  -R-  Nat
main = (vlen Bool 2 testVec)

### Metaified ###

Bool :?1: *

True :?2: Bool

False :?3: Bool

Nat :?4: *

Z :?5: Nat

S :?6: (n :!R::?7: Nat) -> Nat

Vec :?8: (_ :?9::?10: Nat) -> (_ :?11::?12: *) -> *

VNil :?13: (a :?14::?15: *) -> (Vec -?19- Z -?17- a)

VCons :?20: (a :?21::?22: *) -> (n :?23::?24: Nat) -> (x :?25::?26: a) -> (xs :?27::?32: (Vec -?31- n -?29- a)) -> (Vec -?36- (S -?38- n) -?34- a)

vlen :?39: (a :?40::?41: *) -> (n :?42::?43: Nat) -> (xs :?44::?49: (Vec -?48- n -?46- a)) -> Nat
vlen = \a :?50::?51: *. \n :?52::?53: Nat. \xs :?54::?59: (Vec -?58- n -?56- a). 
  case xs of
    VNil (a :?60: *) -> Z
    VCons (a :?62: *) (n :?64: Nat) (x :?66: a) (xs :?68: (Vec -?72- n -?70- a)) -> (S -?75- (vlen -?81- a -?79- n -?77- xs))

testVec :?82: (Vec -?86- 2 -?84- Bool)
testVec = (VCons -?98- Bool -?96- 1 -?94- True -?92- (VCons -?108- Bool -?106- Z -?104- False -?102- (VNil -?110- Bool)))

main :!R: Nat
main = (vlen -?116- Bool -?114- 2 -?112- testVec)

### Inferred definitions ###

Bool :?1: *
False :?3: Bool
Nat :?4: *
S :?6: (n :!R::?7: Nat) -> Nat
True :?2: Bool
VCons :?20: (a :?21::?22: *) -> (n :?23::?24: Nat) -> (x :?25::?26: a) -> (xs :?27::?32: (Vec -?31- n -?29- a)) -> (Vec -?36- (S -?38- n) -?34- a)
VNil :?13: (a :?14::?15: *) -> (Vec -?19- Z -?17- a)
Vec :?8: (_ :?9::?10: Nat) -> (_ :?11::?12: *) -> *
Z :?5: Nat
main :!R: Nat
  [] -> [?5_1,?6_1,?7_1,?20_2,?27_1,?39,?39_1,?44,?44_1,?49_1,?54_1,?59_1,?68_1,?74_1,?75_1,?76_1,?77_1,?82,?111,?112,!R]
  [?14_2,?27_2] -> [?1_2,?109_2,?110_2]
  [?16_2,?27_2] -> [?28_2]
  [?17_2,?27_2] -> [?29_2]
  [?18_2,?27_2] -> [?30_2]
  [?19_2,?27_2] -> [?31_2]
  [?21_2] -> [?1_2,?97_2,?98_2]
  [?21_2,?27_2] -> [?1_2,?107_2,?108_2]
  [?23_2] -> [?5_2,?6_2,?95_2,?96_2,?99_2,?100_2]
  [?23_2,?27_2] -> [?5_2,?105_2,?106_2]
  [?23_2,?100_2] -> [?7_2]
  [?25_2] -> [?2_2,?93_2,?94_2]
  [?25_2,?27_2] -> [?3_2,?103_2,?104_2]
  [?27_2] -> [?13_2,?91_2,?92_2,?101_2,?102_2]
  [?27_2,?28_2] -> [?16_2]
  [?27_2,?29_2] -> [?17_2]
  [?27_2,?30_2] -> [?18_2]
  [?27_2,?31_2] -> [?19_2]
  [?27_2,?102_2] -> [?32_2]
  [?27_2,?104_2] -> [?26_2]
  [?27_2,?106_2] -> [?24_2]
  [?27_2,?108_2] -> [?22_2]
  [?27_2,?110_2] -> [?15_2]
  [?28_1] -> [?69_1]
  [?28_2] -> [?33_2]
  [?29_1] -> [?70_1]
  [?29_2] -> [?34_2]
  [?30_1] -> [?71_1]
  [?30_2] -> [?35_2]
  [?31_1] -> [?72_1]
  [?31_2] -> [?36_2]
  [?33_2] -> [?28_2,?83_2]
  [?34_2] -> [?29_2,?84_2]
  [?35_2] -> [?30_2,?85_2]
  [?36_2] -> [?31_2,?86_2]
  [?37_2] -> [?87_2,?99_2]
  [?38_2] -> [?88_2,?100_2]
  [?40] -> [?115]
  [?40_1] -> [?1,?40,?50_1,?62_1,?80_1,?81_1,?116]
  [?41_1] -> [?51_1]
  [?42] -> [?113]
  [?42_1] -> [?5,?6,?42,?52_1,?64_1,?78_1,?79_1,?114,?117,?118,?119,?120]
  [?42_1,?118] -> [?7]
  [?42_1,?120] -> [?7]
  [?43_1] -> [?53_1]
  [?45_1] -> [?45,?55_1,?69_1,?83_2]
  [?46_1] -> [?46,?56_1,?70_1,?84_2]
  [?47_1] -> [?47,?57_1,?71_1,?85_2]
  [?48_1] -> [?48,?58_1,?72_1,?86_2]
  [?50_1] -> [?40_1]
  [?51_1] -> [?41_1]
  [?52_1] -> [?42_1]
  [?53_1] -> [?43_1]
  [?55_1] -> [?45_1]
  [?56_1] -> [?46_1]
  [?57_1] -> [?47_1]
  [?58_1] -> [?48_1]
  [?60_1] -> [?14_1]
  [?62_1] -> [?21_1]
  [?64_1] -> [?23_1]
  [?66_1] -> [?25_1]
  [?69_1] -> [?28_1,?45_1]
  [?70_1] -> [?29_1,?46_1]
  [?71_1] -> [?30_1,?47_1]
  [?72_1] -> [?31_1,?48_1]
  [?79_1] -> [?43_1]
  [?81_1] -> [?41_1]
  [?83_2] -> [?33_2,?45_1,?83]
  [?84_2] -> [?34_2,?46_1,?84]
  [?85_2] -> [?35_2,?47_1,?85]
  [?86_2] -> [?36_2,?48_1,?86]
  [?87_2] -> [?37_2,?87,?117]
  [?88_2] -> [?38_2,?88,?118]
  [?89_2] -> [?89,?99_2,?119]
  [?90_2] -> [?90,?100_2,?120]
  [?92_2] -> [?32_2]
  [?94_2] -> [?26_2]
  [?96_2] -> [?24_2]
  [?98_2] -> [?22_2]
  [?99_2] -> [?37_2,?89_2]
  [?100_2] -> [?38_2,?90_2]
  [?114] -> [?43_1]
  [?116] -> [?41_1]
  [?117] -> [?87_2]
  [?118] -> [?88_2]
  [?119] -> [?89_2]
  [?120] -> [?90_2]

testVec :?82: (Vec -?86- 2 -?84- Bool)
  [] -> [?20,!R]
  [?14,?27] -> [?1,?109,?110]
  [?16,?27] -> [?28]
  [?17,?27] -> [?29]
  [?18,?27] -> [?30]
  [?19,?27] -> [?31]
  [?21] -> [?1,?97,?98]
  [?21,?27] -> [?1,?107,?108]
  [?23] -> [?5,?6,?95,?96,?99,?100]
  [?23,?27] -> [?5,?105,?106]
  [?23,?100] -> [?7]
  [?25] -> [?2,?93,?94]
  [?25,?27] -> [?3,?103,?104]
  [?27] -> [?13,?91,?92,?101,?102]
  [?27,?28] -> [?16]
  [?27,?29] -> [?17]
  [?27,?30] -> [?18]
  [?27,?31] -> [?19]
  [?27,?102] -> [?32]
  [?27,?104] -> [?26]
  [?27,?106] -> [?24]
  [?27,?108] -> [?22]
  [?27,?110] -> [?15]
  [?28] -> [?33]
  [?29] -> [?34]
  [?30] -> [?35]
  [?31] -> [?36]
  [?33] -> [?28,?83]
  [?34] -> [?29,?84]
  [?35] -> [?30,?85]
  [?36] -> [?31,?86]
  [?37] -> [?87,?99]
  [?38] -> [?88,?100]
  [?83] -> [?33]
  [?84] -> [?34]
  [?85] -> [?35]
  [?86] -> [?36]
  [?87] -> [?37]
  [?88] -> [?38]
  [?89] -> [?99]
  [?90] -> [?100]
  [?92] -> [?32]
  [?94] -> [?26]
  [?96] -> [?24]
  [?98] -> [?22]
  [?99] -> [?37,?89]
  [?100] -> [?38,?90]

vlen :?39: (a :?40::?41: *) -> (n :?42::?43: Nat) -> (xs :?44::?49: (Vec -?48- n -?46- a)) -> Nat
  [] -> [?5,?6,?7,?27,?39,?44,?49,?54,?59,?68,?74,?75,?76,?77,!R]
  [?28] -> [?69]
  [?29] -> [?70]
  [?30] -> [?71]
  [?31] -> [?72]
  [?40] -> [?50,?62,?80,?81]
  [?41] -> [?51]
  [?42] -> [?52,?64,?78,?79]
  [?43] -> [?53]
  [?45] -> [?55,?69]
  [?46] -> [?56,?70]
  [?47] -> [?57,?71]
  [?48] -> [?58,?72]
  [?50] -> [?40]
  [?51] -> [?41]
  [?52] -> [?42]
  [?53] -> [?43]
  [?55] -> [?45]
  [?56] -> [?46]
  [?57] -> [?47]
  [?58] -> [?48]
  [?60] -> [?14]
  [?62] -> [?21]
  [?64] -> [?23]
  [?66] -> [?25]
  [?69] -> [?28,?45]
  [?70] -> [?29,?46]
  [?71] -> [?30,?47]
  [?72] -> [?31,?48]
  [?79] -> [?43]
  [?81] -> [?41]


### Constraints ###

[] -> [?5,?5_1,?6,?6_1,?7,?7_1,?20,?20_2,?27,?27_1,?39,?39_1,?44,?44_1,?49,?49_1,?54,?54_1,?59,?59_1,?68,?68_1,?74,?74_1,?75,?75_1,?76,?76_1,?77,?77_1,?82,?111,?112,!R]
[?14,?27] -> [?1,?109,?110]
[?14_2,?27_2] -> [?1_2,?109_2,?110_2]
[?16,?27] -> [?28]
[?16_2,?27_2] -> [?28_2]
[?17,?27] -> [?29]
[?17_2,?27_2] -> [?29_2]
[?18,?27] -> [?30]
[?18_2,?27_2] -> [?30_2]
[?19,?27] -> [?31]
[?19_2,?27_2] -> [?31_2]
[?21] -> [?1,?97,?98]
[?21,?27] -> [?1,?107,?108]
[?21_2] -> [?1_2,?97_2,?98_2]
[?21_2,?27_2] -> [?1_2,?107_2,?108_2]
[?23] -> [?5,?6,?95,?96,?99,?100]
[?23,?27] -> [?5,?105,?106]
[?23,?100] -> [?7]
[?23_2] -> [?5_2,?6_2,?95_2,?96_2,?99_2,?100_2]
[?23_2,?27_2] -> [?5_2,?105_2,?106_2]
[?23_2,?100_2] -> [?7_2]
[?25] -> [?2,?93,?94]
[?25,?27] -> [?3,?103,?104]
[?25_2] -> [?2_2,?93_2,?94_2]
[?25_2,?27_2] -> [?3_2,?103_2,?104_2]
[?27] -> [?13,?91,?92,?101,?102]
[?27,?28] -> [?16]
[?27,?29] -> [?17]
[?27,?30] -> [?18]
[?27,?31] -> [?19]
[?27,?102] -> [?32]
[?27,?104] -> [?26]
[?27,?106] -> [?24]
[?27,?108] -> [?22]
[?27,?110] -> [?15]
[?27_2] -> [?13_2,?91_2,?92_2,?101_2,?102_2]
[?27_2,?28_2] -> [?16_2]
[?27_2,?29_2] -> [?17_2]
[?27_2,?30_2] -> [?18_2]
[?27_2,?31_2] -> [?19_2]
[?27_2,?102_2] -> [?32_2]
[?27_2,?104_2] -> [?26_2]
[?27_2,?106_2] -> [?24_2]
[?27_2,?108_2] -> [?22_2]
[?27_2,?110_2] -> [?15_2]
[?28] -> [?33,?69]
[?28_1] -> [?69_1]
[?28_2] -> [?33_2]
[?29] -> [?34,?70]
[?29_1] -> [?70_1]
[?29_2] -> [?34_2]
[?30] -> [?35,?71]
[?30_1] -> [?71_1]
[?30_2] -> [?35_2]
[?31] -> [?36,?72]
[?31_1] -> [?72_1]
[?31_2] -> [?36_2]
[?33] -> [?28,?83]
[?33_2] -> [?28_2,?83_2]
[?34] -> [?29,?84]
[?34_2] -> [?29_2,?84_2]
[?35] -> [?30,?85]
[?35_2] -> [?30_2,?85_2]
[?36] -> [?31,?86]
[?36_2] -> [?31_2,?86_2]
[?37] -> [?87,?99]
[?37_2] -> [?87_2,?99_2]
[?38] -> [?88,?100]
[?38_2] -> [?88_2,?100_2]
[?40] -> [?50,?62,?80,?81,?115]
[?40_1] -> [?1,?40,?50_1,?62_1,?80_1,?81_1,?116]
[?41] -> [?51]
[?41_1] -> [?51_1]
[?42] -> [?52,?64,?78,?79,?113]
[?42_1] -> [?5,?6,?42,?52_1,?64_1,?78_1,?79_1,?114,?117,?118,?119,?120]
[?42_1,?118] -> [?7]
[?42_1,?120] -> [?7]
[?43] -> [?53]
[?43_1] -> [?53_1]
[?45] -> [?55,?69]
[?45_1] -> [?45,?55_1,?69_1,?83_2]
[?46] -> [?56,?70]
[?46_1] -> [?46,?56_1,?70_1,?84_2]
[?47] -> [?57,?71]
[?47_1] -> [?47,?57_1,?71_1,?85_2]
[?48] -> [?58,?72]
[?48_1] -> [?48,?58_1,?72_1,?86_2]
[?50] -> [?40]
[?50_1] -> [?40_1]
[?51] -> [?41]
[?51_1] -> [?41_1]
[?52] -> [?42]
[?52_1] -> [?42_1]
[?53] -> [?43]
[?53_1] -> [?43_1]
[?55] -> [?45]
[?55_1] -> [?45_1]
[?56] -> [?46]
[?56_1] -> [?46_1]
[?57] -> [?47]
[?57_1] -> [?47_1]
[?58] -> [?48]
[?58_1] -> [?48_1]
[?60] -> [?14]
[?60_1] -> [?14_1]
[?62] -> [?21]
[?62_1] -> [?21_1]
[?64] -> [?23]
[?64_1] -> [?23_1]
[?66] -> [?25]
[?66_1] -> [?25_1]
[?69] -> [?28,?45]
[?69_1] -> [?28_1,?45_1]
[?70] -> [?29,?46]
[?70_1] -> [?29_1,?46_1]
[?71] -> [?30,?47]
[?71_1] -> [?30_1,?47_1]
[?72] -> [?31,?48]
[?72_1] -> [?31_1,?48_1]
[?79] -> [?43]
[?79_1] -> [?43_1]
[?81] -> [?41]
[?81_1] -> [?41_1]
[?83] -> [?33]
[?83_2] -> [?33_2,?45_1,?83]
[?84] -> [?34]
[?84_2] -> [?34_2,?46_1,?84]
[?85] -> [?35]
[?85_2] -> [?35_2,?47_1,?85]
[?86] -> [?36]
[?86_2] -> [?36_2,?48_1,?86]
[?87] -> [?37]
[?87_2] -> [?37_2,?87,?117]
[?88] -> [?38]
[?88_2] -> [?38_2,?88,?118]
[?89] -> [?99]
[?89_2] -> [?89,?99_2,?119]
[?90] -> [?100]
[?90_2] -> [?90,?100_2,?120]
[?92] -> [?32]
[?92_2] -> [?32_2]
[?94] -> [?26]
[?94_2] -> [?26_2]
[?96] -> [?24]
[?96_2] -> [?24_2]
[?98] -> [?22]
[?98_2] -> [?22_2]
[?99] -> [?37,?89]
[?99_2] -> [?37_2,?89_2]
[?100] -> [?38,?90]
[?100_2] -> [?38_2,?90_2]
[?114] -> [?43_1]
[?116] -> [?41_1]
[?117] -> [?87_2]
[?118] -> [?88_2]
[?119] -> [?89_2]
[?120] -> [?90_2]

### Solution ###

[?5,?5_1,?6,?6_1,?7,?7_1,?13,?20,?20_2,?27,?27_1,?32,?39,?39_1,?44,?44_1,?49,?49_1,?54,?54_1,?59,?59_1,?68,?68_1,?74,?74_1,?75,?75_1,?76,?76_1,?77,?77_1,?82,?91,?92,?101,?102,?111,?112,!R]

### Annotated ###

Bool :E: *

True :E: Bool

False :E: Bool

Nat :E: *

Z :R: Nat

S :R: (n :R::R: Nat) -> Nat

Vec :E: (_ :E::E: Nat) -> (_ :E::E: *) -> *

VNil :R: (a :E::E: *) -> (Vec -E- Z -E- a)

VCons :R: (a :E::E: *) -> (n :E::E: Nat) -> (x :E::E: a) -> (xs :R::R: (Vec -E- n -E- a)) -> (Vec -E- (S -E- n) -E- a)

vlen :R: (a :E::E: *) -> (n :E::E: Nat) -> (xs :R::R: (Vec -E- n -E- a)) -> Nat
vlen = \a :E::E: *. \n :E::E: Nat. \xs :R::R: (Vec -E- n -E- a). 
  case xs of
    VNil (a :E: *) -> Z
    VCons (a :E: *) (n :E: Nat) (x :E: a) (xs :R: (Vec -E- n -E- a)) -> (S -R- (vlen -E- a -E- n -R- xs))

testVec :R: (Vec -E- 2 -E- Bool)
testVec = (VCons -E- Bool -E- 1 -E- True -R- (VCons -E- Bool -E- Z -E- False -R- (VNil -E- Bool)))

main :R: Nat
main = (vlen -E- Bool -E- 2 -R- testVec)

### Pruned ###

vlen = \xs. 
  case xs of
    VNil -> Z
    VCons xs -> (S (vlen xs))

testVec = (VCons (VCons VNil))

main = (vlen testVec)

### Normal forms ###

unerased:
  2
erased:
  2
