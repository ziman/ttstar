-- vim: ft=agda

### Desugared ###

Bool : *

True : Bool

False : Bool

Nat : *

Z : Nat

S : (n  -R-  Nat) -> Nat

Vec : (_ : Nat) -> (_ : *) -> *

VNil : (a : *) -> (Vec Z a)

VCons : (a : *) -> (n : Nat) -> (x : a) -> (xs : (Vec n a)) -> (Vec (S n) a)

vlen : (a : *) -> (n : Nat) -> (xs : (Vec n a)) -> Nat
vlen = \a : *. \n : Nat. \xs : (Vec n a). 
  case xs of
    VNil (a : *) -> Z
    VCons (a : *) (n : Nat) (x : a) (xs : (Vec n a)) -> (S (vlen a n xs))

testVec : (Vec 2 Bool)
testVec = (VCons Bool 1 True (VCons Bool Z False (VNil Bool)))

main  -R-  Nat
main = (vlen Bool 2 testVec)

### Metaified ###

Bool :?1: *

True :?2: Bool

False :?3: Bool

Nat :?4: *

Z :?5: Nat

S :?6: (n :!R: Nat) -> Nat

Vec :?7: (_ :?8: Nat) -> (_ :?9: *) -> *

VNil :?10: (a :?11: *) -> (Vec -?13- Z -?12- a)

VCons :?14: (a :?15: *) -> (n :?16: Nat) -> (x :?17: a) -> (xs :?18: (Vec -?20- n -?19- a)) -> (Vec -?22- (S -?23- n) -?21- a)

vlen :?24: (a :?25: *) -> (n :?26: Nat) -> (xs :?27: (Vec -?29- n -?28- a)) -> Nat
vlen = \a :?30: *. \n :?31: Nat. \xs :?32: (Vec -?34- n -?33- a). 
  case xs of
    VNil (a :?35: *) -> Z
    VCons (a :?36: *) (n :?37: Nat) (x :?38: a) (xs :?39: (Vec -?41- n -?40- a)) -> (S -?42- (vlen -?45- a -?44- n -?43- xs))

testVec :?46: (Vec -?48- 2 -?47- Bool)
testVec = (VCons -?54- Bool -?53- 1 -?52- True -?51- (VCons -?59- Bool -?58- Z -?57- False -?56- (VNil -?60- Bool)))

main :!R: Nat
main = (vlen -?63- Bool -?62- 2 -?61- testVec)

### Inferred definitions ###

Bool :?1: *
False :?3: Bool
Nat :?4: *
S :?6: (n :!R: Nat) -> Nat
True :?2: Bool
VCons :?14: (a :?15: *) -> (n :?16: Nat) -> (x :?17: a) -> (xs :?18: (Vec -?20- n -?19- a)) -> (Vec -?22- (S -?23- n) -?21- a)
VNil :?10: (a :?11: *) -> (Vec -?13- Z -?12- a)
Vec :?7: (_ :?8: Nat) -> (_ :?9: *) -> *
Z :?5: Nat
main :!R: Nat
  [] -> [(?5_1,R),(?6_1,R),(?14_2,R),(?18_1,R),(?24,R),(?24_1,R),(?27,R),(?27_1,R),(?32_1,R),(?39_1,R),(?42_1,R),(?43_1,R),(?46,R),(?61,R),(!N,N),(!R,R)]
  [?11_2,?18_2] -> [(?1_2,R),(?60_2,R)]
  [?12_2,?18_2] -> [(?19_2,R)]
  [?13_2,?18_2] -> [(?20_2,R)]
  [?15_2] -> [(?1_2,R),(?54_2,R)]
  [?15_2,?18_2] -> [(?1_2,R),(?59_2,R)]
  [?16_2] -> [(?5_2,R),(?6_2,R),(?53_2,R),(?55_2,R)]
  [?16_2,?18_2] -> [(?5_2,R),(?58_2,R)]
  [?17_2] -> [(?2_2,R),(?52_2,R)]
  [?17_2,?18_2] -> [(?3_2,R),(?57_2,R)]
  [?18_2] -> [(?10_2,R),(?14_2,R),(?51_2,R),(?56_2,R)]
  [?18_2,?19_2] -> [(?12_2,R)]
  [?18_2,?20_2] -> [(?13_2,R)]
  [?19_1] -> [(?40_1,R)]
  [?19_2] -> [(?21_2,R)]
  [?20_1] -> [(?41_1,R)]
  [?20_2] -> [(?22_2,R)]
  [?21_2] -> [(?19_2,R),(?47_2,R)]
  [?22_2] -> [(?20_2,R),(?48_2,R)]
  [?23_2] -> [(?49_2,R),(?55_2,R)]
  [?25] -> [(?25_1,N)]
  [?25_1] -> [(?1,R),(?25,R),(?30_1,R),(?36_1,R),(?45_1,R),(?63,R)]
  [?26] -> [(?26_1,N)]
  [?26_1] -> [(?5,R),(?6,R),(?26,R),(?31_1,R),(?37_1,R),(?44_1,R),(?62,R),(?64,R),(?65,R)]
  [?28] -> [(?28_1,N)]
  [?28_1] -> [(?28,R),(?33_1,R),(?40_1,R),(?47_2,R)]
  [?29] -> [(?29_1,N)]
  [?29_1] -> [(?29,R),(?34_1,R),(?41_1,R),(?48_2,R)]
  [?30_1] -> [(?25_1,R)]
  [?31_1] -> [(?26_1,R)]
  [?33_1] -> [(?28_1,R)]
  [?34_1] -> [(?29_1,R)]
  [?35_1] -> [(?11_1,R)]
  [?36_1] -> [(?15_1,R)]
  [?37_1] -> [(?16_1,R)]
  [?38_1] -> [(?17_1,R)]
  [?40_1] -> [(?19_1,R),(?28_1,R)]
  [?41_1] -> [(?20_1,R),(?29_1,R)]
  [?47] -> [(?47_2,N)]
  [?47_2] -> [(?21_2,R),(?28_1,R),(?47,R)]
  [?48] -> [(?48_2,N)]
  [?48_2] -> [(?22_2,R),(?29_1,R),(?48,R)]
  [?49] -> [(?49_2,N)]
  [?49_2] -> [(?23_2,R),(?49,R),(?64,R)]
  [?50] -> [(?50_2,N)]
  [?50_2] -> [(?50,R),(?55_2,R),(?65,R)]
  [?55_2] -> [(?23_2,R),(?50_2,R)]
  [?64] -> [(?49_2,R)]
  [?65] -> [(?50_2,R)]

testVec :?46: (Vec -?48- 2 -?47- Bool)
  [] -> [(?14,R),(!N,N),(!R,R)]
  [?11,?18] -> [(?1,R),(?60,R)]
  [?12,?18] -> [(?19,R)]
  [?13,?18] -> [(?20,R)]
  [?15] -> [(?1,R),(?54,R)]
  [?15,?18] -> [(?1,R),(?59,R)]
  [?16] -> [(?5,R),(?6,R),(?53,R),(?55,R)]
  [?16,?18] -> [(?5,R),(?58,R)]
  [?17] -> [(?2,R),(?52,R)]
  [?17,?18] -> [(?3,R),(?57,R)]
  [?18] -> [(?10,R),(?14,R),(?51,R),(?56,R)]
  [?18,?19] -> [(?12,R)]
  [?18,?20] -> [(?13,R)]
  [?19] -> [(?21,R)]
  [?20] -> [(?22,R)]
  [?21] -> [(?19,R),(?47,R)]
  [?22] -> [(?20,R),(?48,R)]
  [?23] -> [(?49,R),(?55,R)]
  [?47] -> [(?21,R)]
  [?48] -> [(?22,R)]
  [?49] -> [(?23,R)]
  [?50] -> [(?55,R)]
  [?55] -> [(?23,R),(?50,R)]

vlen :?24: (a :?25: *) -> (n :?26: Nat) -> (xs :?27: (Vec -?29- n -?28- a)) -> Nat
  [] -> [(?5,R),(?6,R),(?18,R),(?24,R),(?27,R),(?32,R),(?39,R),(?42,R),(?43,R),(!N,N),(!R,R)]
  [?19] -> [(?40,R)]
  [?20] -> [(?41,R)]
  [?25] -> [(?30,R),(?36,R),(?45,R)]
  [?26] -> [(?31,R),(?37,R),(?44,R)]
  [?28] -> [(?33,R),(?40,R)]
  [?29] -> [(?34,R),(?41,R)]
  [?30] -> [(?25,R)]
  [?31] -> [(?26,R)]
  [?33] -> [(?28,R)]
  [?34] -> [(?29,R)]
  [?35] -> [(?11,R)]
  [?36] -> [(?15,R)]
  [?37] -> [(?16,R)]
  [?38] -> [(?17,R)]
  [?40] -> [(?19,R),(?28,R)]
  [?41] -> [(?20,R),(?29,R)]


### Constraints ###

[] -> [(?5,R),(?5_1,R),(?6,R),(?6_1,R),(?14,R),(?14_2,R),(?18,R),(?18_1,R),(?24,R),(?24_1,R),(?27,R),(?27_1,R),(?32,R),(?32_1,R),(?39,R),(?39_1,R),(?42,R),(?42_1,R),(?43,R),(?43_1,R),(?46,R),(?61,R),(!N,N),(!R,R)]
[?11,?18] -> [(?1,R),(?60,R)]
[?11_2,?18_2] -> [(?1_2,R),(?60_2,R)]
[?12,?18] -> [(?19,R)]
[?12_2,?18_2] -> [(?19_2,R)]
[?13,?18] -> [(?20,R)]
[?13_2,?18_2] -> [(?20_2,R)]
[?15] -> [(?1,R),(?54,R)]
[?15,?18] -> [(?1,R),(?59,R)]
[?15_2] -> [(?1_2,R),(?54_2,R)]
[?15_2,?18_2] -> [(?1_2,R),(?59_2,R)]
[?16] -> [(?5,R),(?6,R),(?53,R),(?55,R)]
[?16,?18] -> [(?5,R),(?58,R)]
[?16_2] -> [(?5_2,R),(?6_2,R),(?53_2,R),(?55_2,R)]
[?16_2,?18_2] -> [(?5_2,R),(?58_2,R)]
[?17] -> [(?2,R),(?52,R)]
[?17,?18] -> [(?3,R),(?57,R)]
[?17_2] -> [(?2_2,R),(?52_2,R)]
[?17_2,?18_2] -> [(?3_2,R),(?57_2,R)]
[?18] -> [(?10,R),(?14,R),(?51,R),(?56,R)]
[?18,?19] -> [(?12,R)]
[?18,?20] -> [(?13,R)]
[?18_2] -> [(?10_2,R),(?14_2,R),(?51_2,R),(?56_2,R)]
[?18_2,?19_2] -> [(?12_2,R)]
[?18_2,?20_2] -> [(?13_2,R)]
[?19] -> [(?21,R),(?40,R)]
[?19_1] -> [(?40_1,R)]
[?19_2] -> [(?21_2,R)]
[?20] -> [(?22,R),(?41,R)]
[?20_1] -> [(?41_1,R)]
[?20_2] -> [(?22_2,R)]
[?21] -> [(?19,R),(?47,R)]
[?21_2] -> [(?19_2,R),(?47_2,R)]
[?22] -> [(?20,R),(?48,R)]
[?22_2] -> [(?20_2,R),(?48_2,R)]
[?23] -> [(?49,R),(?55,R)]
[?23_2] -> [(?49_2,R),(?55_2,R)]
[?25] -> [(?25_1,N),(?30,R),(?36,R),(?45,R)]
[?25_1] -> [(?1,R),(?25,R),(?30_1,R),(?36_1,R),(?45_1,R),(?63,R)]
[?26] -> [(?26_1,N),(?31,R),(?37,R),(?44,R)]
[?26_1] -> [(?5,R),(?6,R),(?26,R),(?31_1,R),(?37_1,R),(?44_1,R),(?62,R),(?64,R),(?65,R)]
[?28] -> [(?28_1,N),(?33,R),(?40,R)]
[?28_1] -> [(?28,R),(?33_1,R),(?40_1,R),(?47_2,R)]
[?29] -> [(?29_1,N),(?34,R),(?41,R)]
[?29_1] -> [(?29,R),(?34_1,R),(?41_1,R),(?48_2,R)]
[?30] -> [(?25,R)]
[?30_1] -> [(?25_1,R)]
[?31] -> [(?26,R)]
[?31_1] -> [(?26_1,R)]
[?33] -> [(?28,R)]
[?33_1] -> [(?28_1,R)]
[?34] -> [(?29,R)]
[?34_1] -> [(?29_1,R)]
[?35] -> [(?11,R)]
[?35_1] -> [(?11_1,R)]
[?36] -> [(?15,R)]
[?36_1] -> [(?15_1,R)]
[?37] -> [(?16,R)]
[?37_1] -> [(?16_1,R)]
[?38] -> [(?17,R)]
[?38_1] -> [(?17_1,R)]
[?40] -> [(?19,R),(?28,R)]
[?40_1] -> [(?19_1,R),(?28_1,R)]
[?41] -> [(?20,R),(?29,R)]
[?41_1] -> [(?20_1,R),(?29_1,R)]
[?47] -> [(?21,R),(?47_2,N)]
[?47_2] -> [(?21_2,R),(?28_1,R),(?47,R)]
[?48] -> [(?22,R),(?48_2,N)]
[?48_2] -> [(?22_2,R),(?29_1,R),(?48,R)]
[?49] -> [(?23,R),(?49_2,N)]
[?49_2] -> [(?23_2,R),(?49,R),(?64,R)]
[?50] -> [(?50_2,N),(?55,R)]
[?50_2] -> [(?50,R),(?55_2,R),(?65,R)]
[?55] -> [(?23,R),(?50,R)]
[?55_2] -> [(?23_2,R),(?50_2,R)]
[?64] -> [(?49_2,R)]
[?65] -> [(?50_2,R)]

### Solution ###

[(?5,R),(?5_1,R),(?6,R),(?6_1,R),(?10,R),(?14,R),(?14_2,R),(?18,R),(?18_1,R),(?24,R),(?24_1,R),(?27,R),(?27_1,R),(?32,R),(?32_1,R),(?39,R),(?39_1,R),(?42,R),(?42_1,R),(?43,R),(?43_1,R),(?46,R),(?51,R),(?56,R),(?61,R),(!N,N),(!R,R)]

### Annotated ###

Bool :E: *

True :E: Bool

False :E: Bool

Nat :E: *

Z :R: Nat

S :R: (n :R: Nat) -> Nat

Vec :E: (_ :E: Nat) -> (_ :E: *) -> *

VNil :R: (a :E: *) -> (Vec -E- Z -E- a)

VCons :R: (a :E: *) -> (n :E: Nat) -> (x :E: a) -> (xs :R: (Vec -E- n -E- a)) -> (Vec -E- (S -E- n) -E- a)

vlen :R: (a :E: *) -> (n :E: Nat) -> (xs :R: (Vec -E- n -E- a)) -> Nat
vlen = \a :E: *. \n :E: Nat. \xs :R: (Vec -E- n -E- a). 
  case xs of
    VNil (a :E: *) -> Z
    VCons (a :E: *) (n :E: Nat) (x :E: a) (xs :R: (Vec -E- n -E- a)) -> (S -R- (vlen -E- a -E- n -R- xs))

testVec :R: (Vec -E- 2 -E- Bool)
testVec = (VCons -E- Bool -E- 1 -E- True -R- (VCons -E- Bool -E- Z -E- False -R- (VNil -E- Bool)))

main :R: Nat
main = (vlen -E- Bool -E- 2 -R- testVec)

### Pruned ###

vlen = \xs. 
  case xs of
    VNil -> Z
    VCons xs -> (S (vlen xs))

testVec = (VCons (VCons VNil))

main = (vlen testVec)

