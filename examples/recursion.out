-- vim: ft=agda

### Desugared ###

Bool : *

True : Bool

False : Bool

Nat : *

Z : Nat

S : (n  -R-  Nat) -> Nat

Vec : (_ : Nat) -> (_ : *) -> *

VNil : (a : *) -> (Vec Z a)

VCons : (a : *) -> (n : Nat) -> (x : a) -> (xs : (Vec n a)) -> (Vec (S n) a)

vlen : (a : *) -> (n : Nat) -> (xs : (Vec n a)) -> Nat
vlen = \a : *. \n : Nat. \xs : (Vec n a). 
  case xs of
    VNil (a : *) -> Z
    VCons (a : *) (n : Nat) (x : a) (xs : (Vec n a)) -> (S (vlen a n xs))

testVec : (Vec 2 Bool)
testVec = (VCons Bool 1 True (VCons Bool Z False (VNil Bool)))

main  -R-  Nat
main = (vlen Bool 2 testVec)

### Metaified ###

Bool :?1: *

True :?2: Bool

False :?3: Bool

Nat :?4: *

Z :?5: Nat

S :?6: (n :!R: Nat) -> Nat

Vec :?7: (_ :?8: Nat) -> (_ :?9: *) -> *

VNil :?10: (a :?11: *) -> (Vec -?15- Z -?13- a)

VCons :?16: (a :?17: *) -> (n :?18: Nat) -> (x :?19: a) -> (xs :?20: (Vec -?24- n -?22- a)) -> (Vec -?28- (S -?30- n) -?26- a)

vlen :?31: (a :?32: *) -> (n :?33: Nat) -> (xs :?34: (Vec -?38- n -?36- a)) -> Nat
vlen = \a :?39: *. \n :?40: Nat. \xs :?41: (Vec -?45- n -?43- a). 
  case xs of
    VNil (a :?46: *) -> Z
    VCons (a :?47: *) (n :?48: Nat) (x :?49: a) (xs :?50: (Vec -?54- n -?52- a)) -> (S -?56- (vlen -?62- a -?60- n -?58- xs))

testVec :?63: (Vec -?67- 2 -?65- Bool)
testVec = (VCons -?79- Bool -?77- 1 -?75- True -?73- (VCons -?89- Bool -?87- Z -?85- False -?83- (VNil -?91- Bool)))

main :!R: Nat
main = (vlen -?97- Bool -?95- 2 -?93- testVec)

### Inferred definitions ###

Bool :?1: *
False :?3: Bool
Nat :?4: *
S :?6: (n :!R: Nat) -> Nat
True :?2: Bool
VCons :?16: (a :?17: *) -> (n :?18: Nat) -> (x :?19: a) -> (xs :?20: (Vec -?24- n -?22- a)) -> (Vec -?28- (S -?30- n) -?26- a)
VNil :?10: (a :?11: *) -> (Vec -?15- Z -?13- a)
Vec :?7: (_ :?8: Nat) -> (_ :?9: *) -> *
Z :?5: Nat
main :!R: Nat
  [] -> [?5_1,?6_1,?16_2,?20_1,?31,?31_1,?34,?34_1,?41_1,?50_1,?55_1,?56_1,?57_1,?58_1,?63,?92,?93,!R]
  [?11_2,?20_2] -> [?1_2,?90_2,?91_2]
  [?12_2,?20_2] -> [?21_2]
  [?13_2,?20_2] -> [?22_2]
  [?14_2,?20_2] -> [?23_2]
  [?15_2,?20_2] -> [?24_2]
  [?17_2] -> [?1_2,?78_2,?79_2]
  [?17_2,?20_2] -> [?1_2,?88_2,?89_2]
  [?18_2] -> [?5_2,?6_2,?76_2,?77_2,?80_2,?81_2]
  [?18_2,?20_2] -> [?5_2,?86_2,?87_2]
  [?19_2] -> [?2_2,?74_2,?75_2]
  [?19_2,?20_2] -> [?3_2,?84_2,?85_2]
  [?20_2] -> [?10_2,?72_2,?73_2,?82_2,?83_2]
  [?20_2,?21_2] -> [?12_2]
  [?20_2,?22_2] -> [?13_2]
  [?20_2,?23_2] -> [?14_2]
  [?20_2,?24_2] -> [?15_2]
  [?21_1] -> [?51_1]
  [?21_2] -> [?25_2]
  [?22_1] -> [?52_1]
  [?22_2] -> [?26_2]
  [?23_1] -> [?53_1]
  [?23_2] -> [?27_2]
  [?24_1] -> [?54_1]
  [?24_2] -> [?28_2]
  [?25_2] -> [?21_2,?64_2]
  [?26_2] -> [?22_2,?65_2]
  [?27_2] -> [?23_2,?66_2]
  [?28_2] -> [?24_2,?67_2]
  [?29_2] -> [?68_2,?80_2]
  [?30_2] -> [?69_2,?81_2]
  [?32] -> [?96]
  [?32_1] -> [?1,?32,?39_1,?47_1,?61_1,?62_1,?97]
  [?33] -> [?94]
  [?33_1] -> [?5,?6,?33,?40_1,?48_1,?59_1,?60_1,?95,?98,?99,?100,?101]
  [?35_1] -> [?35,?42_1,?51_1,?64_2]
  [?36_1] -> [?36,?43_1,?52_1,?65_2]
  [?37_1] -> [?37,?44_1,?53_1,?66_2]
  [?38_1] -> [?38,?45_1,?54_1,?67_2]
  [?39_1] -> [?32_1]
  [?40_1] -> [?33_1]
  [?42_1] -> [?35_1]
  [?43_1] -> [?36_1]
  [?44_1] -> [?37_1]
  [?45_1] -> [?38_1]
  [?46_1] -> [?11_1]
  [?47_1] -> [?17_1]
  [?48_1] -> [?18_1]
  [?49_1] -> [?19_1]
  [?51_1] -> [?21_1,?35_1]
  [?52_1] -> [?22_1,?36_1]
  [?53_1] -> [?23_1,?37_1]
  [?54_1] -> [?24_1,?38_1]
  [?64_2] -> [?25_2,?35_1,?64]
  [?65_2] -> [?26_2,?36_1,?65]
  [?66_2] -> [?27_2,?37_1,?66]
  [?67_2] -> [?28_2,?38_1,?67]
  [?68_2] -> [?29_2,?68,?98]
  [?69_2] -> [?30_2,?69,?99]
  [?70_2] -> [?70,?80_2,?100]
  [?71_2] -> [?71,?81_2,?101]
  [?80_2] -> [?29_2,?70_2]
  [?81_2] -> [?30_2,?71_2]
  [?98] -> [?68_2]
  [?99] -> [?69_2]
  [?100] -> [?70_2]
  [?101] -> [?71_2]

testVec :?63: (Vec -?67- 2 -?65- Bool)
  [] -> [?16,!R]
  [?11,?20] -> [?1,?90,?91]
  [?12,?20] -> [?21]
  [?13,?20] -> [?22]
  [?14,?20] -> [?23]
  [?15,?20] -> [?24]
  [?17] -> [?1,?78,?79]
  [?17,?20] -> [?1,?88,?89]
  [?18] -> [?5,?6,?76,?77,?80,?81]
  [?18,?20] -> [?5,?86,?87]
  [?19] -> [?2,?74,?75]
  [?19,?20] -> [?3,?84,?85]
  [?20] -> [?10,?72,?73,?82,?83]
  [?20,?21] -> [?12]
  [?20,?22] -> [?13]
  [?20,?23] -> [?14]
  [?20,?24] -> [?15]
  [?21] -> [?25]
  [?22] -> [?26]
  [?23] -> [?27]
  [?24] -> [?28]
  [?25] -> [?21,?64]
  [?26] -> [?22,?65]
  [?27] -> [?23,?66]
  [?28] -> [?24,?67]
  [?29] -> [?68,?80]
  [?30] -> [?69,?81]
  [?64] -> [?25]
  [?65] -> [?26]
  [?66] -> [?27]
  [?67] -> [?28]
  [?68] -> [?29]
  [?69] -> [?30]
  [?70] -> [?80]
  [?71] -> [?81]
  [?80] -> [?29,?70]
  [?81] -> [?30,?71]

vlen :?31: (a :?32: *) -> (n :?33: Nat) -> (xs :?34: (Vec -?38- n -?36- a)) -> Nat
  [] -> [?5,?6,?20,?31,?34,?41,?50,?55,?56,?57,?58,!R]
  [?21] -> [?51]
  [?22] -> [?52]
  [?23] -> [?53]
  [?24] -> [?54]
  [?32] -> [?39,?47,?61,?62]
  [?33] -> [?40,?48,?59,?60]
  [?35] -> [?42,?51]
  [?36] -> [?43,?52]
  [?37] -> [?44,?53]
  [?38] -> [?45,?54]
  [?39] -> [?32]
  [?40] -> [?33]
  [?42] -> [?35]
  [?43] -> [?36]
  [?44] -> [?37]
  [?45] -> [?38]
  [?46] -> [?11]
  [?47] -> [?17]
  [?48] -> [?18]
  [?49] -> [?19]
  [?51] -> [?21,?35]
  [?52] -> [?22,?36]
  [?53] -> [?23,?37]
  [?54] -> [?24,?38]


### Constraints ###

[] -> [?5,?5_1,?6,?6_1,?16,?16_2,?20,?20_1,?31,?31_1,?34,?34_1,?41,?41_1,?50,?50_1,?55,?55_1,?56,?56_1,?57,?57_1,?58,?58_1,?63,?92,?93,!R]
[?11,?20] -> [?1,?90,?91]
[?11_2,?20_2] -> [?1_2,?90_2,?91_2]
[?12,?20] -> [?21]
[?12_2,?20_2] -> [?21_2]
[?13,?20] -> [?22]
[?13_2,?20_2] -> [?22_2]
[?14,?20] -> [?23]
[?14_2,?20_2] -> [?23_2]
[?15,?20] -> [?24]
[?15_2,?20_2] -> [?24_2]
[?17] -> [?1,?78,?79]
[?17,?20] -> [?1,?88,?89]
[?17_2] -> [?1_2,?78_2,?79_2]
[?17_2,?20_2] -> [?1_2,?88_2,?89_2]
[?18] -> [?5,?6,?76,?77,?80,?81]
[?18,?20] -> [?5,?86,?87]
[?18_2] -> [?5_2,?6_2,?76_2,?77_2,?80_2,?81_2]
[?18_2,?20_2] -> [?5_2,?86_2,?87_2]
[?19] -> [?2,?74,?75]
[?19,?20] -> [?3,?84,?85]
[?19_2] -> [?2_2,?74_2,?75_2]
[?19_2,?20_2] -> [?3_2,?84_2,?85_2]
[?20] -> [?10,?72,?73,?82,?83]
[?20,?21] -> [?12]
[?20,?22] -> [?13]
[?20,?23] -> [?14]
[?20,?24] -> [?15]
[?20_2] -> [?10_2,?72_2,?73_2,?82_2,?83_2]
[?20_2,?21_2] -> [?12_2]
[?20_2,?22_2] -> [?13_2]
[?20_2,?23_2] -> [?14_2]
[?20_2,?24_2] -> [?15_2]
[?21] -> [?25,?51]
[?21_1] -> [?51_1]
[?21_2] -> [?25_2]
[?22] -> [?26,?52]
[?22_1] -> [?52_1]
[?22_2] -> [?26_2]
[?23] -> [?27,?53]
[?23_1] -> [?53_1]
[?23_2] -> [?27_2]
[?24] -> [?28,?54]
[?24_1] -> [?54_1]
[?24_2] -> [?28_2]
[?25] -> [?21,?64]
[?25_2] -> [?21_2,?64_2]
[?26] -> [?22,?65]
[?26_2] -> [?22_2,?65_2]
[?27] -> [?23,?66]
[?27_2] -> [?23_2,?66_2]
[?28] -> [?24,?67]
[?28_2] -> [?24_2,?67_2]
[?29] -> [?68,?80]
[?29_2] -> [?68_2,?80_2]
[?30] -> [?69,?81]
[?30_2] -> [?69_2,?81_2]
[?32] -> [?39,?47,?61,?62,?96]
[?32_1] -> [?1,?32,?39_1,?47_1,?61_1,?62_1,?97]
[?33] -> [?40,?48,?59,?60,?94]
[?33_1] -> [?5,?6,?33,?40_1,?48_1,?59_1,?60_1,?95,?98,?99,?100,?101]
[?35] -> [?42,?51]
[?35_1] -> [?35,?42_1,?51_1,?64_2]
[?36] -> [?43,?52]
[?36_1] -> [?36,?43_1,?52_1,?65_2]
[?37] -> [?44,?53]
[?37_1] -> [?37,?44_1,?53_1,?66_2]
[?38] -> [?45,?54]
[?38_1] -> [?38,?45_1,?54_1,?67_2]
[?39] -> [?32]
[?39_1] -> [?32_1]
[?40] -> [?33]
[?40_1] -> [?33_1]
[?42] -> [?35]
[?42_1] -> [?35_1]
[?43] -> [?36]
[?43_1] -> [?36_1]
[?44] -> [?37]
[?44_1] -> [?37_1]
[?45] -> [?38]
[?45_1] -> [?38_1]
[?46] -> [?11]
[?46_1] -> [?11_1]
[?47] -> [?17]
[?47_1] -> [?17_1]
[?48] -> [?18]
[?48_1] -> [?18_1]
[?49] -> [?19]
[?49_1] -> [?19_1]
[?51] -> [?21,?35]
[?51_1] -> [?21_1,?35_1]
[?52] -> [?22,?36]
[?52_1] -> [?22_1,?36_1]
[?53] -> [?23,?37]
[?53_1] -> [?23_1,?37_1]
[?54] -> [?24,?38]
[?54_1] -> [?24_1,?38_1]
[?64] -> [?25]
[?64_2] -> [?25_2,?35_1,?64]
[?65] -> [?26]
[?65_2] -> [?26_2,?36_1,?65]
[?66] -> [?27]
[?66_2] -> [?27_2,?37_1,?66]
[?67] -> [?28]
[?67_2] -> [?28_2,?38_1,?67]
[?68] -> [?29]
[?68_2] -> [?29_2,?68,?98]
[?69] -> [?30]
[?69_2] -> [?30_2,?69,?99]
[?70] -> [?80]
[?70_2] -> [?70,?80_2,?100]
[?71] -> [?81]
[?71_2] -> [?71,?81_2,?101]
[?80] -> [?29,?70]
[?80_2] -> [?29_2,?70_2]
[?81] -> [?30,?71]
[?81_2] -> [?30_2,?71_2]
[?98] -> [?68_2]
[?99] -> [?69_2]
[?100] -> [?70_2]
[?101] -> [?71_2]

### Solution ###

[?5,?5_1,?6,?6_1,?10,?16,?16_2,?20,?20_1,?31,?31_1,?34,?34_1,?41,?41_1,?50,?50_1,?55,?55_1,?56,?56_1,?57,?57_1,?58,?58_1,?63,?72,?73,?82,?83,?92,?93,!R]

### Annotated ###

Bool :E: *

True :E: Bool

False :E: Bool

Nat :E: *

Z :R: Nat

S :R: (n :R: Nat) -> Nat

Vec :E: (_ :E: Nat) -> (_ :E: *) -> *

VNil :R: (a :E: *) -> (Vec -E- Z -E- a)

VCons :R: (a :E: *) -> (n :E: Nat) -> (x :E: a) -> (xs :R: (Vec -E- n -E- a)) -> (Vec -E- (S -E- n) -E- a)

vlen :R: (a :E: *) -> (n :E: Nat) -> (xs :R: (Vec -E- n -E- a)) -> Nat
vlen = \a :E: *. \n :E: Nat. \xs :R: (Vec -E- n -E- a). 
  case xs of
    VNil (a :E: *) -> Z
    VCons (a :E: *) (n :E: Nat) (x :E: a) (xs :R: (Vec -E- n -E- a)) -> (S -R- (vlen -E- a -E- n -R- xs))

testVec :R: (Vec -E- 2 -E- Bool)
testVec = (VCons -E- Bool -E- 1 -E- True -R- (VCons -E- Bool -E- Z -E- False -R- (VNil -E- Bool)))

main :R: Nat
main = (vlen -E- Bool -E- 2 -R- testVec)

### Pruned ###

vlen = \xs. 
  case xs of
    VNil -> Z
    VCons xs -> (S (vlen xs))

testVec = (VCons (VCons VNil))

main = (vlen testVec)

### Reductions ###

unerased:
  2
erased:
  2
