-- vim: ft=agda

### Desugared ###

Void : *
Void = (axiom)

Maybe : (_ : *) -> *
Maybe = (axiom)

Just : (a : *) -> (x : a) -> (Maybe a)
Just = (axiom)

Nothing : (a : *) -> (Maybe a)
Nothing = (axiom)

Bool : *
Bool = (axiom)

True : Bool
True = (axiom)

False : Bool
False = (axiom)

retTy : (x : (Maybe Bool)) -> *
retTy = \x : (Maybe Bool). 
  case x of
    Just (a : *) (t : a) -> Bool
    Nothing (a : *) -> *

f : (x : (Maybe Bool)) -> (retTy x)
f = \x : (Maybe Bool). 
  case x of
    Just (a : *) (b : a) -> b
    Nothing (a : *) -> Bool

main  -R-  Bool
main = (f (Just Bool False))

### Metaified ###

Void :?1: *
Void = (axiom)

Maybe :?2: (_ :?3: *) -> *
Maybe = (axiom)

Just :?4: (a :?5: *) -> (x :?6: a) -> (Maybe -?7- a)
Just = (axiom)

Nothing :?8: (a :?9: *) -> (Maybe -?10- a)
Nothing = (axiom)

Bool :?11: *
Bool = (axiom)

True :?12: Bool
True = (axiom)

False :?13: Bool
False = (axiom)

retTy :?14: (x :?15: (Maybe -?16- Bool)) -> *
retTy = \x :?17: (Maybe -?18- Bool). 
  case x of
    Just (a :?20: *) (t :?21: a) -> Bool
    Nothing (a :?23: *) -> *

f :?24: (x :?25: (Maybe -?26- Bool)) -> (retTy -?27- x)
f = \x :?28: (Maybe -?29- Bool). 
  case x of
    Just (a :?31: *) (b :?32: a) -> b
    Nothing (a :?34: *) -> Bool

main :!R: Bool
main = (f -?35- (Just -?37- Bool -?36- False))

### Inferred definitions ###

Bool :?11: *

False :?13: Bool

Just :?4: (a :?5: *) -> (x :?6: a) -> (Maybe -?7- a)

Maybe :?2: (_ :?3: *) -> *

Nothing :?8: (a :?9: *) -> (Maybe -?10- a)

True :?12: Bool

Void :?1: *

f :?24: (x :?25: (Maybe -?26- Bool)) -> (retTy -?27- x)
  [?7] -> [?26_6]
  [?10] -> [?26_6]
  [?19] -> [?30]
  [?22] -> [?33]
  [?24] -> [?28]
  [?25] -> [?28]
  [?26] -> [?29]
  [?26_6] -> [?7,?10]
  [?28] -> [?11,?25,?32]
  [?29] -> [?26]
  [?30] -> [?19]
  [?31] -> [?5]
  [?32] -> [?6]
  [?33] -> [?22]
  [?34] -> [?9]

main :!R: Bool
  [] -> [?24,!R]
  [?5_8] -> [?37]
  [?6_8] -> [?36]
  [?7_7] -> [?26_7]
  [?7_8] -> [?26_7]
  [?10_7] -> [?26_7]
  [?19_7] -> [?30_7]
  [?22_7] -> [?33_7]
  [?24_7] -> [?28_7]
  [?25_7] -> [?28_7,?35]
  [?26_7] -> [?7_7,?7_8,?10_7,?29_7]
  [?28_7] -> [?11_7,?25_7,?32_7]
  [?29_7] -> [?26_7]
  [?30_7] -> [?19_7]
  [?31_7] -> [?5_7]
  [?32_7] -> [?6_7]
  [?33_7] -> [?22_7]
  [?34_7] -> [?9_7]
  [?35] -> [?4]
  [?36] -> [?13]
  [?37] -> [?11]

retTy :?14: (x :?15: (Maybe -?16- Bool)) -> *
  [?14] -> [?17]
  [?15] -> [?17]
  [?16] -> [?18]
  [?17] -> [?11,?15,!I]
  [?18] -> [?16]
  [?20] -> [?5]
  [?21] -> [?6]
  [?23] -> [?9]


### Constraints ###

[] -> [?24,!R]
[?5_8] -> [?37]
[?6_8] -> [?36]
[?7] -> [?26_6]
[?7_7] -> [?26_7]
[?7_8] -> [?26_7]
[?10] -> [?26_6]
[?10_7] -> [?26_7]
[?14] -> [?17]
[?15] -> [?17]
[?16] -> [?18]
[?17] -> [?11,?15,!I]
[?18] -> [?16]
[?19] -> [?30]
[?19_7] -> [?30_7]
[?20] -> [?5]
[?21] -> [?6]
[?22] -> [?33]
[?22_7] -> [?33_7]
[?23] -> [?9]
[?24] -> [?28]
[?24_7] -> [?28_7]
[?25] -> [?28]
[?25_7] -> [?28_7,?35]
[?26] -> [?29]
[?26_6] -> [?7,?10]
[?26_7] -> [?7_7,?7_8,?10_7,?29_7]
[?28] -> [?11,?25,?32]
[?28_7] -> [?11_7,?25_7,?32_7]
[?29] -> [?26]
[?29_7] -> [?26_7]
[?30] -> [?19]
[?30_7] -> [?19_7]
[?31] -> [?5]
[?31_7] -> [?5_7]
[?32] -> [?6]
[?32_7] -> [?6_7]
[?33] -> [?22]
[?33_7] -> [?22_7]
[?34] -> [?9]
[?34_7] -> [?9_7]
[?35] -> [?4]
[?36] -> [?13]
[?37] -> [?11]

### Solution ###

[?6,?11,?24,?25,?28,?32,!R]

### Annotated ###

Void :I: *
Void = (axiom)

Maybe :I: (_ :I: *) -> *
Maybe = (axiom)

Just :I: (a :I: *) -> (x :R: a) -> (Maybe -I- a)
Just = (axiom)

Nothing :I: (a :I: *) -> (Maybe -I- a)
Nothing = (axiom)

Bool :R: *
Bool = (axiom)

True :I: Bool
True = (axiom)

False :I: Bool
False = (axiom)

retTy :I: (x :I: (Maybe -I- Bool)) -> *
retTy = \x :I: (Maybe -I- Bool). 
  case x of
    Just (a :I: *) (t :I: a) -> Bool
    Nothing (a :I: *) -> *

f :R: (x :R: (Maybe -I- Bool)) -> (retTy -I- x)
f = \x :R: (Maybe -I- Bool). 
  case x of
    Just (a :I: *) (b :R: a) -> b
    Nothing (a :I: *) -> Bool

main :R: Bool
main = (f -I- (Just -I- Bool -I- False))

### Pruned ###

Bool = (axiom)

f = \x. 
  case x of
    Just b -> b
    Nothing -> Bool

main = f

