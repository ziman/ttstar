-- vim: ft=agda

### Desugared ###

Void : *

Maybe : (_ :: *) -> *

Just : (a :: *) -> (x :: a) -> (Maybe  a)

Nothing : (a :: *) -> (Maybe  a)

Bool : *

True : Bool

False : Bool

retTy : (x :: (Maybe  Bool)) -> *
retTy = \x :: (Maybe  Bool). 
  case x of
    Just (a : *) (t : a) -> Bool
    Nothing (a : *) -> *

f : (x :: (Maybe  Bool)) -> (retTy  x)
f = \x :: (Maybe  Bool). 
  case x of
    Just (a : *) (b : a) -> b
    Nothing (a : *) -> Bool

main  -R-  Bool
main = (f  (Just  Bool  False))

### Metaified ###

Void :?1: *

Maybe :?2: (_ :?4::?3: *) -> *

Just :?5: (a :?7::?6: *) -> (x :?9::?8: a) -> (Maybe -?10-  -?11- a)

Nothing :?12: (a :?14::?13: *) -> (Maybe -?15-  -?16- a)

Bool :?17: *

True :?18: Bool

False :?19: Bool

retTy :?20: (x :?24::?21: (Maybe -?22-  -?23- Bool)) -> *
retTy = \x :?28::?25: (Maybe -?26-  -?27- Bool). 
  case x of
    Just (a :?29: *) (t :?31: a) -> Bool
    Nothing (a :?33: *) -> *

f :?35: (x :?39::?36: (Maybe -?37-  -?38- Bool)) -> (retTy -?40-  -?41- x)
f = \x :?45::?42: (Maybe -?43-  -?44- Bool). 
  case x of
    Just (a :?46: *) (b :?48: a) -> b
    Nothing (a :?50: *) -> Bool

main :!R: Bool
main = (f -?52-  -?53- (Just -?56-  -?57- Bool -?54-  -?55- False))

### Inferred definitions ###

Bool :?17: *
False :?19: Bool
Just :?5: (a :?7::?6: *) -> (x :?9::?8: a) -> (Maybe -?10-  -?11- a)
Maybe :?2: (_ :?4::?3: *) -> *
Nothing :?12: (a :?14::?13: *) -> (Maybe -?15-  -?16- a)
True :?18: Bool
Void :?1: *
f :?35: (x :?39::?36: (Maybe -?37-  -?38- Bool)) -> (retTy -?40-  -?41- x)
  [] -> [?8,?17,?36,?42,?48,!R]
  [?10] -> [?37]
  [?11] -> [?38]
  [?15] -> [?37]
  [?16] -> [?38]
  [?37] -> [?10,?15,?43]
  [?38] -> [?11,?16,?44]
  [?39] -> [?45]
  [?43] -> [?37]
  [?44] -> [?38]
  [?45] -> [?39]
  [?46] -> [?6]
  [?50] -> [?13]

