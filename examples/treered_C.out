-- vim: ft=idris

### Desugared ###

  let
    postulate N : Type
    postulate Z :R: N
    postulate S : (x :R: N) -> N
    postulate Vec : (_x0 : N) -> (_x1 : Type) -> Type
    postulate Nil : (a : Type) -> Vec Z a
    postulate Cons : (a : Type) -> (n : N) -> (x : a) -> (xs : Vec n a) -> Vec (S n) a
    vlen : (n : N) -> (xs : Vec n N) -> N = \(n : N) (xs : Vec n N).
      case xs of
        Nil (a : Type) =>
          case a of [N] =>
            case n of [Z] =>
              n
        Cons (a : Type) (m : N) (y : N) (ys : Vec m N) =>
          case a of [N] =>
            case n of [S m] =>
              S (vlen m ys)
    main : N = vlen 1 (Cons N Z 3 (Nil N))
  in main

### Metaified ###

  let
    postulate N :1: Type
    postulate Z :R: N
    postulate S :2: (x :R: N) -> N
    postulate Vec :3: (_x0 :4: N) -> (_x1 :5: Type) -> Type
    postulate Nil :6: (a :7: Type) -> Vec -9- Z -8- a
    postulate Cons :10: (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
    vlen :20: (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N = \(n :25: N) (xs :26: Vec -28- n -27- N).
      case -29- xs of
        Nil/30 (a :31: Type) =>
          case -32- a of [N] =>
            case -33- n of [Z] =>
              n
        Cons/34 (a :35: Type) (m :36: N) (y :37: N) (ys :38: Vec -40- m -39- N) =>
          case -41- a of [N] =>
            case -42- n of [S -43- m] =>
              S -44- (vlen -46- m -45- ys)
    main :47: N = vlen -49- 1 -48- (Cons -54- N -53- Z -52- 3 -51- (Nil -58- N))
  in main

### Constraints ###

ttstar: Traceback:
1. In context:
  Type : Type

("LET",
  let
    postulate N :1: Type
    postulate Z :R: N
    postulate S :2: (x :R: N) -> N
    postulate Vec :3: (_x0 :4: N) -> (_x1 :5: Type) -> Type
    postulate Nil :6: (a :7: Type) -> Vec -9- Z -8- a
    postulate Cons :10: (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
    vlen :20: (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N = \(n :25: N) (xs :26: Vec -28- n -27- N).
      case -29- xs of
        Nil/30 (a :31: Type) =>
          case -32- a of [N] =>
            case -33- n of [Z] =>
              n
        Cons/34 (a :35: Type) (m :36: N) (y :37: N) (ys :38: Vec -40- m -39- N) =>
          case -41- a of [N] =>
            case -42- n of [S -43- m] =>
              S -44- (vlen -46- m -45- ys)
    main :47: N = vlen -49- 1 -48- (Cons -54- N -53- Z -52- 3 -51- (Nil -58- N))
  in main)

2. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("DEF-PATTERNS",vlen)

3. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("CASE-FUN",vlen)

4. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("CASE",vlen -25- n -26- xs,case -29- xs of
  Nil/30 (a :31: Type) =>
    case -32- a of [N] =>
      case -33- n of [Z] =>
        n
  Cons/34 (a :35: Type) (m :36: N) (y :37: N) (ys :38: Vec -40- m -39- N) =>
    case -41- a of [N] =>
      case -42- n of [S -43- m] =>
        S -44- (vlen -46- m -45- ys))

5. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("ALT-CTOR",Nil -31- a)

6. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("CASE",vlen -25- n -26- (Nil -31- a),case -32- a of [N] =>
  case -33- n of [Z] =>
    n)

7. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("ALT-FORCED-PAT",N)

8. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("CASE",vlen -25- n -26- (Nil -31- [N]),case -33- n of [Z] =>
  n)

9. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("ALT-FORCED-PAT",Z)

10. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("PLAIN-TERM",vlen -25- [Z] -26- (Nil -31- [N]),n)

11. In context:
  Cons : (a :11: Type) -> (n :12: N) -> (x :13: a) -> (xs :14: Vec -16- n -15- a) -> Vec -18- (S -19- n) -17- a
  N : Type
  Nil : (a :7: Type) -> Vec -9- Z -8- a
  S : (x :R: N) -> N
  Type : Type
  Vec : (_x0 :4: N) -> (_x1 :5: Type) -> Type
  Z : N
  vlen : (n :21: N) -> (xs :22: Vec -24- n -23- N) -> N

("VAR",n)

Error: UnknownName n

CallStack (from HasCallStack):
  error, called at Main.hs:130:38 in main:Main
