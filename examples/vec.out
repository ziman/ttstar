-- vim: ft=agda

### Desugared ###

postulate N : *

postulate Z : N

postulate S : (x  -R-  N) -> N

postulate Vec : (_ : N) -> (_ : *) -> *

postulate Nil : (a : *) -> Vec Z a

postulate Cons : (a : *) -> (n : N) -> (x  -R-  a) -> (xs  -R-  Vec n a) -> Vec (S n) a

plus : (_ : N) -> (_ : N) -> N 
  pat (n : N).
    plus Z n  =  n
  pat (m : N) (n : N).
    plus (S m) n  =  S (plus m n)

append : (a : *) -> (m : N) -> (n : N) -> (xs : Vec m a) -> (ys : Vec n a) -> Vec (plus m n) a 
  pat (a : *) (n : N) (ys : Vec n a).
    append a [Z] n (Nil [a]) ys  =  ys
  pat (a : *) (m : N) (n : N) (x : a) (xs : Vec m a) (ys : Vec n a).
    append a [S m] n (Cons [a] m x xs) ys  =  Cons a (plus m n) x (append a m n xs ys)

main  -R-  Vec 1 N = append N Z 1 (Nil N) (Cons N Z 42 (Nil N))

### Metaified ###

postulate N :?1: *

postulate Z :?2: N

postulate S :?3: (x :!R: N) -> N

postulate Vec :?4: (_ :?5: N) -> (_ :?6: *) -> *

postulate Nil :?7: (a :?8: *) -> Vec -?10- Z -?9- a

postulate Cons :?11: (a :?12: *) -> (n :?13: N) -> (x :!R: a) -> (xs :!R: Vec -?15- n -?14- a) -> Vec -?17- (S -?18- n) -?16- a

plus :?19: (_ :?20: N) -> (_ :?21: N) -> N 
  pat (n :?22: N).
    plus -?24- Z -?23- n  =  n
  pat (m :?25: N) (n :?26: N).
    plus -?28- (S -?29- m) -?27- n  =  S -?30- (plus -?32- m -?31- n)

append :?33: (a :?34: *) -> (m :?35: N) -> (n :?36: N) -> (xs :?37: Vec -?39- m -?38- a) -> (ys :?40: Vec -?42- n -?41- a) -> Vec -?44- (plus -?46- m -?45- n) -?43- a 
  pat (a :?47: *) (n :?48: N) (ys :?49: Vec -?51- n -?50- a).
    append -?56- a -?55- [Z] -?54- n -?53- (Nil -?57- [a]) -?52- ys  =  ys
  pat (a :?58: *) (m :?59: N) (n :?60: N) (x :?61: a) (xs :?62: Vec -?64- m -?63- a) (ys :?65: Vec -?67- n -?66- a).
    append -?72- a -?71- [S -?73- m] -?70- n -?69- (Cons -?77- [a] -?76- m -?75- x -?74- xs) -?68- ys  =  Cons -?81- a -?80- (plus -?83- m -?82- n) -?79- x -?78- (append -?88- a -?87- m -?86- n -?85- xs -?84- ys)

main :!R: Vec -?90- 1 -?89- N = append -?96- N -?95- Z -?94- 1 -?93- (Nil -?98- N) -?92- (Cons -?102- N -?101- Z -?100- 42 -?99- (Nil -?145- N))

### Inferred definitions ###

postulate Cons :?11: (a :?12: *) -> (n :?13: N) -> (x :!R: a) -> (xs :!R: Vec -?15- n -?14- a) -> Vec -?17- (S -?18- n) -?16- a

postulate N :?1: *

postulate Nil :?7: (a :?8: *) -> Vec -?10- Z -?9- a

postulate S :?3: (x :!R: N) -> N

postulate Vec :?4: (_ :?5: N) -> (_ :?6: *) -> *

postulate Z :?2: N

append :?33: (a :?34: *) -> (m :?35: N) -> (n :?36: N) -> (xs :?37: Vec -?39- m -?38- a) -> (ys :?40: Vec -?42- n -?41- a) -> Vec -?44- (plus -?46- m -?45- n) -?43- a 
  pat (a :?47: *) (n :?48: N) (ys :?49: Vec -?51- n -?50- a).
    append -?56- a -?55- [Z] -?54- n -?53- (Nil -?57- [a]) -?52- ys  =  ys
  pat (a :?58: *) (m :?59: N) (n :?60: N) (x :?61: a) (xs :?62: Vec -?64- m -?63- a) (ys :?65: Vec -?67- n -?66- a).
    append -?72- a -?71- [S -?73- m] -?70- n -?69- (Cons -?77- [a] -?76- m -?75- x -?74- xs) -?68- ys  =  Cons -?81- a -?80- (plus -?83- m -?82- n) -?79- x -?78- (append -?88- a -?87- m -?86- n -?85- xs -?84- ys)
  [] -> [?11,?33,?37,?40,?49,?52,?53,?61,?62,?65,?68,?69,?74,?75,?78,?79,?84,?85,!R]
  [?8] -> [?57]
  [?9] -> [?38]
  [?10] -> [?39]
  [?12] -> [?58,?77,?81]
  [?13] -> [?19,?76,?80]
  [?13,?20] -> [?59,?83]
  [?13,?21] -> [?60,?82]
  [?13,?82] -> [?21]
  [?13,?83] -> [?20]
  [?14] -> [?43,?63]
  [?15] -> [?44,?64]
  [?16] -> [?38,?43]
  [?17] -> [?39,?44]
  [?18] -> [?30,?73]
  [?30] -> [?18]
  [?31] -> [?82]
  [?32] -> [?83]
  [?34] -> [?56,?58,?72,?88]
  [?35] -> [?55,?59,?71,?87]
  [?36] -> [?54,?60,?70,?86]
  [?38] -> [?9,?16,?63]
  [?39] -> [?10,?17,?64]
  [?41] -> [?50,?66]
  [?42] -> [?51,?67]
  [?43] -> [?14,?16,?50]
  [?44] -> [?15,?17,?51]
  [?45] -> [?82]
  [?46] -> [?83]
  [?47] -> [?34]
  [?48] -> [?36]
  [?50] -> [?41,?43]
  [?51] -> [?42,?44]
  [?54] -> [?36]
  [?55] -> [?35]
  [?56] -> [?34]
  [?57] -> [?8]
  [?58] -> [?34]
  [?59] -> [?13]
  [?60] -> [?36]
  [?63] -> [?14,?38]
  [?64] -> [?15,?39]
  [?66] -> [?41]
  [?67] -> [?42]
  [?70] -> [?36]
  [?71] -> [?35]
  [?72] -> [?34]
  [?73] -> [?18]
  [?76] -> [?13]
  [?77] -> [?12]
  [?80] -> [?13]
  [?81] -> [?12]
  [?82] -> [?31,?45]
  [?83] -> [?32,?46]
  [?86] -> [?36]
  [?87] -> [?35]
  [?88] -> [?34]

main :!R: Vec -?90- 1 -?89- N = append -?96- N -?95- Z -?94- 1 -?93- (Nil -?98- N) -?92- (Cons -?102- N -?101- Z -?100- 42 -?99- (Nil -?145- N))
  [] -> [?33,!R]
  [?8,?37] -> [?1,?98]
  [?8,?40] -> [?1,?145]
  [?9] -> [?38]
  [?9,?40] -> [?14]
  [?10] -> [?39]
  [?10,?40] -> [?15]
  [?12,?40] -> [?1,?102]
  [?13,?40] -> [?2,?101]
  [?14,?40] -> [?9]
  [?15,?40] -> [?10]
  [?16] -> [?41]
  [?17] -> [?42]
  [?18] -> [?97]
  [?34] -> [?1,?96]
  [?35] -> [?2,?95]
  [?36] -> [?2,?3,?94,?97]
  [?37] -> [?7,?93]
  [?37,?98] -> [?8]
  [?38] -> [?9]
  [?39] -> [?10]
  [?40] -> [?2,?3,?7,?11,?92,?99,?100,?103,?104,?105,?106,?107,?108,?109,?110,?111,?112,?113,?114,?115,?116,?117,?118,?119,?120,?121,?122,?123,?124,?125,?126,?127,?128,?129,?130,?131,?132,?133,?134,?135,?136,?137,?138,?139,?140,?141,?142,?143,?144]
  [?40,?101] -> [?13]
  [?40,?102] -> [?12]
  [?40,?145] -> [?8]
  [?41] -> [?16]
  [?42] -> [?17]
  [?43] -> [?89]
  [?44] -> [?90]
  [?89] -> [?43]
  [?90] -> [?44]
  [?91] -> [?97]
  [?92] -> [?40]
  [?93] -> [?37]
  [?94] -> [?36]
  [?95] -> [?35]
  [?96] -> [?34]
  [?97] -> [?18,?91]

plus :?19: (_ :?20: N) -> (_ :?21: N) -> N 
  pat (n :?22: N).
    plus -?24- Z -?23- n  =  n
  pat (m :?25: N) (n :?26: N).
    plus -?28- (S -?29- m) -?27- n  =  S -?30- (plus -?32- m -?31- n)
  [] -> [?3,?19,?20,?21,?22,?23,?24,?25,?26,?27,?28,?29,?30,?31,?32,!R]


### Constraints ###

[] -> [?3,?11,?19,?20,?21,?22,?23,?24,?25,?26,?27,?28,?29,?30,?31,?32,?33,?37,?40,?49,?52,?53,?61,?62,?65,?68,?69,?74,?75,?78,?79,?84,?85,!R]
[?8] -> [?57]
[?8,?37] -> [?1,?98]
[?8,?40] -> [?1,?145]
[?9] -> [?38]
[?9,?40] -> [?14]
[?10] -> [?39]
[?10,?40] -> [?15]
[?12] -> [?58,?77,?81]
[?12,?40] -> [?1,?102]
[?13] -> [?19,?76,?80]
[?13,?20] -> [?59,?83]
[?13,?21] -> [?60,?82]
[?13,?40] -> [?2,?101]
[?13,?82] -> [?21]
[?13,?83] -> [?20]
[?14] -> [?43,?63]
[?14,?40] -> [?9]
[?15] -> [?44,?64]
[?15,?40] -> [?10]
[?16] -> [?38,?41,?43]
[?17] -> [?39,?42,?44]
[?18] -> [?30,?73,?97]
[?30] -> [?18]
[?31] -> [?82]
[?32] -> [?83]
[?34] -> [?1,?56,?58,?72,?88,?96]
[?35] -> [?2,?55,?59,?71,?87,?95]
[?36] -> [?2,?3,?54,?60,?70,?86,?94,?97]
[?37] -> [?7,?93]
[?37,?98] -> [?8]
[?38] -> [?9,?16,?63]
[?39] -> [?10,?17,?64]
[?40] -> [?2,?3,?7,?11,?92,?99,?100,?103,?104,?105,?106,?107,?108,?109,?110,?111,?112,?113,?114,?115,?116,?117,?118,?119,?120,?121,?122,?123,?124,?125,?126,?127,?128,?129,?130,?131,?132,?133,?134,?135,?136,?137,?138,?139,?140,?141,?142,?143,?144]
[?40,?101] -> [?13]
[?40,?102] -> [?12]
[?40,?145] -> [?8]
[?41] -> [?16,?50,?66]
[?42] -> [?17,?51,?67]
[?43] -> [?14,?16,?50,?89]
[?44] -> [?15,?17,?51,?90]
[?45] -> [?82]
[?46] -> [?83]
[?47] -> [?34]
[?48] -> [?36]
[?50] -> [?41,?43]
[?51] -> [?42,?44]
[?54] -> [?36]
[?55] -> [?35]
[?56] -> [?34]
[?57] -> [?8]
[?58] -> [?34]
[?59] -> [?13]
[?60] -> [?36]
[?63] -> [?14,?38]
[?64] -> [?15,?39]
[?66] -> [?41]
[?67] -> [?42]
[?70] -> [?36]
[?71] -> [?35]
[?72] -> [?34]
[?73] -> [?18]
[?76] -> [?13]
[?77] -> [?12]
[?80] -> [?13]
[?81] -> [?12]
[?82] -> [?31,?45]
[?83] -> [?32,?46]
[?86] -> [?36]
[?87] -> [?35]
[?88] -> [?34]
[?89] -> [?43]
[?90] -> [?44]
[?91] -> [?97]
[?92] -> [?40]
[?93] -> [?37]
[?94] -> [?36]
[?95] -> [?35]
[?96] -> [?34]
[?97] -> [?18,?91]

### Solution ###

[?2,?3,?7,?11,?18,?19,?20,?21,?22,?23,?24,?25,?26,?27,?28,?29,?30,?31,?32,?33,?37,?40,?45,?46,?49,?52,?53,?61,?62,?65,?68,?69,?73,?74,?75,?78,?79,?82,?83,?84,?85,?91,?92,?93,?97,?99,?100,?103,?104,?105,?106,?107,?108,?109,?110,?111,?112,?113,?114,?115,?116,?117,?118,?119,?120,?121,?122,?123,?124,?125,?126,?127,?128,?129,?130,?131,?132,?133,?134,?135,?136,?137,?138,?139,?140,?141,?142,?143,?144,!R]

### Annotated ###

postulate N :E: *

postulate Z :R: N

postulate S :R: (x :R: N) -> N

postulate Vec :E: (_ :E: N) -> (_ :E: *) -> *

postulate Nil :R: (a :E: *) -> Vec -E- Z -E- a

postulate Cons :R: (a :E: *) -> (n :E: N) -> (x :R: a) -> (xs :R: Vec -E- n -E- a) -> Vec -E- (S -R- n) -E- a

plus :R: (_ :R: N) -> (_ :R: N) -> N 
  pat (n :R: N).
    plus -R- Z -R- n  =  n
  pat (m :R: N) (n :R: N).
    plus -R- (S -R- m) -R- n  =  S -R- (plus -R- m -R- n)

append :R: (a :E: *) -> (m :E: N) -> (n :E: N) -> (xs :R: Vec -E- m -E- a) -> (ys :R: Vec -E- n -E- a) -> Vec -E- (plus -R- m -R- n) -E- a 
  pat (a :E: *) (n :E: N) (ys :R: Vec -E- n -E- a).
    append -E- a -E- [Z] -E- n -R- (Nil -E- [a]) -R- ys  =  ys
  pat (a :E: *) (m :E: N) (n :E: N) (x :R: a) (xs :R: Vec -E- m -E- a) (ys :R: Vec -E- n -E- a).
    append -E- a -E- [S -R- m] -E- n -R- (Cons -E- [a] -E- m -R- x -R- xs) -R- ys  =  Cons -E- a -E- (plus -R- m -R- n) -R- x -R- (append -E- a -E- m -E- n -R- xs -R- ys)

main :R: Vec -E- 1 -E- N = append -E- N -E- Z -E- 1 -R- (Nil -E- N) -R- (Cons -E- N -E- Z -R- 42 -R- (Nil -E- N))

### Specialised ###

postulate N :!E: *

postulate Z :!R: N

postulate S :!R: (x :!R: N) -> N

postulate Vec :!E: (_ :!E: N) -> (_ :!E: *) -> *

postulate Nil :!R: (a :!E: *) -> Vec -!E- Z -!E- a

postulate Cons :!R: (a :!E: *) -> (n :!E: N) -> (x :!R: a) -> (xs :!R: Vec -!E- n -!E- a) -> Vec -!E- (S -!R- n) -!E- a

plus :!R: (_ :!R: N) -> (_ :!R: N) -> N 
  pat (n :!R: N).
    plus -!R- Z -!R- n  =  n
  pat (m :!R: N) (n :!R: N).
    plus -!R- (S -!R- m) -!R- n  =  S -!R- (plus -!R- m -!R- n)

append :!R: (a :!E: *) -> (m :!E: N) -> (n :!E: N) -> (xs :!R: Vec -!E- m -!E- a) -> (ys :!R: Vec -!E- n -!E- a) -> Vec -!E- (plus -!R- m -!R- n) -!E- a 
  pat (a :!E: *) (n :!E: N) (ys :!R: Vec -!E- n -!E- a).
    append -!E- a -!E- [Z] -!E- n -!R- (Nil -!E- [a]) -!R- ys  =  ys
  pat (a :!E: *) (m :!E: N) (n :!E: N) (x :!R: a) (xs :!R: Vec -!E- m -!E- a) (ys :!R: Vec -!E- n -!E- a).
    append -!E- a -!E- [S -!R- m] -!E- n -!R- (Cons -!E- [a] -!E- m -!R- x -!R- xs) -!R- ys  =  Cons -!E- a -!E- (plus -!R- m -!R- n) -!R- x -!R- (append -!E- a -!E- m -!E- n -!R- xs -!R- ys)

main :!R: Vec -!E- 1 -!E- N = append -!E- N -!E- Z -!E- 1 -!R- (Nil -!E- N) -!R- (Cons -!E- N -!E- Z -!R- 42 -!R- (Nil -!E- N))

### Final annotation ###

postulate N :E: *

postulate Z :R: N

postulate S :R: (x :R: N) -> N

postulate Vec :E: (_ :E: N) -> (_ :E: *) -> *

postulate Nil :R: (a :E: *) -> Vec -E- Z -E- a

postulate Cons :R: (a :E: *) -> (n :E: N) -> (x :R: a) -> (xs :R: Vec -E- n -E- a) -> Vec -E- (S -R- n) -E- a

plus :R: (_ :R: N) -> (_ :R: N) -> N 
  pat (n :R: N).
    plus -R- Z -R- n  =  n
  pat (m :R: N) (n :R: N).
    plus -R- (S -R- m) -R- n  =  S -R- (plus -R- m -R- n)

append :R: (a :E: *) -> (m :E: N) -> (n :E: N) -> (xs :R: Vec -E- m -E- a) -> (ys :R: Vec -E- n -E- a) -> Vec -E- (plus -R- m -R- n) -E- a 
  pat (a :E: *) (n :E: N) (ys :R: Vec -E- n -E- a).
    append -E- a -E- [Z] -E- n -R- (Nil -E- [a]) -R- ys  =  ys
  pat (a :E: *) (m :E: N) (n :E: N) (x :R: a) (xs :R: Vec -E- m -E- a) (ys :R: Vec -E- n -E- a).
    append -E- a -E- [S -R- m] -E- n -R- (Cons -E- [a] -E- m -R- x -R- xs) -R- ys  =  Cons -E- a -E- (plus -R- m -R- n) -R- x -R- (append -E- a -E- m -E- n -R- xs -R- ys)

main :R: Vec -E- 1 -E- N = append -E- N -E- Z -E- 1 -R- (Nil -E- N) -R- (Cons -E- N -E- Z -R- 42 -R- (Nil -E- N))

### Verification ###

Verification successful.

### Pruned ###

postulate Z

postulate S

postulate Nil

postulate Cons

plus 
  pat (n).
    plus Z n  =  n
  pat (m) (n).
    plus (S m) n  =  S (plus m n)

append 
  pat (ys).
    append Nil ys  =  ys
  pat (x) (xs) (ys).
    append (Cons x xs) ys  =  Cons x (append xs ys)

main = append Nil (Cons 42 Nil)

### Normal forms ###

unerased:
  Cons N Z 42 (Nil N)
erased:
  Cons 42 Nil
