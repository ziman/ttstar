-- vim: ft=agda

### Desugared ###

postulate N : Type

postulate Z : N

postulate S : (x :ᴿ N) -> N

postulate Vec : (_ : N) -> (_ : Type) -> Type

postulate Nil : (a : Type) -> Vec Z a

postulate Cons : (a : Type) -> (n : N) -> (x :ᴿ a) -> (xs :ᴿ Vec n a) -> Vec (S n) a

plus : (m : N) -> (n : N) -> N = \(m : N) (n : N).
  case m of
    Z
      => n
    S (m' : N)
      => S (plus m' n)

append : (a : Type) -> (m : N) -> (n : N) -> (xs : Vec m a) -> (ys : Vec n a) -> Vec (plus m n) a = \(a : Type) (m : N) (n : N) (xs : Vec m a) (ys : Vec n a).
  case xs of
    Nil (a' : Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' : Type) (m' : N) (x : a') (xs' : Vec m' a')
      | a = a'
      | m = S m'
      => Cons a (plus m' n) x (append a m' n xs' ys)

main :ᴿ Vec 1 N = append N Z 1 (Nil N) (Cons N Z 42 (Nil N))

### Metaified ###

postulate N :¹ Type

postulate Z :² N

postulate S :³ (x :ᴿ N) -> N

postulate Vec :⁴ (_ :⁵ N) -> (_ :⁶ Type) -> Type

postulate Nil :⁷ (a :⁸ Type) -> Vec ¹⁰ Z ⁹ a

postulate Cons :¹¹ (a :¹² Type) -> (n :¹³ N) -> (x :ᴿ a) -> (xs :ᴿ Vec ¹⁵ n ¹⁴ a) -> Vec ¹⁷ (S ¹⁸ n) ¹⁶ a

plus :¹⁹ (m :²⁰ N) -> (n :²¹ N) -> N = \(m :²² N) (n :²³ N).
  case ²⁴ m of
    Z
      => n
    S (m' :²⁵ N)
      => S ²⁶ (plus ²⁸ m' ²⁷ n)

append :²⁹ (a :³⁰ Type) -> (m :³¹ N) -> (n :³² N) -> (xs :³³ Vec ³⁵ m ³⁴ a) -> (ys :³⁶ Vec ³⁸ n ³⁷ a) -> Vec ⁴⁰ (plus ⁴² m ⁴¹ n) ³⁹ a = \(a :⁴³ Type) (m :⁴⁴ N) (n :⁴⁵ N) (xs :⁴⁶ Vec ⁴⁸ m ⁴⁷ a) (ys :⁴⁹ Vec ⁵¹ n ⁵⁰ a).
  case ⁵² xs of
    Nil (a' :⁵³ Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :⁵⁴ Type) (m' :⁵⁵ N) (x :⁵⁶ a') (xs' :⁵⁷ Vec ⁵⁹ m' ⁵⁸ a')
      | a = a'
      | m = S ⁶⁰ m'
      => Cons ⁶⁴ a ⁶³ (plus ⁶⁶ m' ⁶⁵ n) ⁶² x ⁶¹ (append ⁷¹ a ⁷⁰ m' ⁶⁹ n ⁶⁸ xs' ⁶⁷ ys)

main :ᴿ Vec ⁷³ 1 ⁷² N = append ⁷⁹ N ⁷⁸ Z ⁷⁷ 1 ⁷⁶ (Nil ⁸¹ N) ⁷⁵ (Cons ⁸⁵ N ⁸⁴ Z ⁸³ 42 ⁸² (Nil ¹²⁸ N))

### Inferred definitions ###

postulate Cons :¹¹ (a :¹² Type) -> (n :¹³ N) -> (x :ᴿ a) -> (xs :ᴿ Vec ¹⁵ n ¹⁴ a) -> Vec ¹⁷ (S ¹⁸ n) ¹⁶ a

postulate N :¹ Type

postulate Nil :⁷ (a :⁸ Type) -> Vec ¹⁰ Z ⁹ a

postulate S :³ (x :ᴿ N) -> N

postulate Type :ᴿ Type

postulate Vec :⁴ (_ :⁵ N) -> (_ :⁶ Type) -> Type

postulate Z :² N

append :²⁹ (a :³⁰ Type) -> (m :³¹ N) -> (n :³² N) -> (xs :³³ Vec ³⁵ m ³⁴ a) -> (ys :³⁶ Vec ³⁸ n ³⁷ a) -> Vec ⁴⁰ (plus ⁴² m ⁴¹ n) ³⁹ a = \(a :⁴³ Type) (m :⁴⁴ N) (n :⁴⁵ N) (xs :⁴⁶ Vec ⁴⁸ m ⁴⁷ a) (ys :⁴⁹ Vec ⁵¹ n ⁵⁰ a).
  case ⁵² xs of
    Nil (a' :⁵³ Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :⁵⁴ Type) (m' :⁵⁵ N) (x :⁵⁶ a') (xs' :⁵⁷ Vec ⁵⁹ m' ⁵⁸ a')
      | a = a'
      | m = S ⁶⁰ m'
      => Cons ⁶⁴ a ⁶³ (plus ⁶⁶ m' ⁶⁵ n) ⁶² x ⁶¹ (append ⁷¹ a ⁷⁰ m' ⁶⁹ n ⁶⁸ xs' ⁶⁷ ys)
  [7,29] -> [33]
  [8,29] -> [33,53]
  [9,29] -> [34]
  [10,29] -> [35]
  [11,29] -> [33]
  [12,29] -> [33,54,64]
  [13,20,29] -> [55,66]
  [13,21,29] -> [45,65]
  [13,29] -> [19,33,55,63]
  [13,29,65] -> [21]
  [13,29,66] -> [20]
  [14,29] -> [33,39,58]
  [15,29] -> [33,40,59]
  [16,29] -> [34,39]
  [17,29] -> [35,40]
  [18,29] -> [26,60]
  [26,29] -> [18]
  [27,29] -> [65]
  [28,29] -> [66]
  [29] -> [11,29,33,49,52,56,57,61,62]
  [29,30] -> [43,71]
  [29,31] -> [44,55,70]
  [29,32] -> [45,69]
  [29,33] -> [46,57,68]
  [29,34] -> [9,16,58]
  [29,35] -> [10,17,59]
  [29,36] -> [49,67]
  [29,37] -> [50]
  [29,38] -> [51]
  [29,39] -> [14,16,50]
  [29,40] -> [15,17,51]
  [29,41] -> [65]
  [29,42] -> [66]
  [29,43] -> [30]
  [29,44] -> [31]
  [29,45] -> [32]
  [29,46] -> [33]
  [29,49] -> [36]
  [29,50] -> [37,39]
  [29,51] -> [38,40]
  [29,52] -> [46]
  [29,53] -> [8,33,52]
  [29,54] -> [12,33,52]
  [29,55] -> [13,33,52]
  [29,56] -> [33,52]
  [29,57] -> [33,52]
  [29,58] -> [14,33,34]
  [29,59] -> [15,33,35]
  [29,60] -> [18]
  [29,63] -> [13]
  [29,64] -> [12]
  [29,65] -> [27,41]
  [29,66] -> [28,42]
  [29,67] -> [36]
  [29,68] -> [33]
  [29,69] -> [32]
  [29,70] -> [31]
  [29,71] -> [30]

main :ᴿ Vec ⁷³ 1 ⁷² N = append ⁷⁹ N ⁷⁸ Z ⁷⁷ 1 ⁷⁶ (Nil ⁸¹ N) ⁷⁵ (Cons ⁸⁵ N ⁸⁴ Z ⁸³ 42 ⁸² (Nil ¹²⁸ N))
  [] -> [29,R]
  [8,33] -> [1,81]
  [8,36] -> [1,128]
  [9] -> [34]
  [9,36] -> [14]
  [10] -> [35]
  [10,36] -> [15]
  [12,36] -> [1,85]
  [13,36] -> [2,84]
  [14,36] -> [9]
  [15,36] -> [10]
  [16] -> [37]
  [17] -> [38]
  [18] -> [80]
  [30] -> [1,79]
  [31] -> [2,78]
  [32] -> [2,3,77,80]
  [33] -> [7,76]
  [33,81] -> [8]
  [34] -> [9]
  [35] -> [10]
  [36] -> [2,3,7,11,75,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]
  [36,84] -> [13]
  [36,85] -> [12]
  [36,128] -> [8]
  [37] -> [16]
  [38] -> [17]
  [39] -> [72]
  [40] -> [73]
  [72] -> [39]
  [73] -> [40]
  [74] -> [80]
  [75] -> [36]
  [76] -> [33]
  [77] -> [32]
  [78] -> [31]
  [79] -> [30]
  [80] -> [18,74]

plus :¹⁹ (m :²⁰ N) -> (n :²¹ N) -> N = \(m :²² N) (n :²³ N).
  case ²⁴ m of
    Z
      => n
    S (m' :²⁵ N)
      => S ²⁶ (plus ²⁸ m' ²⁷ n)
  [2,19] -> [20]
  [3,19] -> [20]
  [19] -> [3,19,20,23,24,25,26]
  [19,20] -> [22,25,28]
  [19,21] -> [23,27]
  [19,22] -> [20]
  [19,23] -> [21]
  [19,24] -> [22]
  [19,25] -> [20,24]
  [19,27] -> [21]
  [19,28] -> [20]


### Constraints ###

[] -> [29,R]
[2,19] -> [20]
[3,19] -> [20]
[7,29] -> [33]
[8,29] -> [33,53]
[8,33] -> [1,81]
[8,36] -> [1,128]
[9] -> [34]
[9,29] -> [34]
[9,36] -> [14]
[10] -> [35]
[10,29] -> [35]
[10,36] -> [15]
[11,29] -> [33]
[12,29] -> [33,54,64]
[12,36] -> [1,85]
[13,20,29] -> [55,66]
[13,21,29] -> [45,65]
[13,29] -> [19,33,55,63]
[13,29,65] -> [21]
[13,29,66] -> [20]
[13,36] -> [2,84]
[14,29] -> [33,39,58]
[14,36] -> [9]
[15,29] -> [33,40,59]
[15,36] -> [10]
[16] -> [37]
[16,29] -> [34,39]
[17] -> [38]
[17,29] -> [35,40]
[18] -> [80]
[18,29] -> [26,60]
[19] -> [3,19,20,23,24,25,26]
[19,20] -> [22,25,28]
[19,21] -> [23,27]
[19,22] -> [20]
[19,23] -> [21]
[19,24] -> [22]
[19,25] -> [20,24]
[19,27] -> [21]
[19,28] -> [20]
[26,29] -> [18]
[27,29] -> [65]
[28,29] -> [66]
[29] -> [11,29,33,49,52,56,57,61,62]
[29,30] -> [43,71]
[29,31] -> [44,55,70]
[29,32] -> [45,69]
[29,33] -> [46,57,68]
[29,34] -> [9,16,58]
[29,35] -> [10,17,59]
[29,36] -> [49,67]
[29,37] -> [50]
[29,38] -> [51]
[29,39] -> [14,16,50]
[29,40] -> [15,17,51]
[29,41] -> [65]
[29,42] -> [66]
[29,43] -> [30]
[29,44] -> [31]
[29,45] -> [32]
[29,46] -> [33]
[29,49] -> [36]
[29,50] -> [37,39]
[29,51] -> [38,40]
[29,52] -> [46]
[29,53] -> [8,33,52]
[29,54] -> [12,33,52]
[29,55] -> [13,33,52]
[29,56] -> [33,52]
[29,57] -> [33,52]
[29,58] -> [14,33,34]
[29,59] -> [15,33,35]
[29,60] -> [18]
[29,63] -> [13]
[29,64] -> [12]
[29,65] -> [27,41]
[29,66] -> [28,42]
[29,67] -> [36]
[29,68] -> [33]
[29,69] -> [32]
[29,70] -> [31]
[29,71] -> [30]
[30] -> [1,79]
[31] -> [2,78]
[32] -> [2,3,77,80]
[33] -> [7,76]
[33,81] -> [8]
[34] -> [9]
[35] -> [10]
[36] -> [2,3,7,11,75,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]
[36,84] -> [13]
[36,85] -> [12]
[36,128] -> [8]
[37] -> [16]
[38] -> [17]
[39] -> [72]
[40] -> [73]
[72] -> [39]
[73] -> [40]
[74] -> [80]
[75] -> [36]
[76] -> [33]
[77] -> [32]
[78] -> [31]
[79] -> [30]
[80] -> [18,74]

### Solution ###

[2,3,7,11,29,33,36,46,49,52,56,57,61,62,67,68,75,76,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,R]

### Annotated ###

postulate N :ᴱ Type

postulate Z :ᴿ N

postulate S :ᴿ (x :ᴿ N) -> N

postulate Vec :ᴱ (_ :ᴱ N) -> (_ :ᴱ Type) -> Type

postulate Nil :ᴿ (a :ᴱ Type) -> Vec ᴱ Z ᴱ a

postulate Cons :ᴿ (a :ᴱ Type) -> (n :ᴱ N) -> (x :ᴿ a) -> (xs :ᴿ Vec ᴱ n ᴱ a) -> Vec ᴱ (S ᴱ n) ᴱ a

plus :ᴱ (m :ᴱ N) -> (n :ᴱ N) -> N = \(m :ᴱ N) (n :ᴱ N).
  case ᴱ m of
    Z
      => n
    S (m' :ᴱ N)
      => S ᴱ (plus ᴱ m' ᴱ n)

append :ᴿ (a :ᴱ Type) -> (m :ᴱ N) -> (n :ᴱ N) -> (xs :ᴿ Vec ᴱ m ᴱ a) -> (ys :ᴿ Vec ᴱ n ᴱ a) -> Vec ᴱ (plus ᴱ m ᴱ n) ᴱ a = \(a :ᴱ Type) (m :ᴱ N) (n :ᴱ N) (xs :ᴿ Vec ᴱ m ᴱ a) (ys :ᴿ Vec ᴱ n ᴱ a).
  case ᴿ xs of
    Nil (a' :ᴱ Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :ᴱ Type) (m' :ᴱ N) (x :ᴿ a') (xs' :ᴿ Vec ᴱ m' ᴱ a')
      | a = a'
      | m = S ᴱ m'
      => Cons ᴱ a ᴱ (plus ᴱ m' ᴱ n) ᴿ x ᴿ (append ᴱ a ᴱ m' ᴱ n ᴿ xs' ᴿ ys)

main :ᴿ Vec ᴱ 1 ᴱ N = append ᴱ N ᴱ Z ᴱ 1 ᴿ (Nil ᴱ N) ᴿ (Cons ᴱ N ᴱ Z ᴿ 42 ᴿ (Nil ᴱ N))

### Specialised ###

postulate N :ᴱ Type

postulate Z :ᴿ N

postulate S :ᴿ (x :ᴿ N) -> N

postulate Vec :ᴱ (_ :ᴱ N) -> (_ :ᴱ Type) -> Type

postulate Nil :ᴿ (a :ᴱ Type) -> Vec ᴱ Z ᴱ a

postulate Cons :ᴿ (a :ᴱ Type) -> (n :ᴱ N) -> (x :ᴿ a) -> (xs :ᴿ Vec ᴱ n ᴱ a) -> Vec ᴱ (S ᴱ n) ᴱ a

plus :ᴱ (m :ᴱ N) -> (n :ᴱ N) -> N = \(m :ᴱ N) (n :ᴱ N).
  case ᴱ m of
    Z
      => n
    S (m' :ᴱ N)
      => S ᴱ (plus ᴱ m' ᴱ n)

append :ᴿ (a :ᴱ Type) -> (m :ᴱ N) -> (n :ᴱ N) -> (xs :ᴿ Vec ᴱ m ᴱ a) -> (ys :ᴿ Vec ᴱ n ᴱ a) -> Vec ᴱ (plus ᴱ m ᴱ n) ᴱ a = \(a :ᴱ Type) (m :ᴱ N) (n :ᴱ N) (xs :ᴿ Vec ᴱ m ᴱ a) (ys :ᴿ Vec ᴱ n ᴱ a).
  case ᴿ xs of
    Nil (a' :ᴱ Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :ᴱ Type) (m' :ᴱ N) (x :ᴿ a') (xs' :ᴿ Vec ᴱ m' ᴱ a')
      | a = a'
      | m = S ᴱ m'
      => Cons ᴱ a ᴱ (plus ᴱ m' ᴱ n) ᴿ x ᴿ (append ᴱ a ᴱ m' ᴱ n ᴿ xs' ᴿ ys)

main :ᴿ Vec ᴱ 1 ᴱ N = append ᴱ N ᴱ Z ᴱ 1 ᴿ (Nil ᴱ N) ᴿ (Cons ᴱ N ᴱ Z ᴿ 42 ᴿ (Nil ᴱ N))

### Final annotation ###

postulate N :ᴱ Type

postulate Z :ᴿ N

postulate S :ᴿ (x :ᴿ N) -> N

postulate Vec :ᴱ (_ :ᴱ N) -> (_ :ᴱ Type) -> Type

postulate Nil :ᴿ (a :ᴱ Type) -> Vec ᴱ Z ᴱ a

postulate Cons :ᴿ (a :ᴱ Type) -> (n :ᴱ N) -> (x :ᴿ a) -> (xs :ᴿ Vec ᴱ n ᴱ a) -> Vec ᴱ (S ᴱ n) ᴱ a

plus :ᴱ (m :ᴱ N) -> (n :ᴱ N) -> N = \(m :ᴱ N) (n :ᴱ N).
  case ᴱ m of
    Z
      => n
    S (m' :ᴱ N)
      => S ᴱ (plus ᴱ m' ᴱ n)

append :ᴿ (a :ᴱ Type) -> (m :ᴱ N) -> (n :ᴱ N) -> (xs :ᴿ Vec ᴱ m ᴱ a) -> (ys :ᴿ Vec ᴱ n ᴱ a) -> Vec ᴱ (plus ᴱ m ᴱ n) ᴱ a = \(a :ᴱ Type) (m :ᴱ N) (n :ᴱ N) (xs :ᴿ Vec ᴱ m ᴱ a) (ys :ᴿ Vec ᴱ n ᴱ a).
  case ᴿ xs of
    Nil (a' :ᴱ Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :ᴱ Type) (m' :ᴱ N) (x :ᴿ a') (xs' :ᴿ Vec ᴱ m' ᴱ a')
      | a = a'
      | m = S ᴱ m'
      => Cons ᴱ a ᴱ (plus ᴱ m' ᴱ n) ᴿ x ᴿ (append ᴱ a ᴱ m' ᴱ n ᴿ xs' ᴿ ys)

main :ᴿ Vec ᴱ 1 ᴱ N = append ᴱ N ᴱ Z ᴱ 1 ᴿ (Nil ᴱ N) ᴿ (Cons ᴱ N ᴱ Z ᴿ 42 ᴿ (Nil ᴱ N))

### Verification ###

Verification successful.

### Pruned ###

postulate Z

postulate S

postulate Nil

postulate Cons

append = \xs ys.
  case xs of
    Nil
      => ys
    Cons x xs'
      => Cons x (append xs' ys)

main = append Nil (Cons 42 Nil)

### Normal forms ###

unerased:
  Cons N Z 42 (Nil N)
erased:
  Cons 42 Nil
