-- vim: ft=agda

### Desugared ###

postulate N : Type

postulate Z : N

postulate S : (x :R: N) -> N

postulate Vec : (_ : N) -> (_ : Type) -> Type

postulate Nil : (a : Type) -> Vec Z a

postulate Cons : (a : Type) -> (n : N) -> (x :R: a) -> (xs :R: Vec n a) -> Vec (S n) a

plus : (m : N) -> (n : N) -> N = \(m : N) (n : N).
  case m of
    Z
      => n
    S (m' : N)
      => S (plus m' n)

append : (a : Type) -> (m : N) -> (n : N) -> (xs : Vec m a) -> (ys : Vec n a) -> Vec (plus m n) a = \(a : Type) (m : N) (n : N) (xs : Vec m a) (ys : Vec n a).
  case xs of
    Nil (a' : Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' : Type) (m' : N) (x : a') (xs' : Vec m' a')
      | a = a'
      | m = S m'
      => Cons a (plus m' n) x (append a m' n xs' ys)

main :R: Vec 1 N = append N Z 1 (Nil N) (Cons N Z 42 (Nil N))

### Metaified ###

postulate N :1: Type

postulate Z :2: N

postulate S :3: (x :R: N) -> N

postulate Vec :4: (_ :5: N) -> (_ :6: Type) -> Type

postulate Nil :7: (a :8: Type) -> Vec -10- Z -9- a

postulate Cons :11: (a :12: Type) -> (n :13: N) -> (x :R: a) -> (xs :R: Vec -15- n -14- a) -> Vec -17- (S -18- n) -16- a

plus :19: (m :20: N) -> (n :21: N) -> N = \(m :22: N) (n :23: N).
  case -24- m of
    Z
      => n
    S (m' :25: N)
      => S -26- (plus -28- m' -27- n)

append :29: (a :30: Type) -> (m :31: N) -> (n :32: N) -> (xs :33: Vec -35- m -34- a) -> (ys :36: Vec -38- n -37- a) -> Vec -40- (plus -42- m -41- n) -39- a = \(a :43: Type) (m :44: N) (n :45: N) (xs :46: Vec -48- m -47- a) (ys :49: Vec -51- n -50- a).
  case -52- xs of
    Nil (a' :53: Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :54: Type) (m' :55: N) (x :56: a') (xs' :57: Vec -59- m' -58- a')
      | a = a'
      | m = S -60- m'
      => Cons -64- a -63- (plus -66- m' -65- n) -62- x -61- (append -71- a -70- m' -69- n -68- xs' -67- ys)

main :R: Vec -73- 1 -72- N = append -79- N -78- Z -77- 1 -76- (Nil -81- N) -75- (Cons -85- N -84- Z -83- 42 -82- (Nil -128- N))

### Inferred definitions ###

postulate Cons :11: (a :12: Type) -> (n :13: N) -> (x :R: a) -> (xs :R: Vec -15- n -14- a) -> Vec -17- (S -18- n) -16- a {- constraints apply -}
  [1,3,5,11] -> [1]
  [1,5,11,13] -> [1]
  [3,5,11] -> [3]
  [4,11] -> [4]
  [5,11] -> [17,18]
  [5,11,13] -> [13]
  [6,11] -> [16]
  [6,11,12] -> [12]
  [11] -> [11]
  [11,16] -> [6]
  [11,17] -> [5]

postulate N :1: Type {- constraints apply -}
  [1] -> [1]

postulate Nil :7: (a :8: Type) -> Vec -10- Z -9- a {- constraints apply -}
  [1,2,5,7] -> [1]
  [2,5,7] -> [2]
  [4,7] -> [4]
  [5,7] -> [10]
  [6,7] -> [9]
  [6,7,8] -> [8]
  [7] -> [7]
  [7,9] -> [6]
  [7,10] -> [5]

postulate S :3: (x :R: N) -> N {- constraints apply -}
  [1,3] -> [1]
  [3] -> [3]

postulate Type :R: Type

postulate Vec :4: (_ :5: N) -> (_ :6: Type) -> Type {- constraints apply -}
  [4] -> [4]

postulate Z :2: N {- constraints apply -}
  [1,2] -> [1]
  [2] -> [2]

append :29: (a :30: Type) -> (m :31: N) -> (n :32: N) -> (xs :33: Vec -35- m -34- a) -> (ys :36: Vec -38- n -37- a) -> Vec -40- (plus -42- m -41- n) -39- a = \(a :43: Type) (m :44: N) (n :45: N) (xs :46: Vec -48- m -47- a) (ys :49: Vec -51- n -50- a).
  case -52- xs of
    Nil (a' :53: Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :54: Type) (m' :55: N) (x :56: a') (xs' :57: Vec -59- m' -58- a')
      | a = a'
      | m = S -60- m'
      => Cons -64- a -63- (plus -66- m' -65- n) -62- x -61- (append -71- a -70- m' -69- n -68- xs' -67- ys) {- constraints apply -}
  [1,3,5,11,29] -> [1]
  [1,3,5,19,29] -> [1]
  [1,3,13,19,29] -> [1]
  [1,5,11,13,29] -> [1]
  [1,5,19,20,25,29] -> [1]
  [1,5,19,21,23,29] -> [1]
  [1,5,19,23,29] -> [1]
  [1,5,19,29] -> [1,2,3,20,21,23,25]
  [1,5,20,29,31] -> [1]
  [1,5,21,29,32] -> [1]
  [1,5,29,33,55,57] -> [1]
  [1,5,29,36,45,49] -> [1]
  [1,5,29,45,49] -> [1]
  [1,13,19,20,25,29] -> [1]
  [1,13,19,21,23,29] -> [1]
  [1,13,19,23,29] -> [1]
  [1,13,19,29] -> [1,2,3,20,21,23,25]
  [1,13,20,29,55] -> [1]
  [1,13,21,29,45] -> [1]
  [1,29] -> [1,2,3,5,7,11,13,32,33,36,45,49,55,57]
  [1,29,31,55] -> [1]
  [1,29,32,45] -> [1]
  [2,5,19,29] -> [2,20]
  [2,13,19,29] -> [2,20]
  [2,29] -> [2,5,7,33]
  [3,5,11,29] -> [3]
  [3,5,19,29] -> [3,20]
  [3,13,19,29] -> [3,20]
  [3,29] -> [3,5,11,33]
  [4,11,29] -> [4]
  [4,29] -> [4,7,11,33,36,49,57]
  [4,29,33,57] -> [4]
  [4,29,36,49] -> [4]
  [4,29,49] -> [4]
  [5,11,13,29] -> [13]
  [5,11,29] -> [17,18]
  [5,19,20,25,29] -> [25]
  [5,19,20,29] -> [22,28]
  [5,19,21,23,29] -> [23]
  [5,19,21,29] -> [23,27]
  [5,19,22,29] -> [20]
  [5,19,23,29] -> [21,23]
  [5,19,24,29] -> [22]
  [5,19,25,29] -> [20,24,25]
  [5,19,27,29] -> [21]
  [5,19,28,29] -> [20]
  [5,19,29] -> [19,20,24,25,26]
  [5,20,29] -> [42]
  [5,20,29,31] -> [31]
  [5,21,29] -> [41]
  [5,21,29,32] -> [32]
  [5,29] -> [7,10,11,17,33,36,40,49,51,57,59]
  [5,29,33,55,57] -> [55]
  [5,29,33,57] -> [59]
  [5,29,36,45,49] -> [45]
  [5,29,36,49] -> [51]
  [5,29,41] -> [21]
  [5,29,42] -> [20]
  [5,29,45,49] -> [45]
  [5,29,49] -> [51]
  [6,11,12,29] -> [12]
  [6,11,29] -> [16]
  [6,29] -> [7,9,11,16,33,36,39,49,50,57,58]
  [6,29,30] -> [30]
  [6,29,33,54,57] -> [54]
  [6,29,33,57] -> [58]
  [6,29,36,43,49] -> [43]
  [6,29,36,49] -> [50]
  [6,29,43,49] -> [43]
  [6,29,49] -> [50]
  [7,29] -> [7,33]
  [8,29] -> [6,7,8,33,53]
  [9,29] -> [6,7,33,34]
  [10,29] -> [5,7,33,35]
  [11,16,29] -> [6]
  [11,17,29] -> [5]
  [11,29] -> [11,33]
  [12,29] -> [6,11,12,33,54,64]
  [13,19,20,25,29] -> [25]
  [13,19,20,29] -> [22,28]
  [13,19,21,23,29] -> [23]
  [13,19,21,29] -> [23,27]
  [13,19,22,29] -> [20]
  [13,19,23,29] -> [21,23]
  [13,19,24,29] -> [22]
  [13,19,25,29] -> [20,24,25]
  [13,19,27,29] -> [21]
  [13,19,28,29] -> [20]
  [13,19,29] -> [19,20,24,25,26]
  [13,20,29] -> [66]
  [13,20,29,55] -> [55]
  [13,21,29] -> [65]
  [13,21,29,45] -> [45]
  [13,29] -> [5,11,13,33,55,63]
  [13,29,65] -> [21]
  [13,29,66] -> [20]
  [14,29] -> [33,39,58]
  [15,29] -> [33,40,59]
  [16,29] -> [6,11,33,34,39]
  [17,29] -> [5,11,33,35,40]
  [18,29] -> [5,11,26,33,60]
  [26,29] -> [18]
  [27,29] -> [65]
  [28,29] -> [66]
  [29] -> [29,33,52,56,57,61,62]
  [29,30] -> [43,71]
  [29,31] -> [44,70]
  [29,31,55] -> [55]
  [29,32] -> [45,69]
  [29,32,45] -> [45]
  [29,33] -> [46,68]
  [29,33,57] -> [57]
  [29,33,57,58] -> [6]
  [29,33,57,59] -> [5]
  [29,34] -> [9,16,58]
  [29,35] -> [10,17,59]
  [29,36] -> [49,67]
  [29,36,49] -> [49]
  [29,36,49,50] -> [6]
  [29,36,49,51] -> [5]
  [29,37] -> [50]
  [29,38] -> [51]
  [29,39] -> [6,14,16,50]
  [29,40] -> [5,15,17,51]
  [29,41] -> [65]
  [29,42] -> [66]
  [29,43] -> [6,30,36,43,49]
  [29,44] -> [31]
  [29,45] -> [5,32,36,45,49]
  [29,46] -> [33]
  [29,49] -> [36,49]
  [29,49,50] -> [6]
  [29,49,51] -> [5]
  [29,50] -> [6,36,37,39,49]
  [29,51] -> [5,36,38,40,49]
  [29,52] -> [46]
  [29,53] -> [8,33,52,53]
  [29,54] -> [6,12,33,52,54,56,57]
  [29,54,56] -> [54]
  [29,55] -> [5,13,33,52,55,57]
  [29,56] -> [33,52,56]
  [29,57] -> [33,52,57]
  [29,58] -> [6,14,33,34,57]
  [29,59] -> [5,15,33,35,57]
  [29,60] -> [18]
  [29,63] -> [13]
  [29,64] -> [12]
  [29,65] -> [27,41]
  [29,66] -> [28,42]
  [29,67] -> [36]
  [29,68] -> [33]
  [29,69] -> [32]
  [29,70] -> [31]
  [29,71] -> [30]

main :R: Vec -73- 1 -72- N = append -79- N -78- Z -77- 1 -76- (Nil -81- N) -75- (Cons -85- N -84- Z -83- 42 -82- (Nil -128- N)) {- constraints apply -}
  [1,2,5] -> [1]
  [1,2,5,7,33] -> [1]
  [1,2,5,7,36] -> [1]
  [1,2,13,36] -> [1]
  [1,2,31] -> [1]
  [1,2,32] -> [1]
  [1,2,36] -> [1]
  [1,3,5] -> [1]
  [1,3,5,11,29] -> [1]
  [1,3,5,11,36] -> [1]
  [1,3,5,19,29] -> [1]
  [1,3,13,19,29] -> [1]
  [1,3,32] -> [1]
  [1,3,36] -> [1]
  [1,5,11,13,29] -> [1]
  [1,5,11,13,36] -> [1]
  [1,5,19,20,25,29] -> [1]
  [1,5,19,21,23,29] -> [1]
  [1,5,19,23,29] -> [1]
  [1,5,19,29] -> [1,2,3,20,21,23,25]
  [1,5,20,29,31] -> [1]
  [1,5,21,29,32] -> [1]
  [1,5,29,33,55,57] -> [1]
  [1,5,29,36,45,49] -> [1]
  [1,5,29,45,49] -> [1]
  [1,6] -> [1]
  [1,8,33] -> [1]
  [1,8,36] -> [1]
  [1,12,36] -> [1]
  [1,13,19,20,25,29] -> [1]
  [1,13,19,21,23,29] -> [1]
  [1,13,19,23,29] -> [1]
  [1,13,19,29] -> [1,2,3,20,21,23,25]
  [1,13,20,29,55] -> [1]
  [1,13,21,29,45] -> [1]
  [1,29] -> [1,2,3,5,7,11,13,32,33,36,45,49,55,57]
  [1,29,31,55] -> [1]
  [1,29,32,45] -> [1]
  [1,30] -> [1]
  [2,5] -> [2]
  [2,5,7,33] -> [2]
  [2,5,7,36] -> [2]
  [2,5,19,29] -> [2,20]
  [2,13,19,29] -> [2,20]
  [2,13,36] -> [2]
  [2,29] -> [2,5,7,33]
  [2,31] -> [2]
  [2,32] -> [2]
  [2,36] -> [2]
  [3,5] -> [3]
  [3,5,11,29] -> [3]
  [3,5,11,36] -> [3]
  [3,5,19,29] -> [3,20]
  [3,13,19,29] -> [3,20]
  [3,29] -> [3,5,11,33]
  [3,32] -> [3]
  [3,36] -> [3]
  [4] -> [4]
  [4,7,33] -> [4]
  [4,7,36] -> [4]
  [4,11,29] -> [4]
  [4,11,36] -> [4]
  [4,29] -> [4,7,11,33,36,49,57]
  [4,29,33,57] -> [4]
  [4,29,36,49] -> [4]
  [4,29,49] -> [4]
  [5] -> [73,74]
  [5,7,33] -> [10]
  [5,7,36] -> [10]
  [5,11,13,29] -> [13]
  [5,11,13,36] -> [13]
  [5,11,29] -> [17,18]
  [5,11,36] -> [17,18]
  [5,19,20,25,29] -> [25]
  [5,19,20,29] -> [22,28]
  [5,19,21,23,29] -> [23]
  [5,19,21,29] -> [23,27]
  [5,19,22,29] -> [20]
  [5,19,23,29] -> [21,23]
  [5,19,24,29] -> [22]
  [5,19,25,29] -> [20,24,25]
  [5,19,27,29] -> [21]
  [5,19,28,29] -> [20]
  [5,19,29] -> [19,20,24,25,26]
  [5,20,29] -> [42]
  [5,20,29,31] -> [31]
  [5,21,29] -> [41]
  [5,21,29,32] -> [32]
  [5,29] -> [7,10,11,17,33,36,40,49,51,57,59]
  [5,29,33,55,57] -> [55]
  [5,29,33,57] -> [59]
  [5,29,36,45,49] -> [45]
  [5,29,36,49] -> [51]
  [5,29,41] -> [21]
  [5,29,42] -> [20]
  [5,29,45,49] -> [45]
  [5,29,49] -> [51]
  [6] -> [72]
  [6,7,8,33] -> [8]
  [6,7,8,36] -> [8]
  [6,7,33] -> [9]
  [6,7,36] -> [9]
  [6,11,12,29] -> [12]
  [6,11,12,36] -> [12]
  [6,11,29] -> [16]
  [6,11,36] -> [16]
  [6,29] -> [7,9,11,16,33,36,39,49,50,57,58]
  [6,29,30] -> [30]
  [6,29,33,54,57] -> [54]
  [6,29,33,57] -> [58]
  [6,29,36,43,49] -> [43]
  [6,29,36,49] -> [50]
  [6,29,43,49] -> [43]
  [6,29,49] -> [50]
  [7,9,33] -> [6]
  [7,9,36] -> [6]
  [7,10,33] -> [5]
  [7,10,36] -> [5]
  [7,29] -> [7,33]
  [7,33] -> [7]
  [7,36] -> [7]
  [8,29] -> [6,7,8,33,53]
  [8,33] -> [81]
  [8,36] -> [128]
  [9] -> [34]
  [9,29] -> [6,7,33,34]
  [9,36] -> [14]
  [10] -> [35]
  [10,29] -> [5,7,33,35]
  [10,36] -> [15]
  [11,16,29] -> [6]
  [11,16,36] -> [6]
  [11,17,29] -> [5]
  [11,17,36] -> [5]
  [11,29] -> [11,33]
  [11,36] -> [11]
  [12,29] -> [6,11,12,33,54,64]
  [12,36] -> [85]
  [13,19,20,25,29] -> [25]
  [13,19,20,29] -> [22,28]
  [13,19,21,23,29] -> [23]
  [13,19,21,29] -> [23,27]
  [13,19,22,29] -> [20]
  [13,19,23,29] -> [21,23]
  [13,19,24,29] -> [22]
  [13,19,25,29] -> [20,24,25]
  [13,19,27,29] -> [21]
  [13,19,28,29] -> [20]
  [13,19,29] -> [19,20,24,25,26]
  [13,20,29] -> [66]
  [13,20,29,55] -> [55]
  [13,21,29] -> [65]
  [13,21,29,45] -> [45]
  [13,29] -> [5,11,13,33,55,63]
  [13,29,65] -> [21]
  [13,29,66] -> [20]
  [13,36] -> [84]
  [14,29] -> [33,39,58]
  [14,36] -> [9]
  [15,29] -> [33,40,59]
  [15,36] -> [10]
  [16] -> [37]
  [16,29] -> [6,11,33,34,39]
  [17] -> [38]
  [17,29] -> [5,11,33,35,40]
  [18] -> [80]
  [18,29] -> [5,11,26,33,60]
  [26,29] -> [18]
  [27,29] -> [65]
  [28,29] -> [66]
  [29] -> [29,33,52,56,57,61,62]
  [29,30] -> [43,71]
  [29,31] -> [44,70]
  [29,31,55] -> [55]
  [29,32] -> [45,69]
  [29,32,45] -> [45]
  [29,33] -> [46,68]
  [29,33,57] -> [57]
  [29,33,57,58] -> [6]
  [29,33,57,59] -> [5]
  [29,34] -> [9,16,58]
  [29,35] -> [10,17,59]
  [29,36] -> [49,67]
  [29,36,49] -> [49]
  [29,36,49,50] -> [6]
  [29,36,49,51] -> [5]
  [29,37] -> [50]
  [29,38] -> [51]
  [29,39] -> [6,14,16,50]
  [29,40] -> [5,15,17,51]
  [29,41] -> [65]
  [29,42] -> [66]
  [29,43] -> [6,30,36,43,49]
  [29,44] -> [31]
  [29,45] -> [5,32,36,45,49]
  [29,46] -> [33]
  [29,49] -> [36,49]
  [29,49,50] -> [6]
  [29,49,51] -> [5]
  [29,50] -> [6,36,37,39,49]
  [29,51] -> [5,36,38,40,49]
  [29,52] -> [46]
  [29,53] -> [8,33,52,53]
  [29,54] -> [6,12,33,52,54,56,57]
  [29,54,56] -> [54]
  [29,55] -> [5,13,33,52,55,57]
  [29,56] -> [33,52,56]
  [29,57] -> [33,52,57]
  [29,58] -> [6,14,33,34,57]
  [29,59] -> [5,15,33,35,57]
  [29,60] -> [18]
  [29,63] -> [13]
  [29,64] -> [12]
  [29,65] -> [27,41]
  [29,66] -> [28,42]
  [29,67] -> [36]
  [29,68] -> [33]
  [29,69] -> [32]
  [29,70] -> [31]
  [29,71] -> [30]
  [30] -> [79]
  [31] -> [78]
  [32] -> [77,80]
  [33] -> [76]
  [33,81] -> [8]
  [34] -> [9]
  [35] -> [10]
  [36] -> [75,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]
  [36,84] -> [13]
  [36,85] -> [12]
  [36,128] -> [8]
  [37] -> [16]
  [38] -> [17]
  [39] -> [72]
  [40] -> [73]
  [72] -> [6,39]
  [73] -> [5,40]
  [74] -> [80]
  [75] -> [36]
  [76] -> [33]
  [77] -> [32]
  [78] -> [31]
  [79] -> [30]
  [80] -> [18,74]

plus :19: (m :20: N) -> (n :21: N) -> N = \(m :22: N) (n :23: N).
  case -24- m of
    Z
      => n
    S (m' :25: N)
      => S -26- (plus -28- m' -27- n) {- constraints apply -}
  [1,3,19] -> [1]
  [1,19] -> [1,2,3,20,21,23,25]
  [1,19,20,25] -> [1]
  [1,19,21,23] -> [1]
  [1,19,23] -> [1]
  [2,19] -> [2,20]
  [3,19] -> [3,20]
  [19] -> [19,20,24,25,26]
  [19,20] -> [22,28]
  [19,20,25] -> [25]
  [19,21] -> [23,27]
  [19,21,23] -> [23]
  [19,22] -> [20]
  [19,23] -> [21,23]
  [19,24] -> [22]
  [19,25] -> [20,24,25]
  [19,27] -> [21]
  [19,28] -> [20]


### Constraints ###

[1,2,5] -> [1]
[1,2,5,7,33] -> [1]
[1,2,5,7,36] -> [1]
[1,2,13,36] -> [1]
[1,2,31] -> [1]
[1,2,32] -> [1]
[1,2,36] -> [1]
[1,3,5] -> [1]
[1,3,5,11,29] -> [1]
[1,3,5,11,36] -> [1]
[1,3,5,19,29] -> [1]
[1,3,13,19,29] -> [1]
[1,3,32] -> [1]
[1,3,36] -> [1]
[1,5,11,13,29] -> [1]
[1,5,11,13,36] -> [1]
[1,5,19,20,25,29] -> [1]
[1,5,19,21,23,29] -> [1]
[1,5,19,23,29] -> [1]
[1,5,19,29] -> [1,2,3,20,21,23,25]
[1,5,20,29,31] -> [1]
[1,5,21,29,32] -> [1]
[1,5,29,33,55,57] -> [1]
[1,5,29,36,45,49] -> [1]
[1,5,29,45,49] -> [1]
[1,6] -> [1]
[1,8,33] -> [1]
[1,8,36] -> [1]
[1,12,36] -> [1]
[1,13,19,20,25,29] -> [1]
[1,13,19,21,23,29] -> [1]
[1,13,19,23,29] -> [1]
[1,13,19,29] -> [1,2,3,20,21,23,25]
[1,13,20,29,55] -> [1]
[1,13,21,29,45] -> [1]
[1,29] -> [1,2,3,5,7,11,13,32,33,36,45,49,55,57]
[1,29,31,55] -> [1]
[1,29,32,45] -> [1]
[1,30] -> [1]
[2,5] -> [2]
[2,5,7,33] -> [2]
[2,5,7,36] -> [2]
[2,5,19,29] -> [2,20]
[2,13,19,29] -> [2,20]
[2,13,36] -> [2]
[2,29] -> [2,5,7,33]
[2,31] -> [2]
[2,32] -> [2]
[2,36] -> [2]
[3,5] -> [3]
[3,5,11,29] -> [3]
[3,5,11,36] -> [3]
[3,5,19,29] -> [3,20]
[3,13,19,29] -> [3,20]
[3,29] -> [3,5,11,33]
[3,32] -> [3]
[3,36] -> [3]
[4] -> [4]
[4,7,33] -> [4]
[4,7,36] -> [4]
[4,11,29] -> [4]
[4,11,36] -> [4]
[4,29] -> [4,7,11,33,36,49,57]
[4,29,33,57] -> [4]
[4,29,36,49] -> [4]
[4,29,49] -> [4]
[5] -> [73,74]
[5,7,33] -> [10]
[5,7,36] -> [10]
[5,11,13,29] -> [13]
[5,11,13,36] -> [13]
[5,11,29] -> [17,18]
[5,11,36] -> [17,18]
[5,19,20,25,29] -> [25]
[5,19,20,29] -> [22,28]
[5,19,21,23,29] -> [23]
[5,19,21,29] -> [23,27]
[5,19,22,29] -> [20]
[5,19,23,29] -> [21,23]
[5,19,24,29] -> [22]
[5,19,25,29] -> [20,24,25]
[5,19,27,29] -> [21]
[5,19,28,29] -> [20]
[5,19,29] -> [19,20,24,25,26]
[5,20,29] -> [42]
[5,20,29,31] -> [31]
[5,21,29] -> [41]
[5,21,29,32] -> [32]
[5,29] -> [7,10,11,17,33,36,40,49,51,57,59]
[5,29,33,55,57] -> [55]
[5,29,33,57] -> [59]
[5,29,36,45,49] -> [45]
[5,29,36,49] -> [51]
[5,29,41] -> [21]
[5,29,42] -> [20]
[5,29,45,49] -> [45]
[5,29,49] -> [51]
[6] -> [72]
[6,7,8,33] -> [8]
[6,7,8,36] -> [8]
[6,7,33] -> [9]
[6,7,36] -> [9]
[6,11,12,29] -> [12]
[6,11,12,36] -> [12]
[6,11,29] -> [16]
[6,11,36] -> [16]
[6,29] -> [7,9,11,16,33,36,39,49,50,57,58]
[6,29,30] -> [30]
[6,29,33,54,57] -> [54]
[6,29,33,57] -> [58]
[6,29,36,43,49] -> [43]
[6,29,36,49] -> [50]
[6,29,43,49] -> [43]
[6,29,49] -> [50]
[7,9,33] -> [6]
[7,9,36] -> [6]
[7,10,33] -> [5]
[7,10,36] -> [5]
[7,29] -> [7,33]
[7,33] -> [7]
[7,36] -> [7]
[8,29] -> [6,7,8,33,53]
[8,33] -> [81]
[8,36] -> [128]
[9] -> [34]
[9,29] -> [6,7,33,34]
[9,36] -> [14]
[10] -> [35]
[10,29] -> [5,7,33,35]
[10,36] -> [15]
[11,16,29] -> [6]
[11,16,36] -> [6]
[11,17,29] -> [5]
[11,17,36] -> [5]
[11,29] -> [11,33]
[11,36] -> [11]
[12,29] -> [6,11,12,33,54,64]
[12,36] -> [85]
[13,19,20,25,29] -> [25]
[13,19,20,29] -> [22,28]
[13,19,21,23,29] -> [23]
[13,19,21,29] -> [23,27]
[13,19,22,29] -> [20]
[13,19,23,29] -> [21,23]
[13,19,24,29] -> [22]
[13,19,25,29] -> [20,24,25]
[13,19,27,29] -> [21]
[13,19,28,29] -> [20]
[13,19,29] -> [19,20,24,25,26]
[13,20,29] -> [66]
[13,20,29,55] -> [55]
[13,21,29] -> [65]
[13,21,29,45] -> [45]
[13,29] -> [5,11,13,33,55,63]
[13,29,65] -> [21]
[13,29,66] -> [20]
[13,36] -> [84]
[14,29] -> [33,39,58]
[14,36] -> [9]
[15,29] -> [33,40,59]
[15,36] -> [10]
[16] -> [37]
[16,29] -> [6,11,33,34,39]
[17] -> [38]
[17,29] -> [5,11,33,35,40]
[18] -> [80]
[18,29] -> [5,11,26,33,60]
[26,29] -> [18]
[27,29] -> [65]
[28,29] -> [66]
[29] -> [29,33,52,56,57,61,62]
[29,30] -> [43,71]
[29,31] -> [44,70]
[29,31,55] -> [55]
[29,32] -> [45,69]
[29,32,45] -> [45]
[29,33] -> [46,68]
[29,33,57] -> [57]
[29,33,57,58] -> [6]
[29,33,57,59] -> [5]
[29,34] -> [9,16,58]
[29,35] -> [10,17,59]
[29,36] -> [49,67]
[29,36,49] -> [49]
[29,36,49,50] -> [6]
[29,36,49,51] -> [5]
[29,37] -> [50]
[29,38] -> [51]
[29,39] -> [6,14,16,50]
[29,40] -> [5,15,17,51]
[29,41] -> [65]
[29,42] -> [66]
[29,43] -> [6,30,36,43,49]
[29,44] -> [31]
[29,45] -> [5,32,36,45,49]
[29,46] -> [33]
[29,49] -> [36,49]
[29,49,50] -> [6]
[29,49,51] -> [5]
[29,50] -> [6,36,37,39,49]
[29,51] -> [5,36,38,40,49]
[29,52] -> [46]
[29,53] -> [8,33,52,53]
[29,54] -> [6,12,33,52,54,56,57]
[29,54,56] -> [54]
[29,55] -> [5,13,33,52,55,57]
[29,56] -> [33,52,56]
[29,57] -> [33,52,57]
[29,58] -> [6,14,33,34,57]
[29,59] -> [5,15,33,35,57]
[29,60] -> [18]
[29,63] -> [13]
[29,64] -> [12]
[29,65] -> [27,41]
[29,66] -> [28,42]
[29,67] -> [36]
[29,68] -> [33]
[29,69] -> [32]
[29,70] -> [31]
[29,71] -> [30]
[30] -> [79]
[31] -> [78]
[32] -> [77,80]
[33] -> [76]
[33,81] -> [8]
[34] -> [9]
[35] -> [10]
[36] -> [75,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]
[36,84] -> [13]
[36,85] -> [12]
[36,128] -> [8]
[37] -> [16]
[38] -> [17]
[39] -> [72]
[40] -> [73]
[72] -> [6,39]
[73] -> [5,40]
[74] -> [80]
[75] -> [36]
[76] -> [33]
[77] -> [32]
[78] -> [31]
[79] -> [30]
[80] -> [18,74]

### Solution ###

[R]

### Annotated ###

postulate N :E: Type

postulate Z :E: N

postulate S :E: (x :R: N) -> N

postulate Vec :E: (_ :E: N) -> (_ :E: Type) -> Type

postulate Nil :E: (a :E: Type) -> Vec -E- Z -E- a

postulate Cons :E: (a :E: Type) -> (n :E: N) -> (x :R: a) -> (xs :R: Vec -E- n -E- a) -> Vec -E- (S -E- n) -E- a

plus :E: (m :E: N) -> (n :E: N) -> N = \(m :E: N) (n :E: N).
  case -E- m of
    Z
      => n
    S (m' :E: N)
      => S -E- (plus -E- m' -E- n)

append :E: (a :E: Type) -> (m :E: N) -> (n :E: N) -> (xs :E: Vec -E- m -E- a) -> (ys :E: Vec -E- n -E- a) -> Vec -E- (plus -E- m -E- n) -E- a = \(a :E: Type) (m :E: N) (n :E: N) (xs :E: Vec -E- m -E- a) (ys :E: Vec -E- n -E- a).
  case -E- xs of
    Nil (a' :E: Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :E: Type) (m' :E: N) (x :E: a') (xs' :E: Vec -E- m' -E- a')
      | a = a'
      | m = S -E- m'
      => Cons -E- a -E- (plus -E- m' -E- n) -E- x -E- (append -E- a -E- m' -E- n -E- xs' -E- ys)

main :R: Vec -E- 1 -E- N = append -E- N -E- Z -E- 1 -E- (Nil -E- N) -E- (Cons -E- N -E- Z -E- 42 -E- (Nil -E- N))

### Specialised ###

postulate N :E: Type

postulate Z :E: N

postulate S :E: (x :R: N) -> N

postulate Vec :E: (_ :E: N) -> (_ :E: Type) -> Type

postulate Nil :E: (a :E: Type) -> Vec -E- Z -E- a

postulate Cons :E: (a :E: Type) -> (n :E: N) -> (x :R: a) -> (xs :R: Vec -E- n -E- a) -> Vec -E- (S -E- n) -E- a

plus :E: (m :E: N) -> (n :E: N) -> N = \(m :E: N) (n :E: N).
  case -E- m of
    Z
      => n
    S (m' :E: N)
      => S -E- (plus -E- m' -E- n)

append :E: (a :E: Type) -> (m :E: N) -> (n :E: N) -> (xs :E: Vec -E- m -E- a) -> (ys :E: Vec -E- n -E- a) -> Vec -E- (plus -E- m -E- n) -E- a = \(a :E: Type) (m :E: N) (n :E: N) (xs :E: Vec -E- m -E- a) (ys :E: Vec -E- n -E- a).
  case -E- xs of
    Nil (a' :E: Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :E: Type) (m' :E: N) (x :E: a') (xs' :E: Vec -E- m' -E- a')
      | a = a'
      | m = S -E- m'
      => Cons -E- a -E- (plus -E- m' -E- n) -E- x -E- (append -E- a -E- m' -E- n -E- xs' -E- ys)

main :R: Vec -E- 1 -E- N = append -E- N -E- Z -E- 1 -E- (Nil -E- N) -E- (Cons -E- N -E- Z -E- 42 -E- (Nil -E- N))

### Final annotation ###

postulate N :E: Type

postulate Z :E: N

postulate S :E: (x :R: N) -> N

postulate Vec :E: (_ :E: N) -> (_ :E: Type) -> Type

postulate Nil :E: (a :E: Type) -> Vec -E- Z -E- a

postulate Cons :E: (a :E: Type) -> (n :E: N) -> (x :R: a) -> (xs :R: Vec -E- n -E- a) -> Vec -E- (S -E- n) -E- a

plus :E: (m :E: N) -> (n :E: N) -> N = \(m :E: N) (n :E: N).
  case -E- m of
    Z
      => n
    S (m' :E: N)
      => S -E- (plus -E- m' -E- n)

append :E: (a :E: Type) -> (m :E: N) -> (n :E: N) -> (xs :E: Vec -E- m -E- a) -> (ys :E: Vec -E- n -E- a) -> Vec -E- (plus -E- m -E- n) -E- a = \(a :E: Type) (m :E: N) (n :E: N) (xs :E: Vec -E- m -E- a) (ys :E: Vec -E- n -E- a).
  case -E- xs of
    Nil (a' :E: Type)
      | a = a'
      | m = Z
      => ys
    Cons (a' :E: Type) (m' :E: N) (x :E: a') (xs' :E: Vec -E- m' -E- a')
      | a = a'
      | m = S -E- m'
      => Cons -E- a -E- (plus -E- m' -E- n) -E- x -E- (append -E- a -E- m' -E- n -E- xs' -E- ys)

main :R: Vec -E- 1 -E- N = append -E- N -E- Z -E- 1 -E- (Nil -E- N) -E- (Cons -E- N -E- Z -E- 42 -E- (Nil -E- N))

### Verification ###

Verification successful.

### Pruned ###

main = append

### Normal forms ###

unerased:
  Cons N Z 42 (Nil N)
erased:
