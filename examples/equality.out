-- vim: ft=agda

### Desugared ###

Bool : *

T : Bool

F : Bool

Id : (a : *) -> (x : a) -> (y : a) -> *

Refl : (a : *) -> (x : a) -> (Id x x)

not : (x : Bool) -> Bool
not = (\x : Bool. 
  case x of
    T -> F
    F -> T)

notnot : (x : Bool) -> (Id x (not (not x)))
notnot = (\x : Bool. 
  case x returns (Id x (not (not x))) of
    T -> (Refl Bool T)
    F -> (Refl Bool F))

main  -R-  (Id F (not (not F)))
main = (notnot F)

### Metaified ###

Bool :?1: *

T :?2: Bool

F :?3: Bool

Id :?4: (a :?5: *) -> (x :?6: a) -> (y :?7: a) -> *

Refl :?8: (a :?9: *) -> (x :?10: a) -> (Id -?12- x -?11- x)

not :?13: (x :?14: Bool) -> Bool
not = (\x :?15: Bool. 
  case x of
    T -> F
    F -> T)

notnot :?16: (x :?17: Bool) -> (Id -?19- x -?18- (not -?20- (not -?21- x)))
notnot = (\x :?22: Bool. 
  case x returns (Id -?24- x -?23- (not -?25- (not -?26- x))) of
    T -> (Refl -?28- Bool -?27- T)
    F -> (Refl -?30- Bool -?29- F))

main :!R: (Id -?32- F -?31- (not -?33- (not -?34- F)))
main = (notnot -?35- F)

### Inferred definitions ###

