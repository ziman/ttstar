-- vim: ft=agda

### Desugared ###

main :R: (x : Type) -> Type = (\x : Type. x)

### Metaified ###

main :R: (x :1: Type) -> Type = (\x :2: Type. x)

### Inferred definitions ###

postulate Type :R: Type

main :R: (x :1: Type) -> Type = (\x :2: Type. x) {- constraints apply -}
  [1] -> [2]
  [2] -> [1,2]


### Constraints ###

[1] -> [2]
[2] -> [1,2]

### Solution ###

[R]

### Annotated ###

main :R: (x :E: Type) -> Type = (\x :E: Type. x)

### Specialised ###

main :R: (x :E: Type) -> Type = (\x :E: Type. x)

### Final annotation ###

main :R: (x :E: Type) -> Type = (\x :E: Type. x)

### Verification ###

Verification successful.

### Pruned ###

main = x

### Normal forms ###

unerased:
  (\x : Type. x)
erased:
